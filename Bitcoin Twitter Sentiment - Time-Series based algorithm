{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "satisfactory-local",
   "metadata": {},
   "source": [
    "# Assignment 2 - Impact of Bitcoin (BTC) tweets sentiment on returns\n",
    "## Alkan Pamukchu, Andres Brito, Kristj√°n Eldur, Parth Bansal, Yan Le"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "elegant-cruise",
   "metadata": {},
   "outputs": [],
   "source": [
    "# !pip install --user --upgrade\n",
    "# !pip install --user --upgrade -e git+https://github.com/twintproject/twint.git@origin/master#egg=twint\n",
    "# !pip install langid\n",
    "# !pip install vaderSentiment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "775fda3f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Machine Learning packages\n",
    "import tensorflow as tf\n",
    "from tensorflow import keras\n",
    "from tensorflow.keras.layers import Input, Dense, Activation, Dropout\n",
    "from tensorflow.keras.models import Model\n",
    "from tensorflow.keras import optimizers, Sequential\n",
    "from tensorflow.keras.utils import to_categorical\n",
    "from sklearn.model_selection import train_test_split, TimeSeriesSplit\n",
    "from sklearn import metrics\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from tensorflow.keras.wrappers.scikit_learn import KerasClassifier\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from collections import Counter\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "plt.style.use('dark_background')\n",
    "color='c'\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "entire-baseline",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Twitter scraping and preprocessing packages\n",
    "from nltk.stem import PorterStemmer\n",
    "from nltk.tokenize import word_tokenize\n",
    "import re\n",
    "import twint\n",
    "import nest_asyncio\n",
    "import datetime as dt\n",
    "import langid\n",
    "pd.options.display.max_columns = 100\n",
    "nest_asyncio.apply()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "coated-sheep",
   "metadata": {},
   "source": [
    "### Twitter scraping and tweet preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "recorded-glory",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[!] No more data! Scraping will stop now.\n",
      "found 0 deleted tweets in this search.\n"
     ]
    }
   ],
   "source": [
    "# Configure the twitter scraper\n",
    "c = twint.Config()\n",
    "c.Search = \"Bitcoin' OR 'BTC\"\n",
    "c.Since = '2013-09-17'\n",
    "c.Store_json = True\n",
    "c.Output = \"tweet_data.json\"\n",
    "c.Hide_output = True\n",
    "c.Min_likes = 500\n",
    "c.Min_retweets = 200\n",
    "\n",
    "# Run\n",
    "twint.run.Search(c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "formed-expert",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(14908, 36)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# load the tweet data into a DataFrame\n",
    "data = pd.read_json(\"../Assignment 2/tweet_data.json\", lines = True)\n",
    "data.to_csv('Tweet_Data_Raw.csv')\n",
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "alien-removal",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>conversation_id</th>\n",
       "      <th>created_at</th>\n",
       "      <th>date</th>\n",
       "      <th>time</th>\n",
       "      <th>timezone</th>\n",
       "      <th>user_id</th>\n",
       "      <th>username</th>\n",
       "      <th>name</th>\n",
       "      <th>place</th>\n",
       "      <th>tweet</th>\n",
       "      <th>language</th>\n",
       "      <th>mentions</th>\n",
       "      <th>urls</th>\n",
       "      <th>photos</th>\n",
       "      <th>replies_count</th>\n",
       "      <th>retweets_count</th>\n",
       "      <th>likes_count</th>\n",
       "      <th>hashtags</th>\n",
       "      <th>cashtags</th>\n",
       "      <th>link</th>\n",
       "      <th>retweet</th>\n",
       "      <th>quote_url</th>\n",
       "      <th>video</th>\n",
       "      <th>thumbnail</th>\n",
       "      <th>near</th>\n",
       "      <th>geo</th>\n",
       "      <th>source</th>\n",
       "      <th>user_rt_id</th>\n",
       "      <th>user_rt</th>\n",
       "      <th>retweet_id</th>\n",
       "      <th>reply_to</th>\n",
       "      <th>retweet_date</th>\n",
       "      <th>translate</th>\n",
       "      <th>trans_src</th>\n",
       "      <th>trans_dest</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1400459812220018695</td>\n",
       "      <td>1400459812220018688</td>\n",
       "      <td>2021-06-03 15:30:13 GMT Summer Time</td>\n",
       "      <td>2021-06-03</td>\n",
       "      <td>15:30:13</td>\n",
       "      <td>100</td>\n",
       "      <td>1012436626776174592</td>\n",
       "      <td>airdropdet</td>\n",
       "      <td>AirdropDetective</td>\n",
       "      <td></td>\n",
       "      <td>üîç New #Airdrop: Bullperks  üí≤ Total Reward: Up ...</td>\n",
       "      <td>en</td>\n",
       "      <td>[]</td>\n",
       "      <td>[http://t.me/BullperksBot, https://youtu.be/KP...</td>\n",
       "      <td>[https://pbs.twimg.com/media/E29tqM6VoAkLbeO.jpg]</td>\n",
       "      <td>294</td>\n",
       "      <td>3566</td>\n",
       "      <td>3442</td>\n",
       "      <td>[airdrop, airdrops, bitcoin, crypto, airdropde...</td>\n",
       "      <td>[]</td>\n",
       "      <td>https://twitter.com/AirdropDet/status/14004598...</td>\n",
       "      <td>False</td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>https://pbs.twimg.com/media/E29tqM6VoAkLbeO.jpg</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>[]</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1400443266428977155</td>\n",
       "      <td>1400443266428977152</td>\n",
       "      <td>2021-06-03 14:24:28 GMT Summer Time</td>\n",
       "      <td>2021-06-03</td>\n",
       "      <td>14:24:28</td>\n",
       "      <td>100</td>\n",
       "      <td>1095590506225111040</td>\n",
       "      <td>tokensjil</td>\n",
       "      <td>CryptoTv</td>\n",
       "      <td></td>\n",
       "      <td>üì£ CryptoTv @Airdrop is live!  üèÜ Reward for Tas...</td>\n",
       "      <td>en</td>\n",
       "      <td>[{'screen_name': 'airdrop', 'name': 'airdrop',...</td>\n",
       "      <td>[http://t.me/CTVairdropbot]</td>\n",
       "      <td>[https://pbs.twimg.com/media/E29fuo9X0AcF1K0.jpg]</td>\n",
       "      <td>596</td>\n",
       "      <td>1129</td>\n",
       "      <td>1889</td>\n",
       "      <td>[airdrop, bitcoin, ethereum, crypto, crypto, c...</td>\n",
       "      <td>[]</td>\n",
       "      <td>https://twitter.com/TokensJil/status/140044326...</td>\n",
       "      <td>False</td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>https://pbs.twimg.com/media/E29fuo9X0AcF1K0.jpg</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>[]</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1400437984562868228</td>\n",
       "      <td>1400437984562868224</td>\n",
       "      <td>2021-06-03 14:03:29 GMT Summer Time</td>\n",
       "      <td>2021-06-03</td>\n",
       "      <td>14:03:29</td>\n",
       "      <td>100</td>\n",
       "      <td>240133655</td>\n",
       "      <td>bitcoinbro303</td>\n",
       "      <td>Bitcoin Bro üí•</td>\n",
       "      <td></td>\n",
       "      <td>$50 to 1 person who RT's and follows @Desert_F...</td>\n",
       "      <td>en</td>\n",
       "      <td>[{'screen_name': 'desert_finance', 'name': 'de...</td>\n",
       "      <td>[]</td>\n",
       "      <td>[]</td>\n",
       "      <td>558</td>\n",
       "      <td>1422</td>\n",
       "      <td>624</td>\n",
       "      <td>[]</td>\n",
       "      <td>[]</td>\n",
       "      <td>https://twitter.com/BitcoinBro303/status/14004...</td>\n",
       "      <td>False</td>\n",
       "      <td></td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>[]</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    id      conversation_id  \\\n",
       "0  1400459812220018695  1400459812220018688   \n",
       "1  1400443266428977155  1400443266428977152   \n",
       "2  1400437984562868228  1400437984562868224   \n",
       "\n",
       "                            created_at       date      time  timezone  \\\n",
       "0  2021-06-03 15:30:13 GMT Summer Time 2021-06-03  15:30:13       100   \n",
       "1  2021-06-03 14:24:28 GMT Summer Time 2021-06-03  14:24:28       100   \n",
       "2  2021-06-03 14:03:29 GMT Summer Time 2021-06-03  14:03:29       100   \n",
       "\n",
       "               user_id       username              name place  \\\n",
       "0  1012436626776174592     airdropdet  AirdropDetective         \n",
       "1  1095590506225111040      tokensjil          CryptoTv         \n",
       "2            240133655  bitcoinbro303     Bitcoin Bro üí•         \n",
       "\n",
       "                                               tweet language  \\\n",
       "0  üîç New #Airdrop: Bullperks  üí≤ Total Reward: Up ...       en   \n",
       "1  üì£ CryptoTv @Airdrop is live!  üèÜ Reward for Tas...       en   \n",
       "2  $50 to 1 person who RT's and follows @Desert_F...       en   \n",
       "\n",
       "                                            mentions  \\\n",
       "0                                                 []   \n",
       "1  [{'screen_name': 'airdrop', 'name': 'airdrop',...   \n",
       "2  [{'screen_name': 'desert_finance', 'name': 'de...   \n",
       "\n",
       "                                                urls  \\\n",
       "0  [http://t.me/BullperksBot, https://youtu.be/KP...   \n",
       "1                        [http://t.me/CTVairdropbot]   \n",
       "2                                                 []   \n",
       "\n",
       "                                              photos  replies_count  \\\n",
       "0  [https://pbs.twimg.com/media/E29tqM6VoAkLbeO.jpg]            294   \n",
       "1  [https://pbs.twimg.com/media/E29fuo9X0AcF1K0.jpg]            596   \n",
       "2                                                 []            558   \n",
       "\n",
       "   retweets_count  likes_count  \\\n",
       "0            3566         3442   \n",
       "1            1129         1889   \n",
       "2            1422          624   \n",
       "\n",
       "                                            hashtags cashtags  \\\n",
       "0  [airdrop, airdrops, bitcoin, crypto, airdropde...       []   \n",
       "1  [airdrop, bitcoin, ethereum, crypto, crypto, c...       []   \n",
       "2                                                 []       []   \n",
       "\n",
       "                                                link  retweet quote_url  \\\n",
       "0  https://twitter.com/AirdropDet/status/14004598...    False             \n",
       "1  https://twitter.com/TokensJil/status/140044326...    False             \n",
       "2  https://twitter.com/BitcoinBro303/status/14004...    False             \n",
       "\n",
       "   video                                        thumbnail near geo source  \\\n",
       "0      1  https://pbs.twimg.com/media/E29tqM6VoAkLbeO.jpg                   \n",
       "1      1  https://pbs.twimg.com/media/E29fuo9X0AcF1K0.jpg                   \n",
       "2      0                                                                    \n",
       "\n",
       "  user_rt_id user_rt retweet_id reply_to retweet_date translate trans_src  \\\n",
       "0                                     []                                    \n",
       "1                                     []                                    \n",
       "2                                     []                                    \n",
       "\n",
       "  trans_dest  \n",
       "0             \n",
       "1             \n",
       "2             "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Visualize the data and the first tweet\n",
    "data.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "protected-formula",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'üîç New #Airdrop: Bullperks  üí≤ Total Reward: Up to 1 USDT + 1500 USDT referrer pool  üî¥ Start the airdrop bot:  https://t.co/AzhntFSRAJ  üîò Do the tasks on the bot &amp; submit your data  üîò Details:  https://t.co/7tqPRwKiNP  #Airdrops #Bitcoin #crypto #AirdropDetective #NFT #Bullperks  https://t.co/Yi16Hlaksj'"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['tweet'][0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "specific-presentation",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>tweet</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2021-06-03</td>\n",
       "      <td>üîç New #Airdrop: Bullperks  üí≤ Total Reward: Up ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2021-06-03</td>\n",
       "      <td>üì£ CryptoTv @Airdrop is live!  üèÜ Reward for Tas...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2021-06-03</td>\n",
       "      <td>$50 to 1 person who RT's and follows @Desert_F...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2021-06-03</td>\n",
       "      <td>ALERT: Grayscale Adds Half a Billion in #Bitco...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2021-06-03</td>\n",
       "      <td>A group of developers,  https://t.co/WJQEkXy2a...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14903</th>\n",
       "      <td>2014-02-26</td>\n",
       "      <td>What idiot named it Bitcoin and not Cache money</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14904</th>\n",
       "      <td>2014-02-26</td>\n",
       "      <td>In lieu of Bitcoin, I‚Äôve stuck to flushing $10...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14905</th>\n",
       "      <td>2014-02-07</td>\n",
       "      <td>Apple removing the Bitcoin app after 120,000 d...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14906</th>\n",
       "      <td>2013-12-23</td>\n",
       "      <td>in Jesus time, rendering unto Caeser could tak...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14907</th>\n",
       "      <td>2013-12-02</td>\n",
       "      <td>My next record available in bitcoin n delivere...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>14071 rows √ó 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            date                                              tweet\n",
       "0     2021-06-03  üîç New #Airdrop: Bullperks  üí≤ Total Reward: Up ...\n",
       "1     2021-06-03  üì£ CryptoTv @Airdrop is live!  üèÜ Reward for Tas...\n",
       "2     2021-06-03  $50 to 1 person who RT's and follows @Desert_F...\n",
       "3     2021-06-03  ALERT: Grayscale Adds Half a Billion in #Bitco...\n",
       "4     2021-06-03  A group of developers,  https://t.co/WJQEkXy2a...\n",
       "...          ...                                                ...\n",
       "14903 2014-02-26    What idiot named it Bitcoin and not Cache money\n",
       "14904 2014-02-26  In lieu of Bitcoin, I‚Äôve stuck to flushing $10...\n",
       "14905 2014-02-07  Apple removing the Bitcoin app after 120,000 d...\n",
       "14906 2013-12-23  in Jesus time, rendering unto Caeser could tak...\n",
       "14907 2013-12-02  My next record available in bitcoin n delivere...\n",
       "\n",
       "[14071 rows x 2 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Use only english tweets and create a tweet dataframe with date and tweets\n",
    "tweets = data[data['language']=='en']\n",
    "tweet_data = pd.DataFrame(tweets, columns = (['date', 'tweet']))\n",
    "tweet_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "suitable-orleans",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>tweet</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10085</th>\n",
       "      <td>2019-08-14</td>\n",
       "      <td>bitcoin s price could fall from today s price ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4088</th>\n",
       "      <td>2021-03-11</td>\n",
       "      <td>break white hous set up coinbas account to acc...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7237</th>\n",
       "      <td>2020-12-12</td>\n",
       "      <td>y l n e d d u s then gradual bitcoin</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            date                                              tweet\n",
       "10085 2019-08-14  bitcoin s price could fall from today s price ...\n",
       "4088  2021-03-11  break white hous set up coinbas account to acc...\n",
       "7237  2020-12-12               y l n e d d u s then gradual bitcoin"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Preprocess the tweets in tweet_data\n",
    "porter = PorterStemmer()\n",
    "def mypreprocess(text):\n",
    "    # text is one tweet of the corpus\n",
    "    # lowercase the tweet\n",
    "    text =   text.lower()\n",
    "    # remove irrelevant numbers, punctuation and links\n",
    "    text =   re.sub(r'[^a-z]+',' ',text)\n",
    "    text =   re.sub('((www\\.[^\\s]+)|(https?://[^\\s]+))',' ',text)\n",
    "    text =   re.sub(r'((http)\\S+)','',text)\n",
    "    # tokenize the words\n",
    "    token1 = word_tokenize(text)\n",
    "    # stemming transformation\n",
    "    token2 = [porter.stem(t) for t in token1]\n",
    "    \n",
    "    return ' '.join(token2)\n",
    "\n",
    "tweet_data['tweet'] = tweet_data['tweet'].apply(lambda text: mypreprocess(text))\n",
    "tweet_data.sample(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "palestinian-running",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Valence Aware Dictionary and sEntiment Reasoner (VADER) is a lexicon and \n",
    "# rule-based sentiment analysis tool that is specifically attuned to sentiments expressed in social media.\n",
    "from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer\n",
    "analyzer = SentimentIntensityAnalyzer()\n",
    "\n",
    "sentiment = []\n",
    "for text in tweet_data['tweet']:\n",
    "    vs = analyzer.polarity_scores(text)\n",
    "    sentiment.append(vs['compound'])\n",
    "\n",
    "tweet_data['sentiment'] = sentiment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "driven-morgan",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>tweet</th>\n",
       "      <th>sentiment</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2021-06-03</td>\n",
       "      <td>new airdrop bullperk total reward up to usdt u...</td>\n",
       "      <td>0.6115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2021-06-03</td>\n",
       "      <td>cryptotv airdrop is live reward for task up to...</td>\n",
       "      <td>0.8126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2021-06-03</td>\n",
       "      <td>to person who rt s and follow desert financ rt...</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2021-06-03</td>\n",
       "      <td>alert grayscal add half a billion in bitcoin a...</td>\n",
       "      <td>0.2960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2021-06-03</td>\n",
       "      <td>a group of develop t co wjqekxi am just comple...</td>\n",
       "      <td>0.0258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14903</th>\n",
       "      <td>2014-02-26</td>\n",
       "      <td>what idiot name it bitcoin and not cach money</td>\n",
       "      <td>-0.5106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14904</th>\n",
       "      <td>2014-02-26</td>\n",
       "      <td>in lieu of bitcoin i ve stuck to flush bill do...</td>\n",
       "      <td>-0.1280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14905</th>\n",
       "      <td>2014-02-07</td>\n",
       "      <td>appl remov the bitcoin app after download is j...</td>\n",
       "      <td>-0.7783</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14906</th>\n",
       "      <td>2013-12-23</td>\n",
       "      <td>in jesu time render unto caeser could take up ...</td>\n",
       "      <td>0.3612</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14907</th>\n",
       "      <td>2013-12-02</td>\n",
       "      <td>my next record avail in bitcoin n deliv in a d...</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>14071 rows √ó 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            date                                              tweet  sentiment\n",
       "0     2021-06-03  new airdrop bullperk total reward up to usdt u...     0.6115\n",
       "1     2021-06-03  cryptotv airdrop is live reward for task up to...     0.8126\n",
       "2     2021-06-03  to person who rt s and follow desert financ rt...     0.0000\n",
       "3     2021-06-03  alert grayscal add half a billion in bitcoin a...     0.2960\n",
       "4     2021-06-03  a group of develop t co wjqekxi am just comple...     0.0258\n",
       "...          ...                                                ...        ...\n",
       "14903 2014-02-26      what idiot name it bitcoin and not cach money    -0.5106\n",
       "14904 2014-02-26  in lieu of bitcoin i ve stuck to flush bill do...    -0.1280\n",
       "14905 2014-02-07  appl remov the bitcoin app after download is j...    -0.7783\n",
       "14906 2013-12-23  in jesu time render unto caeser could take up ...     0.3612\n",
       "14907 2013-12-02  my next record avail in bitcoin n deliv in a d...     0.0000\n",
       "\n",
       "[14071 rows x 3 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tweet_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "absent-delay",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'alert grayscal add half a billion in bitcoin and other crypto in just one day'"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tweet_data['tweet'][3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "atmospheric-furniture",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.296"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tweet_data['sentiment'][3]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "progressive-median",
   "metadata": {},
   "source": [
    "# Model creation"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "413d0545",
   "metadata": {},
   "source": [
    "#### Loading in data and creating technical variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "25055740",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = pd.read_csv(\"btc_data.csv\")\n",
    "data['Target'] = ((data.returns + 1).rolling(5, min_periods = 5).agg(lambda x : x.prod()) - 1).shift(-5)\n",
    "data.loc[data.Target>=0.025,\"Target\"] = 1\n",
    "data.loc[data.Target<=-0.025,\"Target\"] = -1\n",
    "data.loc[(data.Target>=-0.025) & (data.Target<=0.025) ,\"Target\"] = 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "3916ecd5",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-40-a19065cb3cf8>:4: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data['days_volume_sum'][i] = data['Volume'][i-n+1:i+1].sum()\n",
      "<ipython-input-40-a19065cb3cf8>:8: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data['days_low_price'][i] = data[\"Low\"][i-n+1:i+1].min()\n",
      "<ipython-input-40-a19065cb3cf8>:12: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data['days_high_price'][i] = data[\"High\"][i-n+1:i+1].max()\n"
     ]
    }
   ],
   "source": [
    "n=5\n",
    "data['days_volume_sum'] = np.zeros(shape=(len(data),1))\n",
    "for i in range(2, len(data)):\n",
    "    data['days_volume_sum'][i] = data['Volume'][i-n+1:i+1].sum()\n",
    "    \n",
    "data['days_low_price'] = np.zeros(shape=(len(data),1))\n",
    "for i in range(2, len(data)):\n",
    "    data['days_low_price'][i] = data[\"Low\"][i-n+1:i+1].min()\n",
    "\n",
    "data['days_high_price'] = np.zeros(shape=(len(data),1))\n",
    "for i in range(2, len(data)):\n",
    "    data['days_high_price'][i] = data[\"High\"][i-n+1:i+1].max()\n",
    "\n",
    "data[\"VWAP\"] = ((data['days_high_price']+data['days_low_price']+data[\"Close\"])/3) * data['days_volume_sum']\n",
    "data[\"volume_price\"] = data['Close'].pct_change(n)*data['days_volume_sum']\n",
    "data.drop(['days_volume_sum', 'days_low_price','days_high_price'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "75efba55",
   "metadata": {},
   "outputs": [],
   "source": [
    "def slow_stochastic_oscillator(df, open_price, high_price, low_price, close_price):\n",
    "    df[\"14-high\"] = df[high_price].rolling(14, min_periods=1).max()\n",
    "    df[\"14-low\"] = df[low_price].rolling(14, min_periods=1).min()\n",
    "    df['%K']= (df[close_price] - df['14-low'])*100/(df['14-high'] - df['14-low'])\n",
    "    df['%D'] = df['%K'].rolling(3, min_periods=1).mean()\n",
    "    df.drop([\"14-high\", \"14-low\",'%K'], axis=1, inplace=True)\n",
    "slow_stochastic_oscillator(data, 'Open', 'High', 'Low', 'Close')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "168e5a54",
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy.stats import skew \n",
    "def skewness(df, price, n=30):\n",
    "    df['skewness'] = price.pct_change().rolling(window=n).skew()\n",
    "skewness(data, data['Close'], n=30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "6a020434",
   "metadata": {},
   "outputs": [],
   "source": [
    "def volatility(df, price, n=30):\n",
    "    df['volatility'] = price.pct_change().rolling(window=n).std()   \n",
    "volatility(data, data['Close'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "ee657729",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-44-a711712abb64>:6: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  returns['momentum_20_50'][i] = 1\n",
      "<ipython-input-44-a711712abb64>:10: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  returns['momentum_8_20'][i] = 1\n",
      "<ipython-input-44-a711712abb64>:12: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  returns['momentum_8_20'][i] = 0\n",
      "<ipython-input-44-a711712abb64>:8: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  returns['momentum_20_50'][i] = 0\n"
     ]
    }
   ],
   "source": [
    "def momentum(returns, price):\n",
    "    returns['momentum_20_50'] = np.zeros(shape=(len(price),1))\n",
    "    returns['momentum_8_20'] = np.zeros(shape=(len(price),1))\n",
    "    for i in range(49, len(price)):\n",
    "        if price[i-19:i+1].mean() > price[i-49:i+1].mean():\n",
    "            returns['momentum_20_50'][i] = 1\n",
    "        if price[i-19:i+1].mean() < price[i-49:i+1].mean():\n",
    "            returns['momentum_20_50'][i] = 0\n",
    "        if price[i-7:i+1].mean() > price[i-19:i+1].mean():\n",
    "            returns['momentum_8_20'][i] = 1\n",
    "        if price[i-7:i+1].mean() < price[i-19:i+1].mean():\n",
    "            returns['momentum_8_20'][i] = 0\n",
    "            \n",
    "momentum(data, data['Close'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "b83e2027",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-45-585187a5436a>:6: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  returns['dist_to_bottom'][i] = (price[i]- price[i-n+1:i+1].min())/price[i]\n",
      "<ipython-input-45-585187a5436a>:7: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  returns['dist_to_top'][i] = (price[i-n+1:i+1].max()- price[i])/price[i]\n"
     ]
    }
   ],
   "source": [
    "def top_bottom_distance(returns, price, n=30):\n",
    "    returns['dist_to_bottom'] = np.zeros(shape=(len(price),1))\n",
    "    returns['dist_to_top'] = np.zeros(shape=(len(price),1))\n",
    "    \n",
    "    for i in range(n, len(price)):\n",
    "        returns['dist_to_bottom'][i] = (price[i]- price[i-n+1:i+1].min())/price[i]\n",
    "        returns['dist_to_top'][i] = (price[i-n+1:i+1].max()- price[i])/price[i]\n",
    "        \n",
    "top_bottom_distance(data, data['Close'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "3b865bb7",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-46-795f488a016e>:10: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data['macd_rsi'][i] = 1\n",
      "<ipython-input-46-795f488a016e>:12: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  data['macd_rsi'][i] = 0\n"
     ]
    }
   ],
   "source": [
    "price = data['Close']\n",
    "data['rsi_change'] = np.zeros(shape=(len(price),1))\n",
    "data['macd_rsi'] = np.zeros(shape=(len(price),1))\n",
    "    \n",
    "    \n",
    "data['rsi_change'] = data['RSI'].pct_change(5)\n",
    "data['macd_rsi'] = np.zeros(shape=(len(price),1))\n",
    "for i in range(25, len(price)):\n",
    "    if data['RSI'][i-11:i+1].mean() > data['RSI'][i-25:i+1].mean():\n",
    "        data['macd_rsi'][i] = 1\n",
    "    if data['RSI'][i-11:i+1].mean() < data['RSI'][i-22:i+1].mean():\n",
    "        data['macd_rsi'][i] = 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "b6450d62",
   "metadata": {},
   "outputs": [],
   "source": [
    "def volume_price_actions(df, close, volume, n=5):\n",
    "    df['{}dayvolume_price'.format(n)] = df[volume].pct_change(n)* df[close].pct_change(n) \n",
    "volume_price_actions(data, 'Close', 'Volume')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "b8084897",
   "metadata": {},
   "outputs": [],
   "source": [
    "def distance_to_top_and_bottom(df, price):\n",
    "    bollinger_up = data['BollingerUp']\n",
    "    bollinger_down = data['BollingerDn']\n",
    "    df['dist_top_band']= (bollinger_up - price)/price\n",
    "    df['dist_bottom_band']= (price - bollinger_down)/price\n",
    "        \n",
    "distance_to_top_and_bottom(data, data['Close'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "f8745588",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-49-4f6e9c8cd297>:4: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df['difference_from_mean'][i] = (price[i] - price[i-n:i].mean())/price[i-n:i].mean()\n"
     ]
    }
   ],
   "source": [
    "def difference_from_mean(df, price, n=30):\n",
    "    df['difference_from_mean'] = np.zeros(shape=(len(price),1))\n",
    "    for i in range(n, len(price)):\n",
    "        df['difference_from_mean'][i] = (price[i] - price[i-n:i].mean())/price[i-n:i].mean()\n",
    "difference_from_mean(data, data['Close'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "94418625",
   "metadata": {},
   "source": [
    "# NN Tuning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "a9bc7824",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Counter({1.0: 369, -1.0: 320, 0.0: 273})\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "((962, 44), (962, 3))"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sentiment_data = pd.read_csv(\"Tweet_Data_Sentiment.csv\").drop(columns=[\"Unnamed: 0\"])\n",
    "sentiment = pd.DataFrame(sentiment_data.groupby('date')[\"sentiment\"].mean())\n",
    "sentiment = sentiment.reset_index()\n",
    "sentiment.columns.values[0] = \"Date\"\n",
    "data = data.merge(sentiment, how= \"left\", on = \"Date\")\n",
    "tscv = TimeSeriesSplit(n_splits=3)\n",
    "\n",
    "data.dropna(inplace=True)\n",
    "X = data.drop(columns=[\"Date\",\"Target\",\"Close\"])\n",
    "Y = data.Target\n",
    "X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size = 0.33,shuffle = False)\n",
    "print(Counter(Y_train))\n",
    "Y_train = to_categorical(Y_train,3)\n",
    "Y_test = to_categorical(Y_test,3)\n",
    "sc = StandardScaler()\n",
    "X_train = sc.fit_transform(X_train)\n",
    "X_test  = sc.transform(X_test)\n",
    "X_train.shape,Y_train.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8bad5932",
   "metadata": {},
   "source": [
    "### Sentiment model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "822e6f39",
   "metadata": {},
   "outputs": [],
   "source": [
    "param_grid = { 'layers':[(128,64), (32,16), (64,32), (128, \"dropout\", 32), \n",
    "                      (512,256,128),(256,128,64),(512,\"dropout\",128,64),\n",
    "                      (512,256,\"dropout\",64), (1024,512,256,128),\n",
    "                      (512,256,128,64), (256,128,64,32),(1024,512,\"dropout\",64,32),\n",
    "                      (1024,512,256,\"dropout\",64)],\n",
    "              'dropout_rate': [0.1,0.33,0.5],\n",
    "              'activation_function': [\"sigmoid\",\"tanh\",\"relu\"],\n",
    "              'output_function':['softmax'],\n",
    "              'optimizer' : ['SGD', 'RMSprop', 'Adam'],\n",
    "              'learning_rate':[0.001,0.01,0.0001]\n",
    "            }\n",
    "\n",
    "def create_model(layers=[],dropout_rate = 0.1, learning_rate = 0.001,\n",
    "                 activation_function = \"relu\", output_function = \"softmax\",\n",
    "                 optimizer = \"Adam\"):\n",
    "    \n",
    "    model = Sequential()\n",
    "    model.add(Dense(layers[0], input_dim = 44, activation=activation_function))\n",
    "    for layer in layers[1:]:\n",
    "        if layer == \"dropout\":\n",
    "            model.add(Dropout(dropout_rate))\n",
    "        else:\n",
    "            model.add(Dense(layer,activation=activation_function))\n",
    "    model.add(Dense(3,activation=output_function))\n",
    "    \n",
    "    if optimizer == \"Adam\":\n",
    "        opt = optimizers.Adam(learning_rate = learning_rate)\n",
    "    elif optimizer == \"SGD\":\n",
    "        opt = optimizers.SGD(learning_rate = learning_rate)\n",
    "    else:\n",
    "        opt = optimizers.RMSprop(learning_rate = learning_rate)\n",
    "    \n",
    "    model.compile(loss='categorical_crossentropy' , optimizer=opt, metrics=[\"accuracy\"])\n",
    "    \n",
    "    return model\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "00874430",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/100\n",
      "31/31 [==============================] - 0s 613us/step - loss: 1.2728 - accuracy: 0.2817\n",
      "Epoch 2/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.2618 - accuracy: 0.2869\n",
      "Epoch 3/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.2524 - accuracy: 0.2838\n",
      "Epoch 4/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.2430 - accuracy: 0.2921\n",
      "Epoch 5/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.2341 - accuracy: 0.2911\n",
      "Epoch 6/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.2254 - accuracy: 0.2869\n",
      "Epoch 7/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.2177 - accuracy: 0.2869\n",
      "Epoch 8/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.2105 - accuracy: 0.2838\n",
      "Epoch 9/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.2036 - accuracy: 0.2890\n",
      "Epoch 10/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.1971 - accuracy: 0.2921\n",
      "Epoch 11/100\n",
      "31/31 [==============================] - 0s 613us/step - loss: 1.1912 - accuracy: 0.3025\n",
      "Epoch 12/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.1848 - accuracy: 0.3119\n",
      "Epoch 13/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.1795 - accuracy: 0.3098\n",
      "Epoch 14/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.1741 - accuracy: 0.3087\n",
      "Epoch 15/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.1691 - accuracy: 0.3098\n",
      "Epoch 16/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.1646 - accuracy: 0.3108\n",
      "Epoch 17/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.1605 - accuracy: 0.3108\n",
      "Epoch 18/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.1565 - accuracy: 0.3129\n",
      "Epoch 19/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.1520 - accuracy: 0.3160\n",
      "Epoch 20/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.1483 - accuracy: 0.3139\n",
      "Epoch 21/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.1450 - accuracy: 0.3108\n",
      "Epoch 22/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.1415 - accuracy: 0.3170\n",
      "Epoch 23/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.1383 - accuracy: 0.3191\n",
      "Epoch 24/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.1354 - accuracy: 0.3264\n",
      "Epoch 25/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.1323 - accuracy: 0.3264\n",
      "Epoch 26/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.1300 - accuracy: 0.3316\n",
      "Epoch 27/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.1272 - accuracy: 0.3358\n",
      "Epoch 28/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.1248 - accuracy: 0.3430\n",
      "Epoch 29/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.1223 - accuracy: 0.3410\n",
      "Epoch 30/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.1201 - accuracy: 0.3441\n",
      "Epoch 31/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.1180 - accuracy: 0.3451\n",
      "Epoch 32/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.1158 - accuracy: 0.3482\n",
      "Epoch 33/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.1138 - accuracy: 0.3545\n",
      "Epoch 34/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.1119 - accuracy: 0.3607\n",
      "Epoch 35/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.1099 - accuracy: 0.3607\n",
      "Epoch 36/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.1080 - accuracy: 0.3607\n",
      "Epoch 37/100\n",
      "31/31 [==============================] - 0s 517us/step - loss: 1.1063 - accuracy: 0.3607\n",
      "Epoch 38/100\n",
      "31/31 [==============================] - 0s 517us/step - loss: 1.1048 - accuracy: 0.3659\n",
      "Epoch 39/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.1033 - accuracy: 0.3659\n",
      "Epoch 40/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.1016 - accuracy: 0.3701\n",
      "Epoch 41/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.1003 - accuracy: 0.3721\n",
      "Epoch 42/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0991 - accuracy: 0.3742\n",
      "Epoch 43/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0978 - accuracy: 0.3794\n",
      "Epoch 44/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0967 - accuracy: 0.3836\n",
      "Epoch 45/100\n",
      "31/31 [==============================] - 0s 517us/step - loss: 1.0955 - accuracy: 0.3836\n",
      "Epoch 46/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0944 - accuracy: 0.3867\n",
      "Epoch 47/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0932 - accuracy: 0.3857\n",
      "Epoch 48/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0920 - accuracy: 0.3898\n",
      "Epoch 49/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0909 - accuracy: 0.3857\n",
      "Epoch 50/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0899 - accuracy: 0.3888\n",
      "Epoch 51/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0889 - accuracy: 0.3929\n",
      "Epoch 52/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0878 - accuracy: 0.3919\n",
      "Epoch 53/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0869 - accuracy: 0.3919\n",
      "Epoch 54/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0860 - accuracy: 0.3929\n",
      "Epoch 55/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0850 - accuracy: 0.3919\n",
      "Epoch 56/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0841 - accuracy: 0.3919\n",
      "Epoch 57/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0831 - accuracy: 0.3960\n",
      "Epoch 58/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0822 - accuracy: 0.3960\n",
      "Epoch 59/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0813 - accuracy: 0.4023\n",
      "Epoch 60/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0804 - accuracy: 0.4033\n",
      "Epoch 61/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0796 - accuracy: 0.4044\n",
      "Epoch 62/100\n",
      "31/31 [==============================] - 0s 517us/step - loss: 1.0787 - accuracy: 0.4085\n",
      "Epoch 63/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0779 - accuracy: 0.4096\n",
      "Epoch 64/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0771 - accuracy: 0.4116\n",
      "Epoch 65/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0764 - accuracy: 0.4106\n",
      "Epoch 66/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0756 - accuracy: 0.4127\n",
      "Epoch 67/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0749 - accuracy: 0.4127\n",
      "Epoch 68/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0742 - accuracy: 0.4137\n",
      "Epoch 69/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0735 - accuracy: 0.4127\n",
      "Epoch 70/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0728 - accuracy: 0.4127\n",
      "Epoch 71/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0722 - accuracy: 0.4106\n",
      "Epoch 72/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0715 - accuracy: 0.4137\n",
      "Epoch 73/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0708 - accuracy: 0.4148\n",
      "Epoch 74/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0702 - accuracy: 0.4148\n",
      "Epoch 75/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0696 - accuracy: 0.4148\n",
      "Epoch 76/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0689 - accuracy: 0.4189\n",
      "Epoch 77/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0683 - accuracy: 0.4158\n",
      "Epoch 78/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0677 - accuracy: 0.4189\n",
      "Epoch 79/100\n",
      "31/31 [==============================] - 0s 517us/step - loss: 1.0671 - accuracy: 0.4179\n",
      "Epoch 80/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0665 - accuracy: 0.4189\n",
      "Epoch 81/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0659 - accuracy: 0.4200\n",
      "Epoch 82/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0654 - accuracy: 0.4220\n",
      "Epoch 83/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0648 - accuracy: 0.4220\n",
      "Epoch 84/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0642 - accuracy: 0.4231\n",
      "Epoch 85/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0636 - accuracy: 0.4220\n",
      "Epoch 86/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0631 - accuracy: 0.4252\n",
      "Epoch 87/100\n",
      "31/31 [==============================] - 0s 517us/step - loss: 1.0625 - accuracy: 0.4241\n",
      "Epoch 88/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0620 - accuracy: 0.4272\n",
      "Epoch 89/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0614 - accuracy: 0.4283\n",
      "Epoch 90/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0609 - accuracy: 0.4314\n",
      "Epoch 91/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0604 - accuracy: 0.4293\n",
      "Epoch 92/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0599 - accuracy: 0.4304\n",
      "Epoch 93/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0594 - accuracy: 0.4314\n",
      "Epoch 94/100\n",
      "31/31 [==============================] - 0s 517us/step - loss: 1.0589 - accuracy: 0.4304\n",
      "Epoch 95/100\n",
      "31/31 [==============================] - 0s 517us/step - loss: 1.0584 - accuracy: 0.4314\n",
      "Epoch 96/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0580 - accuracy: 0.4324\n",
      "Epoch 97/100\n",
      "31/31 [==============================] - 0s 517us/step - loss: 1.0575 - accuracy: 0.4335\n",
      "Epoch 98/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0571 - accuracy: 0.4345\n",
      "Epoch 99/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0565 - accuracy: 0.4345\n",
      "Epoch 100/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0561 - accuracy: 0.4356\n"
     ]
    }
   ],
   "source": [
    "model = KerasClassifier(build_fn = create_model, verbose = 1, epochs = 100, batch_size = 32)\n",
    "grid = GridSearchCV(estimator = model, param_grid = param_grid, n_jobs = -1, cv = tscv)\n",
    "grid_result = grid.fit(X_train,Y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1822ac74",
   "metadata": {},
   "source": [
    "### Normal model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "a9a6d6e8",
   "metadata": {},
   "outputs": [],
   "source": [
    "param_grid = { 'layers':[(128,64), (32,16), (64,32), (128, \"dropout\", 32), \n",
    "                      (512,256,128),(256,128,64),(512,\"dropout\",128,64),\n",
    "                      (512,256,\"dropout\",64), (1024,512,256,128),\n",
    "                      (512,256,128,64), (256,128,64,32),(1024,512,\"dropout\",64,32),\n",
    "                      (1024,512,256,\"dropout\",64)],\n",
    "              'dropout_rate': [0.1,0.33,0.5],\n",
    "              'activation_function': [\"sigmoid\",\"tanh\",\"relu\"],\n",
    "              'output_function':['softmax'],\n",
    "              'optimizer' : ['SGD', 'RMSprop', 'Adam'],\n",
    "              'learning_rate':[0.001,0.01,0.0001]\n",
    "            }\n",
    "\n",
    "def create_model(layers=[],dropout_rate = 0.1, learning_rate = 0.001,\n",
    "                 activation_function = \"relu\", output_function = \"softmax\",\n",
    "                 optimizer = \"Adam\"):\n",
    "    \n",
    "    model = Sequential()\n",
    "    model.add(Dense(layers[0], input_dim = 43, activation=activation_function))\n",
    "    for layer in layers[1:]:\n",
    "        if layer == \"dropout\":\n",
    "            model.add(Dropout(dropout_rate))\n",
    "        else:\n",
    "            model.add(Dense(layer,activation=activation_function))\n",
    "    model.add(Dense(3,activation=output_function))\n",
    "    \n",
    "    if optimizer == \"Adam\":\n",
    "        opt = optimizers.Adam(learning_rate = learning_rate)\n",
    "    elif optimizer == \"SGD\":\n",
    "        opt = optimizers.SGD(learning_rate = learning_rate)\n",
    "    else:\n",
    "        opt = optimizers.RMSprop(learning_rate = learning_rate)\n",
    "    \n",
    "    model.compile(loss='categorical_crossentropy' , optimizer=opt, metrics=[\"accuracy\"])\n",
    "    \n",
    "    return model\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "3ad45910",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Counter({1.0: 369, -1.0: 320, 0.0: 273})\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "((962, 43), (962, 3))"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = data.drop(columns=[\"Date\",\"Target\",\"Close\",\"sentiment\"])\n",
    "Y = data.Target\n",
    "X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size = 0.33,shuffle = False)\n",
    "print(Counter(Y_train))\n",
    "Y_train = to_categorical(Y_train,3)\n",
    "Y_test = to_categorical(Y_test,3)\n",
    "sc = StandardScaler()\n",
    "X_train = sc.fit_transform(X_train)\n",
    "X_test  = sc.transform(X_test)\n",
    "X_train.shape,Y_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "ccf724fa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/100\n",
      "31/31 [==============================] - 0s 484us/step - loss: 1.2129 - accuracy: 0.3015\n",
      "Epoch 2/100\n",
      "31/31 [==============================] - 0s 452us/step - loss: 1.2105 - accuracy: 0.3015\n",
      "Epoch 3/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.2082 - accuracy: 0.3067\n",
      "Epoch 4/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.2061 - accuracy: 0.3087\n",
      "Epoch 5/100\n",
      "31/31 [==============================] - 0s 743us/step - loss: 1.2038 - accuracy: 0.3119\n",
      "Epoch 6/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.2019 - accuracy: 0.3129\n",
      "Epoch 7/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1997 - accuracy: 0.3098\n",
      "Epoch 8/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.1976 - accuracy: 0.3098\n",
      "Epoch 9/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1957 - accuracy: 0.3119\n",
      "Epoch 10/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1939 - accuracy: 0.3108\n",
      "Epoch 11/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1920 - accuracy: 0.3087\n",
      "Epoch 12/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1902 - accuracy: 0.3077\n",
      "Epoch 13/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1885 - accuracy: 0.3077\n",
      "Epoch 14/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1869 - accuracy: 0.3098\n",
      "Epoch 15/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1852 - accuracy: 0.3119\n",
      "Epoch 16/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1835 - accuracy: 0.3170\n",
      "Epoch 17/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.1819 - accuracy: 0.3181\n",
      "Epoch 18/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1803 - accuracy: 0.3202\n",
      "Epoch 19/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1788 - accuracy: 0.3222\n",
      "Epoch 20/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1772 - accuracy: 0.3222\n",
      "Epoch 21/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.1758 - accuracy: 0.3222\n",
      "Epoch 22/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.1744 - accuracy: 0.3233\n",
      "Epoch 23/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1730 - accuracy: 0.3243\n",
      "Epoch 24/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1715 - accuracy: 0.3243\n",
      "Epoch 25/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1702 - accuracy: 0.3264\n",
      "Epoch 26/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.1689 - accuracy: 0.3264\n",
      "Epoch 27/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1677 - accuracy: 0.3264\n",
      "Epoch 28/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1664 - accuracy: 0.3254\n",
      "Epoch 29/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1653 - accuracy: 0.3254\n",
      "Epoch 30/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1640 - accuracy: 0.3254\n",
      "Epoch 31/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1629 - accuracy: 0.3254\n",
      "Epoch 32/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1618 - accuracy: 0.3254\n",
      "Epoch 33/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1606 - accuracy: 0.3264\n",
      "Epoch 34/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1595 - accuracy: 0.3254\n",
      "Epoch 35/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1585 - accuracy: 0.3254\n",
      "Epoch 36/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1575 - accuracy: 0.3264\n",
      "Epoch 37/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1563 - accuracy: 0.3254\n",
      "Epoch 38/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.1553 - accuracy: 0.3264\n",
      "Epoch 39/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1543 - accuracy: 0.3306\n",
      "Epoch 40/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1533 - accuracy: 0.3316\n",
      "Epoch 41/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1524 - accuracy: 0.3316\n",
      "Epoch 42/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1513 - accuracy: 0.3306\n",
      "Epoch 43/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1503 - accuracy: 0.3295\n",
      "Epoch 44/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1494 - accuracy: 0.3285\n",
      "Epoch 45/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1486 - accuracy: 0.3285\n",
      "Epoch 46/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.1477 - accuracy: 0.3306\n",
      "Epoch 47/100\n",
      "31/31 [==============================] - 0s 355us/step - loss: 1.1469 - accuracy: 0.3316\n",
      "Epoch 48/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1460 - accuracy: 0.3306\n",
      "Epoch 49/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1452 - accuracy: 0.3295\n",
      "Epoch 50/100\n",
      "31/31 [==============================] - ETA: 0s - loss: 1.1304 - accuracy: 0.43 - 0s 387us/step - loss: 1.1444 - accuracy: 0.3285\n",
      "Epoch 51/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1435 - accuracy: 0.3295\n",
      "Epoch 52/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1426 - accuracy: 0.3295\n",
      "Epoch 53/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1418 - accuracy: 0.3295\n",
      "Epoch 54/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.1411 - accuracy: 0.3285\n",
      "Epoch 55/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1404 - accuracy: 0.3306\n",
      "Epoch 56/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1395 - accuracy: 0.3274\n",
      "Epoch 57/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1388 - accuracy: 0.3274\n",
      "Epoch 58/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1381 - accuracy: 0.3295\n",
      "Epoch 59/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1374 - accuracy: 0.3306\n",
      "Epoch 60/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1368 - accuracy: 0.3316\n",
      "Epoch 61/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1360 - accuracy: 0.3316\n",
      "Epoch 62/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1353 - accuracy: 0.3295\n",
      "Epoch 63/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1347 - accuracy: 0.3285\n",
      "Epoch 64/100\n",
      "31/31 [==============================] - 0s 355us/step - loss: 1.1341 - accuracy: 0.3326\n",
      "Epoch 65/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.1335 - accuracy: 0.3326\n",
      "Epoch 66/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1329 - accuracy: 0.3337\n",
      "Epoch 67/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1323 - accuracy: 0.3337\n",
      "Epoch 68/100\n",
      "31/31 [==============================] - 0s 355us/step - loss: 1.1317 - accuracy: 0.3347\n",
      "Epoch 69/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.1312 - accuracy: 0.3347\n",
      "Epoch 70/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1306 - accuracy: 0.3347\n",
      "Epoch 71/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1301 - accuracy: 0.3337\n",
      "Epoch 72/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1295 - accuracy: 0.3368\n",
      "Epoch 73/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1289 - accuracy: 0.3368\n",
      "Epoch 74/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1283 - accuracy: 0.3378\n",
      "Epoch 75/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1277 - accuracy: 0.3378\n",
      "Epoch 76/100\n",
      "31/31 [==============================] - 0s 355us/step - loss: 1.1272 - accuracy: 0.3368\n",
      "Epoch 77/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1267 - accuracy: 0.3368\n",
      "Epoch 78/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1262 - accuracy: 0.3378\n",
      "Epoch 79/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1257 - accuracy: 0.3368\n",
      "Epoch 80/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1252 - accuracy: 0.3358\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 81/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1248 - accuracy: 0.3378\n",
      "Epoch 82/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1242 - accuracy: 0.3378\n",
      "Epoch 83/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1237 - accuracy: 0.3368\n",
      "Epoch 84/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1233 - accuracy: 0.3378\n",
      "Epoch 85/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1229 - accuracy: 0.3378\n",
      "Epoch 86/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.1224 - accuracy: 0.3389\n",
      "Epoch 87/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1220 - accuracy: 0.3410\n",
      "Epoch 88/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1215 - accuracy: 0.3420\n",
      "Epoch 89/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1210 - accuracy: 0.3451\n",
      "Epoch 90/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1206 - accuracy: 0.3472\n",
      "Epoch 91/100\n",
      "31/31 [==============================] - 0s 355us/step - loss: 1.1202 - accuracy: 0.3472\n",
      "Epoch 92/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1198 - accuracy: 0.3472\n",
      "Epoch 93/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1193 - accuracy: 0.3493\n",
      "Epoch 94/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1189 - accuracy: 0.3472\n",
      "Epoch 95/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.1185 - accuracy: 0.3482\n",
      "Epoch 96/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1181 - accuracy: 0.3493\n",
      "Epoch 97/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.1177 - accuracy: 0.3482\n",
      "Epoch 98/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1173 - accuracy: 0.3482\n",
      "Epoch 99/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1169 - accuracy: 0.3472\n",
      "Epoch 100/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.1165 - accuracy: 0.3493\n"
     ]
    }
   ],
   "source": [
    "model = KerasClassifier(build_fn = create_model, verbose = 1, epochs = 100, batch_size = 32)\n",
    "grid = GridSearchCV(estimator = model, param_grid = param_grid, n_jobs = -1, cv = tscv)\n",
    "grid_result_normal = grid.fit(X_train,Y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d646207f",
   "metadata": {},
   "source": [
    "Evaluate results sentiment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "96521489",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best: 0.429167 using {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.323611 (0.020507) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.062392) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.323611 (0.069832) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.327778 (0.046935) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.348611 (0.020787) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.042537) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.312500 (0.041248) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.319444 (0.071389) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.056826) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.319444 (0.021872) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.344444 (0.074250) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.347222 (0.075026) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.333333 (0.018002) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.050499) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.043435) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.070901) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.039431) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.036694) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.327778 (0.072196) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.059447) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.337500 (0.027003) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.041248) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.325000 (0.044227) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.340278 (0.072754) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.327778 (0.037474) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.041154) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.327778 (0.073388) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.066085) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.329167 (0.018942) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.048153) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.325000 (0.065705) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.263889 (0.035735) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.061833) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.039431) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.365278 (0.027287) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.348611 (0.016078) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.393056 (0.035410) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.085074) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.322222 (0.067558) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.070300) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.010393) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.318056 (0.020507) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.323611 (0.020507) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.033043) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.377778 (0.037474) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.024533) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.333333 (0.062361) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.065705) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.368056 (0.008562) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.031611) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.372222 (0.032155) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.340278 (0.042537) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.325000 (0.060477) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.071281) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.325000 (0.035843) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.018737) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.362500 (0.069805) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.078469) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.053827) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.325000 (0.063007) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.027499) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.059024) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.045686) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.325000 (0.060477) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.340278 (0.080388) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.022135) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.373611 (0.018737) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.018737) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.047992) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.281944 (0.046440) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.325000 (0.063738) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.067956) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.329167 (0.030238) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.320833 (0.044488) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.045005) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.347222 (0.048392) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.297222 (0.061739) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.033391) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.035519) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.352778 (0.035735) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.361111 (0.037474) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.311111 (0.036377) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.057568) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.062762) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.354167 (0.015590) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.375000 (0.015590) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.311111 (0.036377) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.329167 (0.074613) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.082097) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.325000 (0.018002) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.059738) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.322222 (0.068493) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.029067) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.026571) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.045176) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.334722 (0.074250) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.063556) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.323611 (0.062392) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.020507) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.065617) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.071037) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.333333 (0.018002) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.322222 (0.048153) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.041388) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.311111 (0.032335) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.034077) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.019345) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.325000 (0.018942) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.083818) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.057568) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.350000 (0.044227) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.043435) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.320833 (0.032454) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.366667 (0.045770) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.329167 (0.058035) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.032454) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.327778 (0.017123) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.064310) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.075768) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.336111 (0.025760) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.330556 (0.012880) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.351389 (0.012880) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.281944 (0.046440) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.320833 (0.050346) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.037320) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.038239) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.023895) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.311111 (0.036377) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.397222 (0.050499) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.044227) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.348611 (0.062946) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.069472) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.327778 (0.070738) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.306944 (0.043212) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.380556 (0.001964) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.376389 (0.035410) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.065115) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.323611 (0.068915) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.365278 (0.019934) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.032454) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.030238) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.341667 (0.054751) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.053468) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.062762) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.344444 (0.055936) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.032335) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.355556 (0.056143) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.009821) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.281944 (0.046440) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.060189) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.055312) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.344444 (0.049574) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.025760) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.024533) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.355556 (0.030682) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.075334) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.048392) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.037628) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.030682) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.363889 (0.038239) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.325000 (0.063738) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.070901) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.068831) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.038690) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.011948) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.319444 (0.045686) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.347222 (0.027287) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.045686) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.026571) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.329167 (0.006804) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.384722 (0.035735) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.366667 (0.045770) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.325000 (0.054006) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.322222 (0.064310) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.057835) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.040872) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.311111 (0.036377) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.077055) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.067558) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.329167 (0.014829) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.063007) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.060508) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.320833 (0.041248) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.313889 (0.025984) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.323611 (0.035410) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.022135) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.333333 (0.039235) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.327778 (0.066522) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.325000 (0.018942) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.067956) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.350000 (0.077280) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.327778 (0.017123) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.033391) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.350000 (0.014829) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.401389 (0.042264) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.034527) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.365278 (0.064310) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.340278 (0.081176) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.068831) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.331944 (0.019934) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.045938) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.038239) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.263889 (0.039136) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.329167 (0.038640) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.034916) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.075793) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.070792) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.329167 (0.029463) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.329167 (0.022309) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.322222 (0.039869) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.280556 (0.045304) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.323611 (0.037320) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.032155) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.036799) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.037474) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.322222 (0.019642) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.330556 (0.025534) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.059738) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.344444 (0.074949) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.066869) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.318056 (0.048153) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.040588) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.372222 (0.036694) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.377778 (0.011948) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.266667 (0.042628) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.064220) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.064639) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.030492) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.042264) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.377778 (0.029724) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.021606) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.329167 (0.045005) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.054997) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.024136) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.023814) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.020694) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.361111 (0.043877) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.329167 (0.061332) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.064220) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.355556 (0.010393) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.394444 (0.027708) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.024533) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.311111 (0.036377) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.354167 (0.029067) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.077280) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.022309) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.323611 (0.035735) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.311111 (0.036377) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.052741) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.308333 (0.047629) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.053827) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.064639) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.046190) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.041388) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.033564) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.046022) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.281944 (0.046440) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.023814) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.030238) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.039431) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.034415) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.381944 (0.034077) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.330556 (0.069417) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.323611 (0.055936) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.330556 (0.044919) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.039136) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.327778 (0.056656) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.052851) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.336111 (0.027499) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.083910) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.350000 (0.080436) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.072196) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.325000 (0.071443) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.355556 (0.063859) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.330556 (0.048392) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.083979) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.355556 (0.078494) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.337500 (0.010206) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.312500 (0.010206) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.042628) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.334722 (0.054575) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.039284) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.319444 (0.044919) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.302778 (0.030870) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.076704) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.071389) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.372222 (0.043078) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.042808) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.350000 (0.058135) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.077305) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.369444 (0.082939) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.063859) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.316667 (0.049065) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.330556 (0.079810) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.365278 (0.075640) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.352778 (0.049340) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.311111 (0.050955) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.327778 (0.035410) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.356944 (0.061269) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.348611 (0.062392) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.038640) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.028328) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.080675) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.327778 (0.070738) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.064669) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.322222 (0.069749) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.358333 (0.056211) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.318056 (0.064310) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.369444 (0.037320) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.295833 (0.027003) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.365278 (0.012880) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.068493) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.055312) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.379167 (0.056826) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.056554) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.041989) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.080819) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.051520) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.351389 (0.030870) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.319444 (0.031611) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.322222 (0.074871) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.069054) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.368056 (0.062946) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.065115) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.038640) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.081176) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.065115) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.032808) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.309722 (0.060985) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.344444 (0.077604) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.075869) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.329167 (0.070300) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.086758) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.046190) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.337500 (0.076905) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.340278 (0.054575) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.358333 (0.047263) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.391667 (0.052374) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.352778 (0.065646) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.072196) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.359722 (0.087025) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.071874) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.031611) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.053178) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.309722 (0.068746) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.356944 (0.037935) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.363889 (0.059738) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.057835) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.327778 (0.045304) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.350000 (0.073677) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.322222 (0.042808) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.045304) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.062854) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.377778 (0.064937) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.047181) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.355556 (0.081176) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.045770) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.052079) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.368056 (0.039431) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.050116) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.341667 (0.068296) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.325000 (0.071037) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.315278 (0.044270) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.351389 (0.033391) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.315278 (0.060508) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.325000 (0.077055) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.352778 (0.078861) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.062082) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.309722 (0.043346) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.041013) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.323611 (0.054997) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.362500 (0.023570) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.322222 (0.067128) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.368056 (0.063221) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.062454) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.311111 (0.067558) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.347222 (0.083078) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.330556 (0.074949) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.060477) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.311111 (0.064937) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.329167 (0.032454) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.375000 (0.080436) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.329167 (0.039235) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.058135) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.080675) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.064759) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.053468) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.050116) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.058663) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.053827) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.358333 (0.027003) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.380556 (0.024136) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.327778 (0.068070) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.323611 (0.055312) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.355556 (0.069749) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.323611 (0.059154) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.319444 (0.041013) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.369444 (0.052741) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.304167 (0.056211) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.059803) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.021246) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.046022) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.315278 (0.086692) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.334722 (0.052741) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.325000 (0.041805) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.366667 (0.047992) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.048233) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.333333 (0.061520) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.323611 (0.064669) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.100308) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.348611 (0.074250) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.071281) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.370833 (0.032808) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.323611 (0.055312) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.064759) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.334722 (0.083078) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.049418) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.359722 (0.029332) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.308333 (0.020412) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.320833 (0.096884) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.350000 (0.088257) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.351389 (0.057869) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.356944 (0.080675) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.341667 (0.066406) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.070080) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.017458) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.030870) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.065174) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.083818) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.059803) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.355556 (0.056143) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.362500 (0.074613) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.051632) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.334722 (0.066085) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.325000 (0.054433) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.355556 (0.034247) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.379167 (0.018942) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.054751) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.082566) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.347222 (0.079810) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.064907) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.351389 (0.073309) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.095157) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.062361) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.308333 (0.036799) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.390278 (0.034916) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.078346) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.059932) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.076553) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.366667 (0.068803) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.049418) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.075026) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.035519) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.351389 (0.058366) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.337500 (0.073677) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.061833) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.322222 (0.067558) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.365278 (0.077155) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.323611 (0.066696) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.313889 (0.052741) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.322222 (0.073938) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.038339) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.047992) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.035519) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.330556 (0.063130) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.046771) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.097083) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.065174) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.059024) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.331944 (0.062392) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.022135) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.363889 (0.055312) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.054681) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.060477) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.327778 (0.049807) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.057232) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.302778 (0.051069) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.323611 (0.041154) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.064669) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.354167 (0.054006) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.053468) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.406944 (0.012880) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.082799) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.073388) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.352778 (0.070901) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.330556 (0.040872) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.350000 (0.040110) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.329167 (0.063738) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.036377) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.370833 (0.037884) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.361111 (0.083634) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.366667 (0.071443) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.358333 (0.049418) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.334722 (0.066348) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.333333 (0.065617) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.075026) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.068155) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.372222 (0.045686) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.318056 (0.057869) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.368056 (0.031611) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.066522) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.052374) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.344444 (0.020787) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.080220) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.350000 (0.058135) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.323611 (0.080962) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.077305) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.068155) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.044401) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.083634) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.083356) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.368056 (0.028531) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.348611 (0.063859) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.057869) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.058663) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.036694) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.062946) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.044227) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.061363) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.348611 (0.082097) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.347222 (0.034916) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.323611 (0.041574) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.062361) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.327778 (0.076553) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.067558) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.315278 (0.067128) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.276389 (0.013749) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.329167 (0.072409) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.079130) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.350000 (0.058135) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.059609) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.341667 (0.083611) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.065705) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.333333 (0.018942) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.027708) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.043078) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.333333 (0.076905) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.327778 (0.076098) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.067214) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.056622) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.070574) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.330556 (0.056143) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.060189) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.362500 (0.014829) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.379167 (0.027003) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.059932) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.061739) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.347222 (0.058366) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.052814) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.050116) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.336111 (0.064759) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.318056 (0.034077) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.056143) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.429167 (0.029659) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.074613) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.348611 (0.068915) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.330556 (0.054575) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.344444 (0.056349) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.341667 (0.033506) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.082566) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.068296) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.341667 (0.052814) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.331944 (0.039284) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.082496) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.082566) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.352778 (0.079737) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.330556 (0.042537) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.043078) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.336111 (0.076477) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.065822) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.388889 (0.043877) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.034247) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.083078) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.347222 (0.087489) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.072728) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.070245) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.320833 (0.070300) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.356944 (0.064400) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.044401) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.340278 (0.061363) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.361111 (0.045686) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.323611 (0.076477) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.066406) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.327778 (0.066348) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.070080) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.341667 (0.065705) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.329167 (0.047629) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.376389 (0.064040) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.359722 (0.057968) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.362500 (0.068296) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.049418) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.072754) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.372222 (0.069417) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.344444 (0.044401) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.059317) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.329167 (0.056005) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.366667 (0.047263) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.356944 (0.025760) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.029067) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.333333 (0.071443) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.316667 (0.055694) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.352778 (0.046935) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.077305) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.348611 (0.055416) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.077803) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.362500 (0.054751) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.363889 (0.054681) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.352778 (0.022652) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.327778 (0.054997) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.050955) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.085617) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.061269) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.067786) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.331944 (0.084460) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.055312) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.316667 (0.043435) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.355556 (0.046440) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.052079) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.060985) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.304167 (0.043435) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.366667 (0.036004) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.030870) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.370833 (0.039235) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.362500 (0.061520) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.366667 (0.034021) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.370833 (0.049065) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.325000 (0.055694) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.351389 (0.043877) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.375000 (0.009001) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.366667 (0.061895) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.026571) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.054433) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.053827) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.372222 (0.051632) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.340278 (0.007082) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.372222 (0.060985) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.359722 (0.036377) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.045304) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.039431) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.020694) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.333333 (0.059609) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.069417) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.054006) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.351389 (0.023895) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.340278 (0.066522) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.381944 (0.058168) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.336111 (0.030492) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.034527) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.372222 (0.036377) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.369444 (0.044919) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.373611 (0.046440) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.038239) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.275000 (0.021246) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.370833 (0.080436) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.062946) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.056143) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.362500 (0.036799) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.365278 (0.035410) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.352778 (0.064040) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.037423) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.029332) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.319444 (0.030870) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.054006) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.355556 (0.054042) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.347222 (0.042537) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.355556 (0.063221) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.351389 (0.057164) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.336111 (0.056554) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.379167 (0.046022) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.347222 (0.022652) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.323611 (0.019345) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.052741) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.362500 (0.054751) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.329167 (0.035519) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.366667 (0.045005) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.356944 (0.049574) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.058366) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.380556 (0.040588) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.368056 (0.027287) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.029067) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.370833 (0.054433) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.358333 (0.037884) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.066406) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.069082) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.356944 (0.037320) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.062392) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.368056 (0.064220) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.034077) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.350000 (0.038640) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.057366) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.049574) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.047992) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.348611 (0.054575) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.356944 (0.047669) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.352778 (0.026425) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.050499) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.318056 (0.023157) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.334722 (0.026425) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.050116) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.359722 (0.067558) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.323611 (0.037320) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.355556 (0.051182) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.350000 (0.054006) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.358333 (0.065705) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.377778 (0.051182) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.036058) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.352778 (0.030682) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.044488) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.046315) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.351389 (0.044270) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.356944 (0.073151) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.064639) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.054256) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.362500 (0.020694) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.381944 (0.032155) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.358333 (0.051483) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.011948) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.065115) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.323611 (0.031611) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.062082) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.358333 (0.050116) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.351389 (0.048392) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.018002) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.355556 (0.016782) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.336111 (0.057568) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.042264) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.060476) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.337500 (0.033506) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.384722 (0.062762) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.377778 (0.048631) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.051483) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.063007) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.347222 (0.034247) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.309722 (0.050499) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.049418) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.035519) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.059317) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.348611 (0.066522) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.054751) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.045686) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.047992) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.013749) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.347222 (0.050499) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.363889 (0.053827) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.075869) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.023570) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.354167 (0.051483) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.309722 (0.049574) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.366667 (0.048233) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.348611 (0.042537) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.043435) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.030238) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.363889 (0.033564) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.352778 (0.067558) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.359722 (0.057968) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.365278 (0.067558) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.033506) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.380556 (0.068155) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.386111 (0.068915) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.054575) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.370833 (0.015590) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.370833 (0.051370) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.319444 (0.064937) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.330556 (0.057063) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.059024) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.033391) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.356944 (0.057568) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.039869) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.355556 (0.039284) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.362500 (0.026571) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.042537) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.386111 (0.052741) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.025760) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.354167 (0.050116) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.053468) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.055102) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.085052) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.319444 (0.007857) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.358333 (0.020412) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.333333 (0.059024) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.363889 (0.062946) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.040110) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.050346) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.350000 (0.056005) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.359722 (0.055312) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.363889 (0.031427) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.014829) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.334722 (0.034916) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.026425) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.347222 (0.049574) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.037474) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.368056 (0.047181) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.341667 (0.068296) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.055694) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.363889 (0.039869) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.029463) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.305556 (0.032335) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.348611 (0.067128) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.361111 (0.039723) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.325000 (0.035519) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.354167 (0.047992) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.362500 (0.030238) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.351389 (0.066348) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.340278 (0.043744) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.038339) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.330556 (0.008562) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.365278 (0.068746) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.039235) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.331944 (0.050955) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.361111 (0.050154) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.054256) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.048153) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.057568) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.048868) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.329167 (0.021246) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.036377) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.052079) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.032691) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.356944 (0.064040) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.056622) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.355556 (0.030870) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.036377) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.340278 (0.052079) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.037884) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.344444 (0.049222) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.348611 (0.043346) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.369444 (0.056143) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.355556 (0.061363) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.352778 (0.028531) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.331944 (0.037320) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.377778 (0.046190) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.352778 (0.034415) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.294444 (0.067558) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.327778 (0.019642) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.362500 (0.059317) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.334722 (0.027708) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.356944 (0.062946) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.062454) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.352778 (0.049105) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.368056 (0.037474) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.352778 (0.041574) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.356944 (0.007857) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.356944 (0.023157) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.355556 (0.064310) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.352778 (0.030682) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.045304) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.356944 (0.054256) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.347222 (0.058564) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.018737) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.355556 (0.034916) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.322222 (0.048153) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.056211) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.355556 (0.037474) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.340278 (0.071470) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.054681) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.038339) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.037320) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.365278 (0.041989) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.359722 (0.033564) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.359722 (0.007857) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.057968) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.340278 (0.065646) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.036799) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.032454) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.059447) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.057232) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.352778 (0.044270) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.047992) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.358333 (0.032454) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.036004) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.320833 (0.053142) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.379167 (0.023814) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.355556 (0.032691) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.362500 (0.023570) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.060508) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.052374) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.352778 (0.035735) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.355556 (0.028934) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.054751) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.079228) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.327778 (0.052741) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.365278 (0.052741) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.361111 (0.038690) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.340278 (0.034077) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.375000 (0.058035) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.012266) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.323611 (0.047669) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.365278 (0.033043) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.375000 (0.068041) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.325000 (0.031180) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.370833 (0.061332) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.352778 (0.049574) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.352778 (0.061739) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.363889 (0.039284) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.370833 (0.035355) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.027499) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.333333 (0.050116) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.034750) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.361111 (0.021872) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.049065) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.341667 (0.056211) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.336111 (0.048631) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.361111 (0.080244) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.368056 (0.065822) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.358333 (0.023814) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.053178) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.341667 (0.052374) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.344444 (0.048631) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.377778 (0.054256) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.376389 (0.038239) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.344444 (0.046440) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.379167 (0.017010) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.358333 (0.030238) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.009001) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.053142) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.044618) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.355556 (0.034077) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.356944 (0.049105) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.377778 (0.058564) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.351389 (0.051069) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.009001) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.010206) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.287500 (0.020694) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.363889 (0.068409) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.355556 (0.044919) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.344444 (0.041013) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.044270) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.361111 (0.053396) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.051370) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.369444 (0.016078) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.023157) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.325000 (0.015590) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.356944 (0.055312) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.356944 (0.041154) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.337500 (0.040110) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.054256) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.347222 (0.054042) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.355556 (0.031611) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.352778 (0.031611) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.341667 (0.042492) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.022652) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.368056 (0.030870) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.071037) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.019345) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.373611 (0.059154) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.369444 (0.065381) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.041013) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.348611 (0.064220) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.361111 (0.033564) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.306944 (0.027499) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.327778 (0.074949) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.358333 (0.069805) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.334722 (0.030870) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.047263) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.355556 (0.042537) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.352778 (0.050154) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.023570) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.359722 (0.041154) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.050346) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.348611 (0.059932) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.348611 (0.043212) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.344444 (0.029724) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.370833 (0.040110) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.347222 (0.060125) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.042628) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.356944 (0.051182) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.015590) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.027003) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.064310) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.055312) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n"
     ]
    }
   ],
   "source": [
    "print(\"Best: %f using %s\" % (grid_result.best_score_, grid_result.best_params_))\n",
    "means = grid_result.cv_results_['mean_test_score']\n",
    "stds = grid_result.cv_results_['std_test_score']\n",
    "params = grid_result.cv_results_['params']\n",
    "for mean, stdev, param in zip(means, stds, params):\n",
    "    print(\"%f (%f) with: %r\" % (mean, stdev, param))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b3a9687e",
   "metadata": {},
   "source": [
    "Evaluate results normal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "f430d948",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best: 0.425000 using {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.327778 (0.015713) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.063859) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.327778 (0.073151) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.327778 (0.040588) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.333333 (0.030619) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.036058) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.070901) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.329167 (0.054751) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.064759) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.065705) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.066348) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.334722 (0.030870) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.348611 (0.037935) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.301389 (0.048392) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.331944 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.044401) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.340278 (0.022652) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.057232) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.073938) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.331944 (0.022652) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.323611 (0.040872) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.028934) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.350000 (0.056005) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.044618) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.056143) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.333333 (0.073834) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.078861) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.330556 (0.046315) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.327778 (0.019345) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.007082) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.266667 (0.042628) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.058135) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.045304) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.348611 (0.024136) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.042808) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.041989) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.356944 (0.059544) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.069832) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.067558) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.322222 (0.041574) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.036694) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.362500 (0.012266) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.370833 (0.039235) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.051967) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.064639) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.352778 (0.011948) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.347222 (0.027287) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.372222 (0.022135) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.395833 (0.060477) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.064220) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.069417) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.355556 (0.014164) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.040588) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.369444 (0.030870) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.347222 (0.057869) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.060508) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.067214) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.352778 (0.030870) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.056143) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.070901) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.329167 (0.063738) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.068831) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.027287) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.045770) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.352778 (0.010393) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.340278 (0.044401) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.395833 (0.053142) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.050499) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.323611 (0.065646) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.348611 (0.045304) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.022652) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.370833 (0.047263) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.376389 (0.046190) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.311111 (0.036377) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.032155) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.057568) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.038690) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.009001) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.070901) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.058366) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.059447) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.354167 (0.035355) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.018737) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.354167 (0.056211) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.304167 (0.045770) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.048868) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.077155) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.366667 (0.041248) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.325000 (0.061520) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.333333 (0.036004) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.330556 (0.049574) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.023814) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.281944 (0.046440) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.055312) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.322222 (0.051520) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.354167 (0.062454) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.355556 (0.065998) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.323611 (0.019345) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.329167 (0.047992) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.058366) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.365278 (0.090417) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.021606) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.316667 (0.027847) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.331944 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.065705) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.063221) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.021872) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.298611 (0.076098) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.325000 (0.066406) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.391667 (0.056005) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.330556 (0.043078) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.046771) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.059932) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.327778 (0.058168) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.318056 (0.023157) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.322222 (0.024611) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.355556 (0.029332) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.056211) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.327778 (0.037474) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.049065) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.340278 (0.046190) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.340278 (0.032691) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.329167 (0.014829) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.318056 (0.049574) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.369444 (0.008562) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.323611 (0.078788) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.076477) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.313889 (0.057063) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.327778 (0.022135) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.063007) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.358333 (0.057835) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.318056 (0.027287) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.044618) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.327778 (0.066522) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.045176) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.041574) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.393056 (0.020507) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.325000 (0.061237) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.058663) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.053468) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.355556 (0.033391) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.036694) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.327778 (0.034415) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.350000 (0.048233) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.311111 (0.036377) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.063556) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.054751) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.361111 (0.018737) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.351389 (0.050955) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.354167 (0.056211) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.323611 (0.062392) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.045304) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.025984) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.356944 (0.023895) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.061520) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.030870) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.056211) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.058663) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.058366) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.041574) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.351389 (0.030492) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.021246) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.348611 (0.059932) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.056211) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.330556 (0.046315) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.050499) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.348611 (0.020787) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.044401) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.381944 (0.034077) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.325000 (0.067013) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.325000 (0.053468) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.026571) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.341667 (0.022309) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.045686) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.056211) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.056826) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.325000 (0.073598) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.322222 (0.019934) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.072196) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.066927) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.334722 (0.021606) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.029332) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.325000 (0.038339) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.286111 (0.050154) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.325000 (0.067013) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.327778 (0.056656) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.327778 (0.060985) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.348611 (0.075793) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.330556 (0.019345) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.323611 (0.041013) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.029067) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.028934) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.350000 (0.041248) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.327778 (0.077604) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.318056 (0.072754) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.318056 (0.022652) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.306944 (0.043078) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.316667 (0.045005) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.330556 (0.025760) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.031611) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.068493) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.333333 (0.061895) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.070300) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.024533) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.018737) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.333333 (0.018002) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.045304) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.034750) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.340278 (0.034750) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.038690) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.046022) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.377778 (0.073151) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.352778 (0.040588) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.344444 (0.071551) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.348611 (0.078861) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.306944 (0.054256) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.313889 (0.045304) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.018942) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.045005) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.060125) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.054256) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.064220) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.051520) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.057063) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.362500 (0.032454) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.348611 (0.064220) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.323611 (0.046440) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.319444 (0.058564) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.037884) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.313889 (0.049574) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.376389 (0.049574) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.376389 (0.028934) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.344444 (0.061363) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.051632) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.376389 (0.056143) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.035735) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.323611 (0.068915) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.340278 (0.079737) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.029659) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.347222 (0.050499) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.311111 (0.036377) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.359722 (0.022652) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.056211) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.060508) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.325000 (0.057232) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.025077) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.340278 (0.040588) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.387500 (0.037884) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.037884) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.281944 (0.046440) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.329167 (0.045005) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.327778 (0.031427) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.021872) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.362500 (0.050804) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.070300) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.057568) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.327778 (0.059932) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.352778 (0.016782) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.028934) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.024533) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.017458) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.266667 (0.042628) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.056826) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.325000 (0.067013) with: {'activation_function': 'sigmoid', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.362500 (0.058035) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.313889 (0.052741) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.319444 (0.058564) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.083979) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.325000 (0.069472) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.053468) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.368056 (0.063221) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.075026) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.091054) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.337500 (0.041248) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.045770) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.313889 (0.061080) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.356944 (0.070738) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.323611 (0.035735) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.340278 (0.016782) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.325000 (0.018002) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.036377) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.358333 (0.047992) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.325000 (0.025685) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.068831) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.347222 (0.052079) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.359722 (0.063677) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.308333 (0.047629) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.311111 (0.069749) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.375000 (0.050346) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.082566) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.052300) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.336111 (0.036377) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.078272) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.063007) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.337500 (0.076603) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.355556 (0.042264) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.052079) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.404167 (0.050116) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.063130) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.341667 (0.067013) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.071874) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.072409) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.347222 (0.068155) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.322222 (0.042264) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.043078) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.033043) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.066406) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.064907) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.080675) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.391667 (0.065617) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.315278 (0.028531) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.320833 (0.049418) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.315278 (0.057568) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.050499) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.359722 (0.055312) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.318056 (0.012880) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.067558) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.066406) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.365278 (0.053178) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.312500 (0.042492) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.044618) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.333333 (0.067013) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.067128) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.316667 (0.046022) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.083910) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.322222 (0.057869) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.069054) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.350000 (0.066231) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.056826) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.073204) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.329167 (0.050116) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.373611 (0.005197) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.064040) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.035355) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.333333 (0.066927) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.350000 (0.054006) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.344444 (0.077155) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.071281) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.056656) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.331944 (0.066782) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.315278 (0.025984) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.306944 (0.032335) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.036799) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.323611 (0.063130) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.053827) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.355556 (0.056143) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.368056 (0.044401) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.052960) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.064639) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.306944 (0.045304) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.046440) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.381944 (0.039431) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.329167 (0.056826) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.065115) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.334722 (0.053178) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.340278 (0.057568) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.045304) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.308333 (0.054433) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.377778 (0.037320) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.046935) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.049418) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.069082) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.325000 (0.072728) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.083979) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.355556 (0.071551) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.350000 (0.061332) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.325000 (0.059024) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.053178) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.350000 (0.017678) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.306944 (0.059154) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.054751) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.077055) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.351389 (0.078494) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.356944 (0.043078) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.066406) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.054751) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.060189) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.045686) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.333333 (0.056211) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.059932) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.063859) with: {'activation_function': 'tanh', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.065705) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.062946) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.043877) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.333333 (0.074613) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.061332) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.048153) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.384722 (0.058366) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.075869) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.320833 (0.068041) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.334722 (0.014164) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.065705) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.322222 (0.070080) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.319444 (0.061080) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.069749) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.051182) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.255556 (0.010394) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.297222 (0.034916) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.066348) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.365278 (0.030492) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.333333 (0.033506) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.323611 (0.038239) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.063556) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.318056 (0.059932) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.331944 (0.057968) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.347222 (0.055102) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.323611 (0.068070) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.347222 (0.070820) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.384722 (0.063859) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.325000 (0.047140) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.315278 (0.046440) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.330556 (0.076704) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.355556 (0.069915) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.291667 (0.050804) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.347222 (0.016782) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.071470) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.068155) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.355556 (0.074871) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.330556 (0.076098) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.059738) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.337500 (0.076603) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.379167 (0.050116) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.059544) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.380556 (0.053827) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.079955) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.069915) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.076603) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.330556 (0.049574) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.066231) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.051182) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.356944 (0.055416) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.047629) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.312500 (0.070300) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.077380) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.323611 (0.074250) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.350000 (0.073204) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.066348) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.082496) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.337500 (0.070300) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.352778 (0.039723) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.308333 (0.053142) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.400000 (0.032454) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.087290) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.085864) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.320833 (0.058135) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.327778 (0.034415) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.071713) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.336111 (0.081176) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.376389 (0.058366) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.046190) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.056826) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.066085) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.065115) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.088257) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.322222 (0.051182) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.320833 (0.070300) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.329167 (0.062082) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.354167 (0.049065) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.034247) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.369444 (0.062946) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.329167 (0.053468) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.315278 (0.055312) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.059932) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.058564) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.313889 (0.056143) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.315278 (0.057968) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.005893) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.340278 (0.044401) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.419444 (0.037320) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.054469) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.319444 (0.057968) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.047669) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.331944 (0.076098) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.325000 (0.042628) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.336111 (0.056656) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.344444 (0.049340) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.348611 (0.049574) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.388889 (0.036058) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.340278 (0.073938) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.061332) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.358333 (0.070300) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.323611 (0.076553) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.069749) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.060477) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.384722 (0.038239) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.032454) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.352778 (0.036377) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.337500 (0.051483) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.072409) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.365278 (0.078788) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.063859) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.072196) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.078641) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.352778 (0.045304) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.361111 (0.066869) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.350000 (0.064639) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.319444 (0.060890) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.063007) with: {'activation_function': 'tanh', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.330556 (0.030492) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.320833 (0.067956) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.053142) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.323611 (0.076098) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.348611 (0.064400) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.318056 (0.064310) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.325000 (0.033506) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.330556 (0.069500) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.322222 (0.079810) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.075026) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.074717) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.309722 (0.058564) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.063556) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.322222 (0.029332) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.027847) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.362500 (0.022309) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.035355) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.351389 (0.069749) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.359722 (0.083634) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.318056 (0.048392) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.043078) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.355556 (0.072754) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.323611 (0.041154) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.061332) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.334722 (0.005197) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.333333 (0.059609) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.327778 (0.068155) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.329167 (0.040110) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.059024) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.361111 (0.061269) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.337500 (0.072409) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.053468) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.045770) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.350000 (0.021246) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.081673) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.067214) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.336111 (0.081673) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.064759) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.061739) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.058035) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.375000 (0.018942) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.051182) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.425000 (0.027847) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.329167 (0.057232) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.063859) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.370833 (0.057232) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.333333 (0.060477) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.322222 (0.049574) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.340278 (0.074639) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.023814) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.320833 (0.029659) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.373611 (0.060125) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.327778 (0.070738) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.057869) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.368056 (0.048392) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.059738) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.325000 (0.052374) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.352778 (0.084460) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.043078) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.336111 (0.043877) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.351389 (0.025984) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.070820) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.340278 (0.077155) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.351389 (0.078862) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.354167 (0.047992) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.060476) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.330556 (0.080675) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.366667 (0.056826) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.323611 (0.007082) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.369444 (0.022135) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.064907) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.327778 (0.064400) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.088345) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.070245) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.063677) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.347222 (0.047181) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.340278 (0.051520) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.340278 (0.026425) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.406944 (0.039869) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.057968) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.352778 (0.064669) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.337500 (0.078469) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.325000 (0.080003) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.055312) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.337500 (0.058926) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.037423) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.351389 (0.046935) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.375000 (0.018002) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.344444 (0.069749) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.049574) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.365278 (0.058663) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.016078) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.326389 (0.047791) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.336111 (0.061363) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.366667 (0.063556) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.358333 (0.051370) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.003402) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.320833 (0.051483) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.322222 (0.073938) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.356944 (0.063221) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.344444 (0.076553) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.351389 (0.048392) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.343056 (0.059932) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.048631) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.329167 (0.041248) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.331944 (0.038690) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.068409) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.068803) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.081673) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.355556 (0.057063) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.063130) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.333333 (0.075231) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.363889 (0.045304) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.351389 (0.067558) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.327778 (0.014164) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.356944 (0.070245) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.075334) with: {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.361111 (0.064400) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.054006) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.358333 (0.053468) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.363889 (0.054997) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.365278 (0.041154) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.007082) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.323611 (0.046190) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.340278 (0.058564) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.056143) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.368056 (0.024136) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.370833 (0.034021) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.065617) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.376389 (0.062762) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.322222 (0.031611) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.393056 (0.035735) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.331944 (0.042537) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.043078) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.077902) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.327778 (0.014164) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.038640) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.365278 (0.046440) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.368056 (0.034077) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.333333 (0.050116) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.025984) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.302778 (0.037935) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.362500 (0.051370) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.040110) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.351389 (0.045304) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.051069) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.313889 (0.042537) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.350000 (0.064639) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.034077) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.366667 (0.041248) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.327778 (0.036377) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.083495) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.061833) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.351389 (0.053827) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.368056 (0.046190) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.051483) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.363889 (0.040588) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.030619) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.369444 (0.025760) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.031180) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.352778 (0.066869) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.048153) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.340278 (0.025760) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.044227) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.369444 (0.055102) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.059932) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.381944 (0.049340) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.369444 (0.032691) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.369444 (0.024136) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.076704) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.352778 (0.052960) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.333333 (0.050116) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.369444 (0.040302) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.356944 (0.051967) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.344444 (0.060985) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.037884) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.372222 (0.048392) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.054042) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.058564) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.363889 (0.057869) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.334722 (0.022652) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.376389 (0.056961) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.362500 (0.061237) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.347222 (0.039869) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.354167 (0.023570) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.376389 (0.025534) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.330556 (0.060125) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.365278 (0.054469) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.356944 (0.049222) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.347222 (0.051069) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.376389 (0.057164) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.359722 (0.059932) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.362500 (0.045005) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.373611 (0.040588) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.381944 (0.010393) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.312500 (0.053468) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.330556 (0.043346) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.356944 (0.061739) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.333333 (0.039235) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.365278 (0.046935) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.347222 (0.051069) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.372222 (0.029724) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.373611 (0.040588) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.373611 (0.027287) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.351389 (0.029724) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.334722 (0.057063) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.348611 (0.050955) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.322222 (0.021872) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.379167 (0.041805) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.358333 (0.033506) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.035519) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.355556 (0.048392) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.386111 (0.034247) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.021872) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.375000 (0.046771) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.036004) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.334722 (0.034077) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.355556 (0.057164) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.362500 (0.041248) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.355556 (0.061739) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.023570) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.365278 (0.030870) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.294444 (0.037320) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.348611 (0.046190) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.350000 (0.080220) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.336111 (0.038690) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.377778 (0.051182) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.352778 (0.062392) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.358333 (0.055694) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.012266) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.369444 (0.049574) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.351389 (0.028531) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.388889 (0.045304) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.352778 (0.062392) with: {'activation_function': 'relu', 'dropout_rate': 0.1, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.347222 (0.007082) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.020507) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.380556 (0.030870) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.334722 (0.058366) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.063556) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.369444 (0.016782) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.031611) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.340278 (0.066696) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.068831) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.365278 (0.026425) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.052079) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.078050) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.311111 (0.026425) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.348611 (0.034247) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.362500 (0.027217) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.336111 (0.037935) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.063859) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.034527) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.361111 (0.034247) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.069749) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.315278 (0.039723) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.327778 (0.046440) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.318056 (0.057366) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.368056 (0.053178) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.425000 (0.027217) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.070080) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.073309) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.331944 (0.041013) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.044919) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.056622) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.340278 (0.064220) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.369444 (0.035735) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.056005) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.336111 (0.032155) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.312500 (0.025685) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.057835) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.340278 (0.053178) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.386111 (0.034247) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.369444 (0.058564) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.350000 (0.052814) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.365278 (0.045686) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.334722 (0.015341) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.318056 (0.038239) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.375000 (0.075077) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.064400) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.347222 (0.056349) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.381944 (0.046935) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.363889 (0.065115) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.362500 (0.032454) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.340278 (0.070574) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.347222 (0.037474) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.312500 (0.022309) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.044919) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.372222 (0.071713) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.350000 (0.054433) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.387500 (0.039235) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.362500 (0.073204) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.361111 (0.037935) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.343056 (0.066085) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.388889 (0.030870) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.326389 (0.030870) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.038640) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.341667 (0.063007) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.330556 (0.030870) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.362500 (0.053468) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.369444 (0.037474) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.084984) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.041013) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.358333 (0.014829) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.338889 (0.016078) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.352778 (0.039136) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.052374) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.347222 (0.040872) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.355556 (0.062762) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.366667 (0.048233) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.336111 (0.058663) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.366667 (0.033506) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.337500 (0.034527) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.351389 (0.030492) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.356944 (0.053178) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.361111 (0.056554) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.340278 (0.019345) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.379167 (0.027217) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.355556 (0.071874) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.311111 (0.043212) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.365278 (0.022652) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.361111 (0.024136) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.376389 (0.044270) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.362500 (0.061520) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.365278 (0.049222) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.337500 (0.054751) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.351389 (0.045176) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.056826) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.365278 (0.049574) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.032691) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.344444 (0.065998) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.323611 (0.022135) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.322222 (0.047181) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.322222 (0.062946) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.319444 (0.043212) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.047629) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.370833 (0.024533) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.362500 (0.050346) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.363889 (0.060508) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.343056 (0.020787) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.325000 (0.039235) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.350000 (0.044227) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.051483) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.323611 (0.026425) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.376389 (0.066085) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.359722 (0.062020) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.059932) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.383333 (0.054433) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.375000 (0.052374) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.344444 (0.054575) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.358333 (0.056622) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.361111 (0.022652) with: {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.320833 (0.042628) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.368056 (0.033391) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.351389 (0.066348) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.368056 (0.043877) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.369444 (0.061269) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.350000 (0.035519) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.330556 (0.062020) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.336111 (0.053178) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.327778 (0.073309) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.347222 (0.012880) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.345833 (0.021246) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.040110) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.330556 (0.051182) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.326389 (0.030870) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.341667 (0.067956) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.336111 (0.010393) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.383333 (0.044618) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.369444 (0.054997) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (32, 16), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.293056 (0.030870) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.376389 (0.052960) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.361111 (0.045304) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.352778 (0.050154) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.347222 (0.037320) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.355556 (0.028328) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.347222 (0.035735) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.064759) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.080436) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.337500 (0.023814) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.338889 (0.039869) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.041248) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.361111 (0.038690) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.354167 (0.054751) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.356944 (0.049340) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.305556 (0.060985) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.356944 (0.049222) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.318056 (0.047181) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (128, 'dropout', 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.362500 (0.067956) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.366667 (0.057232) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.361111 (0.043078) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.323611 (0.063221) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.369444 (0.050154) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.376389 (0.037935) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.337500 (0.040110) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.362500 (0.061520) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.351389 (0.056961) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.372222 (0.032691) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.368056 (0.060508) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.366667 (0.053142) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.072409) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.362500 (0.050346) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.359722 (0.025534) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.383333 (0.089430) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.340278 (0.045304) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.330556 (0.061833) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.352778 (0.056554) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.025077) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.359722 (0.064669) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.350000 (0.056622) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.379167 (0.053142) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.345833 (0.018942) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.309722 (0.035735) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.365278 (0.047791) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.041248) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 'dropout', 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.354167 (0.051031) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.370833 (0.039235) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.366667 (0.029067) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.066406) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.340278 (0.034247) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.356944 (0.046190) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.275000 (0.039235) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.341667 (0.046771) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.338889 (0.040872) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.037884) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.365278 (0.066869) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.405556 (0.048273) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.076603) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.365278 (0.049222) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.380556 (0.060508) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.027499) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.361111 (0.061739) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.350000 (0.048233) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 128), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.049340) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.340278 (0.068915) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.361111 (0.072196) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.325000 (0.073204) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.383333 (0.064907) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.350000 (0.031180) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.319444 (0.027708) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.365278 (0.043744) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.355556 (0.054681) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (512, 256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.341667 (0.054751) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.361111 (0.051967) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.056826) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.355556 (0.081744) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.370833 (0.056005) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.363889 (0.024611) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.368056 (0.048868) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.356944 (0.066348) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.025685) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (256, 128, 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.345833 (0.034021) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.359722 (0.039431) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.380556 (0.033391) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.344444 (0.057968) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.380556 (0.019934) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.347222 (0.023157) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.350000 (0.027847) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.361111 (0.073151) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.333333 (0.042492) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 'dropout', 64, 32), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.331944 (0.041154) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.366667 (0.044488) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.358333 (0.054751) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.348611 (0.064937) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.381944 (0.064669) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.348611 (0.020507) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.01, 'optimizer': 'Adam', 'output_function': 'softmax'}\n",
      "0.322222 (0.035410) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}\n",
      "0.354167 (0.079130) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'RMSprop', 'output_function': 'softmax'}\n",
      "0.354167 (0.056005) with: {'activation_function': 'relu', 'dropout_rate': 0.5, 'layers': (1024, 512, 256, 'dropout', 64), 'learning_rate': 0.0001, 'optimizer': 'Adam', 'output_function': 'softmax'}\n"
     ]
    }
   ],
   "source": [
    "print(\"Best: %f using %s\" % (grid_result_normal.best_score_, grid_result_normal.best_params_))\n",
    "means = grid_result_normal.cv_results_['mean_test_score']\n",
    "stds = grid_result_normal.cv_results_['std_test_score']\n",
    "params = grid_result_normal.cv_results_['params']\n",
    "for mean, stdev, param in zip(means, stds, params):\n",
    "    print(\"%f (%f) with: %r\" % (mean, stdev, param))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4b2692c6",
   "metadata": {},
   "source": [
    "#### Evaluate models"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "332cdf8f",
   "metadata": {},
   "source": [
    "Best: 0.429167 using {'activation_function': 'tanh', 'dropout_rate': 0.5, 'layers': (256, 128, 64), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "3483e9e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "def best_model_sentiment(X,Y, window):\n",
    "    \n",
    "    #Data formatting\n",
    "    X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size = 0.33,shuffle = False)\n",
    "    Y_train = to_categorical(Y_train,3)\n",
    "    Y_test = to_categorical(Y_test,3)\n",
    "    sc = StandardScaler()\n",
    "    X_train = sc.fit_transform(X_train)\n",
    "    X_test  = sc.transform(X_test)\n",
    "    \n",
    "    #Create model\n",
    "    model = Sequential()\n",
    "    model.add(Dense(256, input_dim = X.shape[1], activation='tanh'))\n",
    "    model.add(Dense(128,activation='tanh'))\n",
    "    model.add(Dense(64,activation='tanh'))\n",
    "    model.add(Dense(3,activation='softmax'))\n",
    "\n",
    "    opt = optimizers.SGD(learning_rate = 0.001)\n",
    "    model.compile(loss='categorical_crossentropy' , optimizer=opt, metrics=[\"accuracy\"])\n",
    "    \n",
    "    preds = []\n",
    "    model.fit(X_train, Y_train, batch_size = 32, epochs = 100)\n",
    "    preds.append(model.predict(X_test[:window]))\n",
    "    while True:\n",
    "\n",
    "        X_train = np.concatenate((X_train,X_test[:window]))\n",
    "        Y_train = np.concatenate((Y_train,Y_test[:window]))\n",
    "        X_test = X_test[window:,]\n",
    "        Y_test = Y_test[window:,]\n",
    "        print(len(np.concatenate(preds).ravel().tolist()),len(X_train),len(X_test))\n",
    "        model.fit(X_train, Y_train)\n",
    "        try:\n",
    "            preds.append(model.predict(X_test[:window]))\n",
    "        except:\n",
    "            if len(X_test)>0:\n",
    "                preds.append(model.predict(X_test))\n",
    "            break\n",
    "    return preds"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ac73e414",
   "metadata": {},
   "source": [
    "Best: 0.425000 using {'activation_function': 'relu', 'dropout_rate': 0.33, 'layers': (64, 32), 'learning_rate': 0.0001, 'optimizer': 'SGD', 'output_function': 'softmax'}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "773106a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "def best_model_normal(X,Y, window):\n",
    "    \n",
    "    #Data formatting\n",
    "    X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size = 0.33,shuffle = False)\n",
    "    Y_train = to_categorical(Y_train,3)\n",
    "    Y_test = to_categorical(Y_test,3)\n",
    "    sc = StandardScaler()\n",
    "    X_train = sc.fit_transform(X_train)\n",
    "    X_test  = sc.transform(X_test)\n",
    "    \n",
    "    #Create model\n",
    "    model = Sequential()\n",
    "    model.add(Dense(64, input_dim = X.shape[1], activation='relu'))\n",
    "    model.add(Dense(32,activation='relu'))\n",
    "    model.add(Dense(3,activation='softmax'))\n",
    "\n",
    "    opt = optimizers.SGD(learning_rate = 0.001)\n",
    "    model.compile(loss='categorical_crossentropy' , optimizer=opt, metrics=[\"accuracy\"])\n",
    "    \n",
    "    preds = []\n",
    "    model.fit(X_train, Y_train, batch_size = 32, epochs = 100)\n",
    "    preds.append(model.predict(X_test[:window]))\n",
    "    while True:\n",
    "\n",
    "        X_train = np.concatenate((X_train,X_test[:window]))\n",
    "        Y_train = np.concatenate((Y_train,Y_test[:window]))\n",
    "        X_test = X_test[window:,]\n",
    "        Y_test = Y_test[window:,]\n",
    "        print(len(np.concatenate(preds).ravel().tolist()),len(X_train),len(X_test))\n",
    "        model.fit(X_train, Y_train)\n",
    "        try:\n",
    "            preds.append(model.predict(X_test[:window]))\n",
    "        except:\n",
    "            if len(X_test)>0:\n",
    "                preds.append(model.predict(X_test))\n",
    "            break\n",
    "    return preds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "affiliated-external",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/100\n",
      " 1/31 [..............................] - ETA: 0s - loss: 1.1391 - accuracy: 0.4062WARNING:tensorflow:Callbacks method `on_train_batch_end` is slow compared to the batch time (batch time: 0.0000s vs `on_train_batch_end` time: 0.0010s). Check your callbacks.\n",
      "31/31 [==============================] - 0s 484us/step - loss: 1.1772 - accuracy: 0.3638\n",
      "Epoch 2/100\n",
      "31/31 [==============================] - 0s 452us/step - loss: 1.1595 - accuracy: 0.3825\n",
      "Epoch 3/100\n",
      "31/31 [==============================] - 0s 452us/step - loss: 1.1455 - accuracy: 0.3898\n",
      "Epoch 4/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.1330 - accuracy: 0.3909\n",
      "Epoch 5/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.1245 - accuracy: 0.3929\n",
      "Epoch 6/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.1159 - accuracy: 0.3929\n",
      "Epoch 7/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.1096 - accuracy: 0.3971\n",
      "Epoch 8/100\n",
      "31/31 [==============================] - 0s 484us/step - loss: 1.1041 - accuracy: 0.3992\n",
      "Epoch 9/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0999 - accuracy: 0.4054\n",
      "Epoch 10/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.0952 - accuracy: 0.4054\n",
      "Epoch 11/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.0916 - accuracy: 0.4075\n",
      "Epoch 12/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.0882 - accuracy: 0.4106\n",
      "Epoch 13/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0849 - accuracy: 0.4148\n",
      "Epoch 14/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.0821 - accuracy: 0.4241\n",
      "Epoch 15/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.0798 - accuracy: 0.4272\n",
      "Epoch 16/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0770 - accuracy: 0.4293\n",
      "Epoch 17/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0747 - accuracy: 0.4356\n",
      "Epoch 18/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.0724 - accuracy: 0.4356\n",
      "Epoch 19/100\n",
      "31/31 [==============================] - 0s 452us/step - loss: 1.0703 - accuracy: 0.4366\n",
      "Epoch 20/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.0684 - accuracy: 0.4387\n",
      "Epoch 21/100\n",
      "31/31 [==============================] - 0s 452us/step - loss: 1.0664 - accuracy: 0.4418\n",
      "Epoch 22/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.0647 - accuracy: 0.4439\n",
      "Epoch 23/100\n",
      "31/31 [==============================] - 0s 452us/step - loss: 1.0631 - accuracy: 0.4470\n",
      "Epoch 24/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.0613 - accuracy: 0.4459\n",
      "Epoch 25/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.0593 - accuracy: 0.4480\n",
      "Epoch 26/100\n",
      "31/31 [==============================] - ETA: 0s - loss: 1.1161 - accuracy: 0.40 - 0s 387us/step - loss: 1.0575 - accuracy: 0.4501\n",
      "Epoch 27/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0558 - accuracy: 0.4470\n",
      "Epoch 28/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0542 - accuracy: 0.4470\n",
      "Epoch 29/100\n",
      "31/31 [==============================] - 0s 355us/step - loss: 1.0526 - accuracy: 0.4532\n",
      "Epoch 30/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0510 - accuracy: 0.4532\n",
      "Epoch 31/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0498 - accuracy: 0.4563\n",
      "Epoch 32/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0482 - accuracy: 0.4574\n",
      "Epoch 33/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0469 - accuracy: 0.4605\n",
      "Epoch 34/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.0455 - accuracy: 0.4626\n",
      "Epoch 35/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0442 - accuracy: 0.4657\n",
      "Epoch 36/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0428 - accuracy: 0.4615\n",
      "Epoch 37/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0416 - accuracy: 0.4678\n",
      "Epoch 38/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0403 - accuracy: 0.4657\n",
      "Epoch 39/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0391 - accuracy: 0.4667\n",
      "Epoch 40/100\n",
      "31/31 [==============================] - 0s 355us/step - loss: 1.0378 - accuracy: 0.4688\n",
      "Epoch 41/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0365 - accuracy: 0.4699\n",
      "Epoch 42/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.0354 - accuracy: 0.4688\n",
      "Epoch 43/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.0341 - accuracy: 0.4688\n",
      "Epoch 44/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0329 - accuracy: 0.4740\n",
      "Epoch 45/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.0318 - accuracy: 0.4751\n",
      "Epoch 46/100\n",
      "31/31 [==============================] - 0s 355us/step - loss: 1.0308 - accuracy: 0.4751\n",
      "Epoch 47/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0295 - accuracy: 0.4782\n",
      "Epoch 48/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0285 - accuracy: 0.4792\n",
      "Epoch 49/100\n",
      "31/31 [==============================] - 0s 355us/step - loss: 1.0274 - accuracy: 0.4792\n",
      "Epoch 50/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0263 - accuracy: 0.4823\n",
      "Epoch 51/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.0252 - accuracy: 0.4823\n",
      "Epoch 52/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.0241 - accuracy: 0.4823\n",
      "Epoch 53/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0230 - accuracy: 0.4865\n",
      "Epoch 54/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 1.0220 - accuracy: 0.4854\n",
      "Epoch 55/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0211 - accuracy: 0.4854\n",
      "Epoch 56/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0202 - accuracy: 0.4927\n",
      "Epoch 57/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0192 - accuracy: 0.4886\n",
      "Epoch 58/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0183 - accuracy: 0.4938\n",
      "Epoch 59/100\n",
      "31/31 [==============================] - 0s 355us/step - loss: 1.0175 - accuracy: 0.4896\n",
      "Epoch 60/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0166 - accuracy: 0.4927\n",
      "Epoch 61/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0155 - accuracy: 0.4958\n",
      "Epoch 62/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0145 - accuracy: 0.4958\n",
      "Epoch 63/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0135 - accuracy: 0.4969\n",
      "Epoch 64/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0126 - accuracy: 0.4990\n",
      "Epoch 65/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0118 - accuracy: 0.5000\n",
      "Epoch 66/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0108 - accuracy: 0.4990\n",
      "Epoch 67/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0100 - accuracy: 0.4990\n",
      "Epoch 68/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0091 - accuracy: 0.5000\n",
      "Epoch 69/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0082 - accuracy: 0.5010\n",
      "Epoch 70/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0075 - accuracy: 0.5010\n",
      "Epoch 71/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0066 - accuracy: 0.5021\n",
      "Epoch 72/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0058 - accuracy: 0.4979\n",
      "Epoch 73/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0050 - accuracy: 0.5042\n",
      "Epoch 74/100\n",
      "31/31 [==============================] - 0s 355us/step - loss: 1.0042 - accuracy: 0.5052\n",
      "Epoch 75/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0033 - accuracy: 0.5062\n",
      "Epoch 76/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0025 - accuracy: 0.5094\n",
      "Epoch 77/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0017 - accuracy: 0.5083\n",
      "Epoch 78/100\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "31/31 [==============================] - 0s 420us/step - loss: 1.0010 - accuracy: 0.5083\n",
      "Epoch 79/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 1.0002 - accuracy: 0.5125\n",
      "Epoch 80/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 0.9994 - accuracy: 0.5114\n",
      "Epoch 81/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 0.9987 - accuracy: 0.5125\n",
      "Epoch 82/100\n",
      "31/31 [==============================] - 0s 355us/step - loss: 0.9979 - accuracy: 0.5094\n",
      "Epoch 83/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 0.9971 - accuracy: 0.5114\n",
      "Epoch 84/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 0.9964 - accuracy: 0.5125\n",
      "Epoch 85/100\n",
      "31/31 [==============================] - 0s 355us/step - loss: 0.9956 - accuracy: 0.5114\n",
      "Epoch 86/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 0.9950 - accuracy: 0.5135\n",
      "Epoch 87/100\n",
      "31/31 [==============================] - 0s 355us/step - loss: 0.9943 - accuracy: 0.5146\n",
      "Epoch 88/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 0.9936 - accuracy: 0.5166\n",
      "Epoch 89/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 0.9929 - accuracy: 0.5166\n",
      "Epoch 90/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 0.9923 - accuracy: 0.5198\n",
      "Epoch 91/100\n",
      "31/31 [==============================] - 0s 355us/step - loss: 0.9915 - accuracy: 0.5177\n",
      "Epoch 92/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 0.9908 - accuracy: 0.5198\n",
      "Epoch 93/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 0.9901 - accuracy: 0.5177\n",
      "Epoch 94/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 0.9894 - accuracy: 0.5187\n",
      "Epoch 95/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 0.9888 - accuracy: 0.5187\n",
      "Epoch 96/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 0.9881 - accuracy: 0.5187\n",
      "Epoch 97/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 0.9874 - accuracy: 0.5187\n",
      "Epoch 98/100\n",
      "31/31 [==============================] - 0s 355us/step - loss: 0.9867 - accuracy: 0.5198\n",
      "Epoch 99/100\n",
      "31/31 [==============================] - 0s 387us/step - loss: 0.9861 - accuracy: 0.5218\n",
      "Epoch 100/100\n",
      "31/31 [==============================] - 0s 420us/step - loss: 0.9853 - accuracy: 0.5198\n",
      "150 1012 424\n",
      " 1/32 [..............................] - ETA: 0s - loss: 0.9461 - accuracy: 0.5312WARNING:tensorflow:Callbacks method `on_train_batch_begin` is slow compared to the batch time (batch time: 0.0000s vs `on_train_batch_begin` time: 0.0010s). Check your callbacks.\n",
      "32/32 [==============================] - 0s 407us/step - loss: 0.9989 - accuracy: 0.5069\n",
      "300 1062 374\n",
      "34/34 [==============================] - 0s 383us/step - loss: 1.0030 - accuracy: 0.5094\n",
      "450 1112 324\n",
      "35/35 [==============================] - 0s 372us/step - loss: 1.0069 - accuracy: 0.5027\n",
      "600 1162 274\n",
      "37/37 [==============================] - 0s 379us/step - loss: 1.0102 - accuracy: 0.5000\n",
      "750 1212 224\n",
      "38/38 [==============================] - 0s 369us/step - loss: 1.0121 - accuracy: 0.5008\n",
      "900 1262 174\n",
      "40/40 [==============================] - 0s 375us/step - loss: 1.0255 - accuracy: 0.4945\n",
      "1050 1312 124\n",
      "41/41 [==============================] - 0s 561us/step - loss: 1.0479 - accuracy: 0.4840\n",
      "1200 1362 74\n",
      "43/43 [==============================] - 0s 419us/step - loss: 1.0660 - accuracy: 0.4780\n",
      "1350 1412 24\n",
      "45/45 [==============================] - 0s 400us/step - loss: 1.0633 - accuracy: 0.4738\n",
      "1422 1436 0\n",
      "45/45 [==============================] - 0s 467us/step - loss: 1.0657 - accuracy: 0.4687\n",
      "Epoch 1/100\n",
      "31/31 [==============================] - 0s 613us/step - loss: 1.1552 - accuracy: 0.3586\n",
      "Epoch 2/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.1235 - accuracy: 0.3784\n",
      "Epoch 3/100\n",
      "31/31 [==============================] - 0s 613us/step - loss: 1.1040 - accuracy: 0.3888\n",
      "Epoch 4/100\n",
      "31/31 [==============================] - 0s 613us/step - loss: 1.0893 - accuracy: 0.4168\n",
      "Epoch 5/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0785 - accuracy: 0.4064\n",
      "Epoch 6/100\n",
      "31/31 [==============================] - 0s 608us/step - loss: 1.0711 - accuracy: 0.4127\n",
      "Epoch 7/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0642 - accuracy: 0.4345\n",
      "Epoch 8/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0583 - accuracy: 0.4449\n",
      "Epoch 9/100\n",
      "31/31 [==============================] - 0s 613us/step - loss: 1.0532 - accuracy: 0.4449\n",
      "Epoch 10/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0491 - accuracy: 0.4491\n",
      "Epoch 11/100\n",
      "31/31 [==============================] - 0s 541us/step - loss: 1.0459 - accuracy: 0.4501\n",
      "Epoch 12/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0426 - accuracy: 0.4595\n",
      "Epoch 13/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0395 - accuracy: 0.4709\n",
      "Epoch 14/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0371 - accuracy: 0.4709\n",
      "Epoch 15/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0349 - accuracy: 0.4719\n",
      "Epoch 16/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0326 - accuracy: 0.4740\n",
      "Epoch 17/100\n",
      "31/31 [==============================] - 0s 613us/step - loss: 1.0308 - accuracy: 0.4719\n",
      "Epoch 18/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0292 - accuracy: 0.4688\n",
      "Epoch 19/100\n",
      "31/31 [==============================] - 0s 613us/step - loss: 1.0270 - accuracy: 0.4740\n",
      "Epoch 20/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0253 - accuracy: 0.4782\n",
      "Epoch 21/100\n",
      "31/31 [==============================] - 0s 546us/step - loss: 1.0239 - accuracy: 0.4740\n",
      "Epoch 22/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0222 - accuracy: 0.4813\n",
      "Epoch 23/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0208 - accuracy: 0.4834\n",
      "Epoch 24/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0196 - accuracy: 0.4854\n",
      "Epoch 25/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0181 - accuracy: 0.4854\n",
      "Epoch 26/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0169 - accuracy: 0.4896\n",
      "Epoch 27/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0158 - accuracy: 0.4969\n",
      "Epoch 28/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0147 - accuracy: 0.4906\n",
      "Epoch 29/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0137 - accuracy: 0.4927\n",
      "Epoch 30/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0124 - accuracy: 0.4875\n",
      "Epoch 31/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0116 - accuracy: 0.4896\n",
      "Epoch 32/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0107 - accuracy: 0.4865\n",
      "Epoch 33/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0096 - accuracy: 0.4886\n",
      "Epoch 34/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0086 - accuracy: 0.4875\n",
      "Epoch 35/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0076 - accuracy: 0.4906\n",
      "Epoch 36/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0068 - accuracy: 0.4886\n",
      "Epoch 37/100\n",
      "31/31 [==============================] - 0s 646us/step - loss: 1.0058 - accuracy: 0.4906\n",
      "Epoch 38/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0051 - accuracy: 0.4979\n",
      "Epoch 39/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0044 - accuracy: 0.4958\n",
      "Epoch 40/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0037 - accuracy: 0.4917\n",
      "Epoch 41/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0027 - accuracy: 0.4896\n",
      "Epoch 42/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0018 - accuracy: 0.4834\n",
      "Epoch 43/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 1.0012 - accuracy: 0.4875\n",
      "Epoch 44/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 1.0006 - accuracy: 0.4938\n",
      "Epoch 45/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9998 - accuracy: 0.4938\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 46/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9991 - accuracy: 0.4917\n",
      "Epoch 47/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9984 - accuracy: 0.4896\n",
      "Epoch 48/100\n",
      "31/31 [==============================] - 0s 613us/step - loss: 0.9976 - accuracy: 0.4917\n",
      "Epoch 49/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 0.9975 - accuracy: 0.4958\n",
      "Epoch 50/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9967 - accuracy: 0.4990\n",
      "Epoch 51/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 0.9960 - accuracy: 0.4958\n",
      "Epoch 52/100\n",
      "31/31 [==============================] - 0s 613us/step - loss: 0.9952 - accuracy: 0.4990\n",
      "Epoch 53/100\n",
      "31/31 [==============================] - ETA: 0s - loss: 0.8787 - accuracy: 0.53 - 0s 549us/step - loss: 0.9945 - accuracy: 0.4990\n",
      "Epoch 54/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9940 - accuracy: 0.4979\n",
      "Epoch 55/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9936 - accuracy: 0.4948\n",
      "Epoch 56/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 0.9931 - accuracy: 0.4906\n",
      "Epoch 57/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 0.9927 - accuracy: 0.4948\n",
      "Epoch 58/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9919 - accuracy: 0.5000\n",
      "Epoch 59/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9915 - accuracy: 0.4958\n",
      "Epoch 60/100\n",
      "31/31 [==============================] - 0s 613us/step - loss: 0.9909 - accuracy: 0.4958\n",
      "Epoch 61/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 0.9901 - accuracy: 0.4938\n",
      "Epoch 62/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9898 - accuracy: 0.5000\n",
      "Epoch 63/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9893 - accuracy: 0.5021\n",
      "Epoch 64/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 0.9889 - accuracy: 0.5021\n",
      "Epoch 65/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9884 - accuracy: 0.5042\n",
      "Epoch 66/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 0.9877 - accuracy: 0.5031\n",
      "Epoch 67/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 0.9874 - accuracy: 0.5073\n",
      "Epoch 68/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 0.9869 - accuracy: 0.5094\n",
      "Epoch 69/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 0.9865 - accuracy: 0.5042\n",
      "Epoch 70/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9860 - accuracy: 0.4948\n",
      "Epoch 71/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9854 - accuracy: 0.5000\n",
      "Epoch 72/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9851 - accuracy: 0.5000\n",
      "Epoch 73/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9846 - accuracy: 0.5042\n",
      "Epoch 74/100\n",
      "31/31 [==============================] - 0s 613us/step - loss: 0.9838 - accuracy: 0.4958\n",
      "Epoch 75/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9834 - accuracy: 0.4979\n",
      "Epoch 76/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9829 - accuracy: 0.4948\n",
      "Epoch 77/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 0.9825 - accuracy: 0.4979\n",
      "Epoch 78/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9821 - accuracy: 0.4990\n",
      "Epoch 79/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9816 - accuracy: 0.4990\n",
      "Epoch 80/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 0.9813 - accuracy: 0.5062\n",
      "Epoch 81/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9810 - accuracy: 0.5073\n",
      "Epoch 82/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9806 - accuracy: 0.5094\n",
      "Epoch 83/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9799 - accuracy: 0.5062\n",
      "Epoch 84/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 0.9796 - accuracy: 0.5104\n",
      "Epoch 85/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9790 - accuracy: 0.5031\n",
      "Epoch 86/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9786 - accuracy: 0.5021\n",
      "Epoch 87/100\n",
      "31/31 [==============================] - 0s 613us/step - loss: 0.9783 - accuracy: 0.5125\n",
      "Epoch 88/100\n",
      "31/31 [==============================] - 0s 613us/step - loss: 0.9778 - accuracy: 0.5094\n",
      "Epoch 89/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9772 - accuracy: 0.5104\n",
      "Epoch 90/100\n",
      "31/31 [==============================] - 0s 549us/step - loss: 0.9771 - accuracy: 0.5083\n",
      "Epoch 91/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9764 - accuracy: 0.5062\n",
      "Epoch 92/100\n",
      "31/31 [==============================] - 0s 575us/step - loss: 0.9759 - accuracy: 0.5125\n",
      "Epoch 93/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9757 - accuracy: 0.5104\n",
      "Epoch 94/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9752 - accuracy: 0.5094\n",
      "Epoch 95/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9748 - accuracy: 0.5125\n",
      "Epoch 96/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9745 - accuracy: 0.5114\n",
      "Epoch 97/100\n",
      "31/31 [==============================] - 0s 613us/step - loss: 0.9741 - accuracy: 0.5135\n",
      "Epoch 98/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9738 - accuracy: 0.5125\n",
      "Epoch 99/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9733 - accuracy: 0.5135\n",
      "Epoch 100/100\n",
      "31/31 [==============================] - 0s 581us/step - loss: 0.9728 - accuracy: 0.5146\n",
      "150 1012 424\n",
      "32/32 [==============================] - 0s 563us/step - loss: 0.9851 - accuracy: 0.5079\n",
      "300 1062 374\n",
      "34/34 [==============================] - 0s 618us/step - loss: 0.9859 - accuracy: 0.5000\n",
      "450 1112 324\n",
      "35/35 [==============================] - 0s 572us/step - loss: 0.9874 - accuracy: 0.4946\n",
      "600 1162 274\n",
      "37/37 [==============================] - 0s 592us/step - loss: 0.9921 - accuracy: 0.4905\n",
      "750 1212 224\n",
      "38/38 [==============================] - 0s 606us/step - loss: 0.9928 - accuracy: 0.4942\n",
      "900 1262 174\n",
      "40/40 [==============================] - 0s 576us/step - loss: 1.0042 - accuracy: 0.4913\n",
      "1050 1312 124\n",
      "41/41 [==============================] - 0s 781us/step - loss: 1.0124 - accuracy: 0.4756\n",
      "1200 1362 74\n",
      "43/43 [==============================] - 0s 559us/step - loss: 1.0163 - accuracy: 0.4684\n",
      "1350 1412 24\n",
      "45/45 [==============================] - 0s 534us/step - loss: 1.0116 - accuracy: 0.4674\n",
      "1422 1436 0\n",
      "45/45 [==============================] - 0s 601us/step - loss: 1.0072 - accuracy: 0.4923\n"
     ]
    }
   ],
   "source": [
    "preds_norm = best_model_normal(data.drop(columns=[\"Date\",\"Target\",\"sentiment\"]),data.Target,50)\n",
    "preds_sentiment = best_model_sentiment(data.drop(columns=[\"Date\",\"Target\"]),data.Target,50)\n",
    "preds_norm = np.vstack(preds_norm)\n",
    "preds_sentiment = np.vstack(preds_sentiment)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "94dafafe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(474, 474, 474)"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "_,_,_,Y_test = train_test_split(data,data.Target,test_size = 0.33,shuffle = False)\n",
    "len(Y_test), len(preds_norm), len(preds_sentiment)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "4e78bca5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "preds_sentiment.shape == preds_norm.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "1bb6a056",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Simple approach\n",
    "def prod_labels_normal(preds):\n",
    "    return np.argmax(preds_norm,axis=1)-1\n",
    "\n",
    "def prod_labels_sentiment(preds):\n",
    "    return np.argmax(preds_sentiment,axis=1)-1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "9ede5560",
   "metadata": {},
   "outputs": [],
   "source": [
    "labels_norm = prod_labels_normal(preds_norm)\n",
    "labels_sentiment = prod_labels_sentiment(preds_sentiment)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "772fe547",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "(None, Counter({1.0: 206, 0.0: 142, -1.0: 126}))"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Without sentiment\n",
    "conf_matrix = metrics.confusion_matrix(Y_test, labels_norm)\n",
    "sns.heatmap(conf_matrix,annot = True, annot_kws={\"size\": 16},fmt='g') # font size\n",
    "plt.show(),Counter(Y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "7595f8e5",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "(None, Counter({1.0: 206, 0.0: 142, -1.0: 126}))"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# With sentiment\n",
    "conf_matrix = metrics.confusion_matrix(Y_test, labels_sentiment)\n",
    "sns.heatmap(conf_matrix,annot = True, annot_kws={\"size\": 16},fmt='g') # font size\n",
    "plt.show(),Counter(Y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "86476802",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "precision score:  0.30704519881475917\n",
      "recall score:  0.36075949367088606\n",
      "f1 score:  0.3161595913310098\n",
      "accuracy score:  0.36075949367088606\n"
     ]
    }
   ],
   "source": [
    "# sentiment metrics\n",
    "from sklearn.metrics import f1_score, precision_score, recall_score\n",
    "print(\"precision score: \", precision_score(Y_test, labels_sentiment, average=\"weighted\"))\n",
    "print(\"recall score: \", recall_score(Y_test, labels_sentiment, average=\"weighted\"))\n",
    "print(\"f1 score: \", f1_score(Y_test, labels_sentiment, average=\"weighted\"))\n",
    "print(\"accuracy score: \", metrics.accuracy_score(Y_test, labels_sentiment))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "3ce56352",
   "metadata": {},
   "outputs": [],
   "source": [
    "# without sentiment metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "a393adcb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "precision score:  0.3037462583456311\n",
      "recall score:  0.33544303797468356\n",
      "f1 score:  0.30796155149514864\n",
      "accuracy score:  0.33544303797468356\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import f1_score, precision_score, recall_score\n",
    "print(\"precision score: \", precision_score(Y_test, labels_norm, average=\"weighted\"))\n",
    "print(\"recall score: \", recall_score(Y_test, labels_norm, average=\"weighted\"))\n",
    "print(\"f1 score: \", f1_score(Y_test, labels_norm, average=\"weighted\"))\n",
    "print(\"accuracy score: \", metrics.accuracy_score(Y_test, labels_norm))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f5545c7c",
   "metadata": {},
   "source": [
    "# Backtester Without Sentiment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "8d237be9",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-121-fbc364d87837>:3: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  trading_data['5_day_return'] = ((trading_data.returns + 1).rolling(5, min_periods = 5).agg(lambda x : x.prod()) - 1).shift(-5)\n",
      "<ipython-input-121-fbc364d87837>:5: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  trading_data['predictions'] = labels_norm\n",
      "<ipython-input-121-fbc364d87837>:6: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  trading_data.dropna(inplace=True)\n"
     ]
    }
   ],
   "source": [
    "X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size = 0.33,shuffle = False)\n",
    "trading_data = data.iloc[len(X_train):,:]\n",
    "trading_data['5_day_return'] = ((trading_data.returns + 1).rolling(5, min_periods = 5).agg(lambda x : x.prod()) - 1).shift(-5)\n",
    "\n",
    "trading_data['predictions'] = labels_norm\n",
    "trading_data.dropna(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "34a929cd",
   "metadata": {},
   "outputs": [],
   "source": [
    "class Backtester:\n",
    "    \n",
    "    def __init__(self,trading_data, budget = 10000, investment_proportion = 0.5):\n",
    "        self.trading_data = trading_data\n",
    "        self.predictions  = trading_data.predictions\n",
    "        self.balance      = budget\n",
    "        self.dates        = trading_data.Date\n",
    "        self.traded_days  = [0]\n",
    "        self.drawdowns    = {'Date':[], 'Prediction':[], 'Next_5_day_return':[], 'Loss':[]}\n",
    "        self.balance_hist = [self.balance]\n",
    "        self.returns      = [0]\n",
    "        self.investment_proportion = investment_proportion\n",
    "        \n",
    "    def make_money(self):\n",
    "        for trading_day in self.dates:\n",
    "            pred  = self.trading_data.loc[self.trading_data.Date == trading_day, 'predictions'].values[0]\n",
    "            \n",
    "            if pred != 0:\n",
    "                profit= self.invest(pred, trading_day)\n",
    "                self.traded_days.append(trading_day)\n",
    "                print('On '+trading_day+' predicted '+str(pred)+' \\n Profit = '+str(profit)+'$.')\n",
    "                \n",
    "                self.update_balance(profit)\n",
    "                print(\"Balance: \" +str(self.balance)+'$')\n",
    "\n",
    "        \n",
    "    def invest(self, pred, date):\n",
    "        \n",
    "        portfolio_profit = 0\n",
    "        money_to_invest  = self.balance*self.investment_proportion\n",
    "        investment_value = 0\n",
    "        returns = self.trading_data.loc[(self.trading_data.Date >= date),'5_day_return'].values[0]\n",
    "        if pred == 1:\n",
    "            investment_value = money_to_invest*(1+returns)\n",
    "        elif pred == -1:\n",
    "            investment_value = money_to_invest*(1-returns)\n",
    "            \n",
    "        profit = investment_value - money_to_invest\n",
    "        \n",
    "        if profit<0:\n",
    "            self.drawdowns['Date'].append(date)\n",
    "            self.drawdowns['Prediction'].append(pred)\n",
    "            self.drawdowns['Next_5_day_return'].append(returns)\n",
    "            self.drawdowns['Loss'].append(profit)\n",
    "\n",
    "        portfolio_profit = portfolio_profit+profit\n",
    "                \n",
    "        return portfolio_profit\n",
    "        \n",
    "    def update_balance(self,val1):\n",
    "        new_balance    = self.balance + val1\n",
    "        overall_return = (new_balance-self.balance)/self.balance\n",
    "        \n",
    "        self.returns.append(overall_return)\n",
    "        self.balance   = new_balance\n",
    "        self.balance_hist.append(self.balance)\n",
    "        \n",
    "    def show_drawdowns(self):\n",
    "        print(tabulate(self.drawdowns, headers='keys', floatfmt='.3f', tablefmt='fancy_grid'))\n",
    "    \n",
    "    def show_balance_hist(self):\n",
    "        hist = pd.DataFrame()\n",
    "        hist['Date'] = self.traded_days\n",
    "        hist['Balance'] = self.balance_hist\n",
    "        hist.plot(x = 'Date', y = 'Balance', kind = 'line', figsize=(10, 7))\n",
    "        plt.show()\n",
    "        \n",
    "    def show_returns_hist(self):\n",
    "        hist = pd.DataFrame()\n",
    "        hist['Date'] = self.traded_days\n",
    "        hist['Returns'] = self.returns\n",
    "        hist.plot(x = 'Date', y = 'Returns', kind = 'line', figsize=(10, 7))\n",
    "        plt.show()\n",
    "                    \n",
    "                    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "02120556",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "On 2020-01-02 predicted -1 \n",
      " Profit = -674.6702121612279$.\n",
      "Balance: 9325.329787838771$\n",
      "On 2020-01-03 predicted -1 \n",
      " Profit = -373.26208502093914$.\n",
      "Balance: 8952.067702817832$\n",
      "On 2020-01-04 predicted -1 \n",
      " Profit = -226.33776852920028$.\n",
      "Balance: 8725.729934288633$\n",
      "On 2020-01-05 predicted -1 \n",
      " Profit = -355.6718543973893$.\n",
      "Balance: 8370.058079891243$\n",
      "On 2020-01-06 predicted -1 \n",
      " Profit = -115.62759079401667$.\n",
      "Balance: 8254.430489097227$\n",
      "On 2020-01-11 predicted -1 \n",
      " Profit = -281.90677860402684$.\n",
      "Balance: 7972.5237104932$\n",
      "On 2020-01-12 predicted -1 \n",
      " Profit = -286.70702544394817$.\n",
      "Balance: 7685.816685049253$\n",
      "On 2020-01-13 predicted 1 \n",
      " Profit = 301.46642065858623$.\n",
      "Balance: 7987.283105707838$\n",
      "On 2020-01-15 predicted -1 \n",
      " Profit = 54.18618633713004$.\n",
      "Balance: 8041.469292044969$\n",
      "On 2020-01-16 predicted 1 \n",
      " Profit = 8.151690144755321$.\n",
      "Balance: 8049.620982189725$\n",
      "On 2020-01-17 predicted -1 \n",
      " Profit = 89.48829203552987$.\n",
      "Balance: 8139.109274225255$\n",
      "On 2020-01-18 predicted 1 \n",
      " Profit = -195.23830938831725$.\n",
      "Balance: 7943.870964836938$\n",
      "On 2020-01-19 predicted -1 \n",
      " Profit = 95.1889272031176$.\n",
      "Balance: 8039.059892040055$\n",
      "On 2020-01-20 predicted -1 \n",
      " Profit = 107.63570860673008$.\n",
      "Balance: 8146.695600646785$\n",
      "On 2020-01-21 predicted 1 \n",
      " Profit = -55.54069828596721$.\n",
      "Balance: 8091.154902360819$\n",
      "On 2020-01-22 predicted -1 \n",
      " Profit = -85.35618693061815$.\n",
      "Balance: 8005.798715430201$\n",
      "On 2020-01-25 predicted 1 \n",
      " Profit = 303.676351037584$.\n",
      "Balance: 8309.475066467785$\n",
      "On 2020-01-26 predicted 1 \n",
      " Profit = 234.30946850142072$.\n",
      "Balance: 8543.784534969205$\n",
      "On 2020-01-27 predicted 1 \n",
      " Profit = 94.17070741315365$.\n",
      "Balance: 8637.955242382359$\n",
      "On 2020-01-28 predicted 1 \n",
      " Profit = -93.43420175023448$.\n",
      "Balance: 8544.521040632124$\n",
      "On 2020-01-29 predicted 1 \n",
      " Profit = -117.90361066717833$.\n",
      "Balance: 8426.617429964946$\n",
      "On 2020-01-31 predicted 1 \n",
      " Profit = 94.76732564766507$.\n",
      "Balance: 8521.384755612611$\n",
      "On 2020-02-01 predicted 1 \n",
      " Profit = 122.26640041006294$.\n",
      "Balance: 8643.651156022674$\n",
      "On 2020-02-02 predicted 1 \n",
      " Profit = 167.0860966773207$.\n",
      "Balance: 8810.737252699993$\n",
      "On 2020-02-03 predicted 1 \n",
      " Profit = 216.76161307665097$.\n",
      "Balance: 9027.498865776644$\n",
      "On 2020-02-04 predicted 1 \n",
      " Profit = 368.0280390085418$.\n",
      "Balance: 9395.526904785187$\n",
      "On 2020-02-05 predicted 1 \n",
      " Profit = 95.07017437440027$.\n",
      "Balance: 9490.597079159586$\n",
      "On 2020-02-06 predicted -1 \n",
      " Profit = -186.66895155916654$.\n",
      "Balance: 9303.92812760042$\n",
      "On 2020-02-07 predicted 1 \n",
      " Profit = 201.3942924694993$.\n",
      "Balance: 9505.322420069919$\n",
      "On 2020-02-08 predicted 1 \n",
      " Profit = 134.60905697876296$.\n",
      "Balance: 9639.931477048682$\n",
      "On 2020-02-09 predicted -1 \n",
      " Profit = -74.49290989758356$.\n",
      "Balance: 9565.438567151097$\n",
      "On 2020-02-10 predicted -1 \n",
      " Profit = -12.737655487196207$.\n",
      "Balance: 9552.700911663902$\n",
      "On 2020-02-12 predicted -1 \n",
      " Profit = 235.31458534669673$.\n",
      "Balance: 9788.015497010598$\n",
      "On 2020-02-13 predicted -1 \n",
      " Profit = 27.74495002456206$.\n",
      "Balance: 9815.76044703516$\n",
      "On 2020-02-14 predicted -1 \n",
      " Profit = 258.42401173497956$.\n",
      "Balance: 10074.18445877014$\n",
      "On 2020-02-15 predicted -1 \n",
      " Profit = 114.47922650960982$.\n",
      "Balance: 10188.66368527975$\n",
      "On 2020-02-16 predicted 1 \n",
      " Profit = -101.73540247466872$.\n",
      "Balance: 10086.92828280508$\n",
      "On 2020-02-17 predicted -1 \n",
      " Profit = 11.225966419674933$.\n",
      "Balance: 10098.154249224755$\n",
      "On 2020-02-18 predicted 1 \n",
      " Profit = -86.61613756506858$.\n",
      "Balance: 10011.538111659687$\n",
      "On 2020-02-19 predicted -1 \n",
      " Profit = -6.978835905315009$.\n",
      "Balance: 10004.559275754373$\n",
      "On 2020-02-20 predicted -1 \n",
      " Profit = 111.10696328136873$.\n",
      "Balance: 10115.666239035741$\n",
      "On 2020-02-21 predicted -1 \n",
      " Profit = 361.71579099222936$.\n",
      "Balance: 10477.382030027971$\n",
      "On 2020-02-22 predicted -1 \n",
      " Profit = 381.0895816528373$.\n",
      "Balance: 10858.471611680809$\n",
      "On 2020-02-23 predicted -1 \n",
      " Profit = 547.9547584753791$.\n",
      "Balance: 11406.426370156187$\n",
      "On 2020-02-24 predicted 1 \n",
      " Profit = -496.7513974946837$.\n",
      "Balance: 10909.674972661503$\n",
      "On 2020-02-25 predicted -1 \n",
      " Profit = 364.0181230002745$.\n",
      "Balance: 11273.693095661778$\n",
      "On 2020-02-27 predicted -1 \n",
      " Profit = -1.689928043011605$.\n",
      "Balance: 11272.003167618766$\n",
      "On 2020-02-28 predicted -1 \n",
      " Profit = -43.042971624942766$.\n",
      "Balance: 11228.960195993823$\n",
      "On 2020-02-29 predicted -1 \n",
      " Profit = -250.31769447726128$.\n",
      "Balance: 10978.642501516562$\n",
      "On 2020-03-01 predicted -1 \n",
      " Profit = -287.2563180165871$.\n",
      "Balance: 10691.386183499975$\n",
      "On 2020-03-02 predicted 1 \n",
      " Profit = 19.423213231299997$.\n",
      "Balance: 10710.809396731274$\n",
      "On 2020-03-03 predicted 1 \n",
      " Profit = -331.3605896664203$.\n",
      "Balance: 10379.448807064855$\n",
      "On 2020-03-04 predicted 1 \n",
      " Profit = -394.34943385309725$.\n",
      "Balance: 9985.099373211757$\n",
      "On 2020-03-05 predicted 1 \n",
      " Profit = -514.2953107020935$.\n",
      "Balance: 9470.804062509664$\n",
      "On 2020-03-06 predicted 1 \n",
      " Profit = -502.94029006098435$.\n",
      "Balance: 8967.86377244868$\n",
      "On 2020-03-07 predicted 1 \n",
      " Profit = -1585.90734830465$.\n",
      "Balance: 7381.956424144029$\n",
      "On 2020-03-08 predicted -1 \n",
      " Profit = 926.6131467859418$.\n",
      "Balance: 8308.56957092997$\n",
      "On 2020-03-09 predicted -1 \n",
      " Profit = 1142.2293008830738$.\n",
      "Balance: 9450.798871813044$\n",
      "On 2020-03-10 predicted -1 \n",
      " Profit = 1203.155107771494$.\n",
      "Balance: 10653.953979584538$\n",
      "On 2020-03-11 predicted -1 \n",
      " Profit = 1560.475078852919$.\n",
      "Balance: 12214.429058437458$\n",
      "On 2020-03-20 predicted 1 \n",
      " Profit = 380.128571092896$.\n",
      "Balance: 12594.557629530354$\n",
      "On 2020-03-21 predicted 1 \n",
      " Profit = 432.81157089025146$.\n",
      "Balance: 13027.369200420606$\n",
      "On 2020-03-22 predicted 1 \n",
      " Profit = 571.6092281554074$.\n",
      "Balance: 13598.978428576014$\n",
      "On 2020-03-23 predicted 1 \n",
      " Profit = -147.61550886702753$.\n",
      "Balance: 13451.362919708987$\n",
      "On 2020-03-24 predicted 1 \n",
      " Profit = 34.06660929521513$.\n",
      "Balance: 13485.429529004203$\n",
      "On 2020-03-25 predicted 1 \n",
      " Profit = 85.30830082791272$.\n",
      "Balance: 13570.737829832116$\n",
      "On 2020-03-26 predicted 1 \n",
      " Profit = 200.03532579047715$.\n",
      "Balance: 13770.773155622594$\n",
      "On 2020-03-27 predicted 1 \n",
      " Profit = 588.3904958064932$.\n",
      "Balance: 14359.163651429088$\n",
      "On 2020-03-31 predicted 1 \n",
      " Profit = 801.2409917499335$.\n",
      "Balance: 15160.404643179021$\n",
      "On 2020-04-01 predicted 1 \n",
      " Profit = 581.7816587637344$.\n",
      "Balance: 15742.186301942755$\n",
      "On 2020-04-02 predicted 1 \n",
      " Profit = 561.7684467613426$.\n",
      "Balance: 16303.954748704098$\n",
      "On 2020-04-04 predicted 1 \n",
      " Profit = 412.6713448932942$.\n",
      "Balance: 16716.62609359739$\n",
      "On 2020-04-05 predicted 1 \n",
      " Profit = 73.21971053585912$.\n",
      "Balance: 16789.84580413325$\n",
      "On 2020-04-06 predicted 1 \n",
      " Profit = -381.15227114769823$.\n",
      "Balance: 16408.69353298555$\n",
      "On 2020-04-07 predicted 1 \n",
      " Profit = -187.78614985474087$.\n",
      "Balance: 16220.90738313081$\n",
      "On 2020-04-08 predicted 1 \n",
      " Profit = -432.66468862244346$.\n",
      "Balance: 15788.242694508368$\n",
      "On 2020-04-09 predicted 1 \n",
      " Profit = -397.54370985503374$.\n",
      "Balance: 15390.698984653334$\n",
      "On 2020-04-10 predicted 1 \n",
      " Profit = -200.30754160047127$.\n",
      "Balance: 15190.391443052864$\n",
      "On 2020-04-12 predicted -1 \n",
      " Profit = -213.65681455965296$.\n",
      "Balance: 14976.73462849321$\n",
      "On 2020-04-13 predicted -1 \n",
      " Profit = -260.823935157312$.\n",
      "Balance: 14715.910693335898$\n",
      "On 2020-04-14 predicted -1 \n",
      " Profit = -269.11238172646426$.\n",
      "Balance: 14446.798311609433$\n",
      "On 2020-04-15 predicted -1 \n",
      " Profit = -509.5900495131282$.\n",
      "Balance: 13937.208262096305$\n",
      "On 2020-04-16 predicted 1 \n",
      " Profit = 254.06485405847798$.\n",
      "Balance: 14191.273116154782$\n",
      "On 2020-05-02 predicted 1 \n",
      " Profit = 608.1077082054535$.\n",
      "Balance: 14799.380824360236$\n",
      "On 2020-05-03 predicted 1 \n",
      " Profit = 628.8680381677368$.\n",
      "Balance: 15428.248862527973$\n",
      "On 2020-05-04 predicted 1 \n",
      " Profit = 471.70567359385313$.\n",
      "Balance: 15899.954536121826$\n",
      "On 2020-05-05 predicted 1 \n",
      " Profit = -174.2320817040636$.\n",
      "Balance: 15725.722454417762$\n",
      "On 2020-05-06 predicted 1 \n",
      " Profit = -452.6395091645745$.\n",
      "Balance: 15273.082945253187$\n",
      "On 2020-05-08 predicted -1 \n",
      " Profit = 355.45529797985364$.\n",
      "Balance: 15628.53824323304$\n",
      "On 2020-05-09 predicted -1 \n",
      " Profit = -91.11056917063797$.\n",
      "Balance: 15537.427674062403$\n",
      "On 2020-05-14 predicted 1 \n",
      " Profit = -2.9904698499503866$.\n",
      "Balance: 15534.437204212452$\n",
      "On 2020-05-15 predicted -1 \n",
      " Profit = -129.75122677040417$.\n",
      "Balance: 15404.685977442048$\n",
      "On 2020-05-16 predicted 1 \n",
      " Profit = -194.01757443407223$.\n",
      "Balance: 15210.668403007976$\n",
      "On 2020-05-17 predicted 1 \n",
      " Profit = -307.12324193748555$.\n",
      "Balance: 14903.545161070491$\n",
      "On 2020-05-18 predicted 1 \n",
      " Profit = -317.04587468558384$.\n",
      "Balance: 14586.499286384907$\n",
      "On 2020-05-20 predicted 1 \n",
      " Profit = -492.3267185592258$.\n",
      "Balance: 14094.17256782568$\n",
      "On 2020-05-23 predicted 1 \n",
      " Profit = 65.0773660274599$.\n",
      "Balance: 14159.249933853142$\n",
      "On 2020-05-26 predicted 1 \n",
      " Profit = 401.3003067966383$.\n",
      "Balance: 14560.55024064978$\n",
      "On 2020-05-27 predicted 1 \n",
      " Profit = 625.6542601512683$.\n",
      "Balance: 15186.204500801048$\n",
      "On 2020-05-28 predicted 1 \n",
      " Profit = 2.5843903524246343$.\n",
      "Balance: 15188.788891153472$\n",
      "On 2020-05-29 predicted 1 \n",
      " Profit = 140.05475612912142$.\n",
      "Balance: 15328.843647282592$\n",
      "On 2020-05-31 predicted 1 \n",
      " Profit = 132.51622025417237$.\n",
      "Balance: 15461.359867536765$\n",
      "On 2020-06-01 predicted 1 \n",
      " Profit = -312.40572642265306$.\n",
      "Balance: 15148.95414111411$\n",
      "On 2020-06-02 predicted 1 \n",
      " Profit = 145.64204244596385$.\n",
      "Balance: 15294.596183560076$\n",
      "On 2020-06-03 predicted 1 \n",
      " Profit = 72.71139356979165$.\n",
      "Balance: 15367.307577129868$\n",
      "On 2020-06-04 predicted 1 \n",
      " Profit = -3.0961695589758165$.\n",
      "Balance: 15364.211407570892$\n",
      "On 2020-06-05 predicted 1 \n",
      " Profit = 130.06738209187915$.\n",
      "Balance: 15494.27878966277$\n",
      "On 2020-06-06 predicted 1 \n",
      " Profit = -213.08048721019986$.\n",
      "Balance: 15281.19830245257$\n",
      "On 2020-06-07 predicted 1 \n",
      " Profit = -174.13143266817042$.\n",
      "Balance: 15107.066869784401$\n",
      "On 2020-06-08 predicted 1 \n",
      " Profit = -183.18162459263476$.\n",
      "Balance: 14923.885245191766$\n",
      "On 2020-06-09 predicted 1 \n",
      " Profit = -249.1933100688484$.\n",
      "Balance: 14674.691935122919$\n",
      "On 2020-06-10 predicted 1 \n",
      " Profit = -249.41835177593202$.\n",
      "Balance: 14425.273583346987$\n",
      "On 2020-06-12 predicted 1 \n",
      " Profit = -0.3583886752330727$.\n",
      "Balance: 14424.915194671754$\n",
      "On 2020-06-13 predicted 1 \n",
      " Profit = -38.629644103205464$.\n",
      "Balance: 14386.285550568547$\n",
      "On 2020-06-14 predicted 1 \n",
      " Profit = -60.550069465440174$.\n",
      "Balance: 14325.735481103107$\n",
      "On 2020-06-15 predicted 1 \n",
      " Profit = -71.7666496971915$.\n",
      "Balance: 14253.968831405917$\n",
      "On 2020-06-16 predicted 1 \n",
      " Profit = -140.1150676117768$.\n",
      "Balance: 14113.85376379414$\n",
      "On 2020-06-17 predicted 1 \n",
      " Profit = 100.3205345607239$.\n",
      "Balance: 14214.174298354865$\n",
      "On 2020-06-18 predicted 1 \n",
      " Profit = 131.58294137718167$.\n",
      "Balance: 14345.757239732047$\n",
      "On 2020-06-19 predicted 1 \n",
      " Profit = 15.811066910192494$.\n",
      "Balance: 14361.568306642239$\n",
      "On 2020-06-20 predicted 1 \n",
      " Profit = -41.56721524709701$.\n",
      "Balance: 14320.001091395141$\n",
      "On 2020-06-21 predicted 1 \n",
      " Profit = -86.63262779763409$.\n",
      "Balance: 14233.368463597508$\n",
      "On 2020-06-22 predicted 1 \n",
      " Profit = -356.00077869850793$.\n",
      "Balance: 13877.367684899$\n",
      "On 2020-06-23 predicted 1 \n",
      " Profit = -280.19510638957854$.\n",
      "Balance: 13597.17257850942$\n",
      "On 2020-06-24 predicted 1 \n",
      " Profit = -71.6857394870458$.\n",
      "Balance: 13525.486839022375$\n",
      "On 2020-06-25 predicted 1 \n",
      " Profit = -74.0568163044154$.\n",
      "Balance: 13451.43002271796$\n",
      "On 2020-06-26 predicted -1 \n",
      " Profit = -38.40788388571036$.\n",
      "Balance: 13413.02213883225$\n",
      "On 2020-06-27 predicted -1 \n",
      " Profit = -46.27672767042441$.\n",
      "Balance: 13366.745411161824$\n",
      "On 2020-06-28 predicted 1 \n",
      " Profit = -32.90867728019293$.\n",
      "Balance: 13333.836733881632$\n",
      "On 2020-06-29 predicted 1 \n",
      " Profit = -33.870431913668654$.\n",
      "Balance: 13299.966301967963$\n",
      "On 2020-06-30 predicted -1 \n",
      " Profit = 37.28929158191022$.\n",
      "Balance: 13337.255593549873$\n",
      "On 2020-07-01 predicted 1 \n",
      " Profit = 85.0671949021662$.\n",
      "Balance: 13422.322788452038$\n",
      "On 2020-07-02 predicted -1 \n",
      " Profit = -75.83554677912161$.\n",
      "Balance: 13346.487241672916$\n",
      "On 2020-07-03 predicted 1 \n",
      " Profit = 200.34735521990206$.\n",
      "Balance: 13546.834596892819$\n",
      "On 2020-07-04 predicted 1 \n",
      " Profit = 86.319809222824$.\n",
      "Balance: 13633.154406115642$\n",
      "On 2020-07-05 predicted -1 \n",
      " Profit = -123.1199956834489$.\n",
      "Balance: 13510.034410432192$\n",
      "On 2020-07-06 predicted -1 \n",
      " Profit = 77.88759702246807$.\n",
      "Balance: 13587.922007454661$\n",
      "On 2020-07-07 predicted 1 \n",
      " Profit = 14.229385838931194$.\n",
      "Balance: 13602.151393293592$\n",
      "On 2020-07-08 predicted -1 \n",
      " Profit = 106.59667623313544$.\n",
      "Balance: 13708.748069526728$\n",
      "On 2020-07-09 predicted -1 \n",
      " Profit = 20.54038355996272$.\n",
      "Balance: 13729.28845308669$\n",
      "On 2020-07-10 predicted -1 \n",
      " Profit = 50.882252492836415$.\n",
      "Balance: 13780.170705579527$\n",
      "On 2020-07-11 predicted -1 \n",
      " Profit = 64.4954251660456$.\n",
      "Balance: 13844.666130745572$\n",
      "On 2020-07-12 predicted -1 \n",
      " Profit = 74.68637904676325$.\n",
      "Balance: 13919.352509792336$\n",
      "On 2020-07-13 predicted -1 \n",
      " Profit = 50.941907987235936$.\n",
      "Balance: 13970.294417779573$\n",
      "On 2020-07-14 predicted -1 \n",
      " Profit = 63.90054430529108$.\n",
      "Balance: 14034.194962084865$\n",
      "On 2020-07-15 predicted -1 \n",
      " Profit = -94.48237595016872$.\n",
      "Balance: 13939.712586134696$\n",
      "On 2020-07-16 predicted -1 \n",
      " Profit = -223.0839386862599$.\n",
      "Balance: 13716.628647448437$\n",
      "On 2020-07-17 predicted -1 \n",
      " Profit = -240.86640460070248$.\n",
      "Balance: 13475.762242847733$\n",
      "On 2020-07-18 predicted -1 \n",
      " Profit = -206.0134949313042$.\n",
      "Balance: 13269.74874791643$\n",
      "On 2020-07-20 predicted -1 \n",
      " Profit = -297.0598524027155$.\n",
      "Balance: 12972.688895513715$\n",
      "On 2020-07-21 predicted -1 \n",
      " Profit = -293.51384556346693$.\n",
      "Balance: 12679.175049950249$\n",
      "On 2020-07-22 predicted -1 \n",
      " Profit = -780.2938034957506$.\n",
      "Balance: 11898.881246454497$\n",
      "On 2020-07-24 predicted 1 \n",
      " Profit = 780.3294590158248$.\n",
      "Balance: 12679.210705470323$\n",
      "On 2020-07-30 predicted 1 \n",
      " Profit = 43.21584807782892$.\n",
      "Balance: 12722.426553548152$\n",
      "On 2020-08-04 predicted 1 \n",
      " Profit = 213.37309227696642$.\n",
      "Balance: 12935.799645825118$\n",
      "On 2020-08-05 predicted 1 \n",
      " Profit = 57.74192821849374$.\n",
      "Balance: 12993.541574043611$\n",
      "On 2020-08-06 predicted 1 \n",
      " Profit = -162.9178990608334$.\n",
      "Balance: 12830.623674982777$\n",
      "On 2020-08-07 predicted 1 \n",
      " Profit = -7.31610422443282$.\n",
      "Balance: 12823.307570758345$\n",
      "On 2020-08-08 predicted 1 \n",
      " Profit = 13.131695133281028$.\n",
      "Balance: 12836.439265891626$\n",
      "On 2020-08-09 predicted 1 \n",
      " Profit = 40.956075846447675$.\n",
      "Balance: 12877.395341738073$\n",
      "On 2020-08-10 predicted 1 \n",
      " Profit = -5.382950585963954$.\n",
      "Balance: 12872.012391152108$\n",
      "On 2020-08-11 predicted 1 \n",
      " Profit = 217.6198658098774$.\n",
      "Balance: 13089.632256961984$\n",
      "On 2020-08-12 predicted 1 \n",
      " Profit = 302.56837158975577$.\n",
      "Balance: 13392.20062855174$\n",
      "On 2020-08-13 predicted 1 \n",
      " Profit = 94.14238956368536$.\n",
      "Balance: 13486.343018115425$\n",
      "On 2020-08-14 predicted 1 \n",
      " Profit = -4.853207371339522$.\n",
      "Balance: 13481.489810744086$\n",
      "On 2020-08-15 predicted 1 \n",
      " Profit = 5.759866113580756$.\n",
      "Balance: 13487.249676857668$\n",
      "On 2020-08-16 predicted 1 \n",
      " Profit = -136.2308201701353$.\n",
      "Balance: 13351.018856687533$\n",
      "On 2020-08-17 predicted 1 \n",
      " Profit = -249.52627141217454$.\n",
      "Balance: 13101.492585275359$\n",
      "On 2020-08-18 predicted 1 \n",
      " Profit = -142.64221992262355$.\n",
      "Balance: 12958.850365352735$\n",
      "On 2020-08-19 predicted 1 \n",
      " Profit = 7.191228274919922$.\n",
      "Balance: 12966.041593627655$\n",
      "On 2020-08-20 predicted 1 \n",
      " Profit = -223.65658022266962$.\n",
      "Balance: 12742.385013404986$\n",
      "On 2020-08-21 predicted 1 \n",
      " Profit = -45.781825086974095$.\n",
      "Balance: 12696.603188318011$\n",
      "On 2020-08-22 predicted 1 \n",
      " Profit = -155.82546851441657$.\n",
      "Balance: 12540.777719803595$\n",
      "On 2020-08-23 predicted 1 \n",
      " Profit = -52.61396646344565$.\n",
      "Balance: 12488.163753340148$\n",
      "On 2020-08-24 predicted 1 \n",
      " Profit = -113.58222474776449$.\n",
      "Balance: 12374.581528592384$\n",
      "On 2020-08-25 predicted 1 \n",
      " Profit = 150.40549266517883$.\n",
      "Balance: 12524.987021257562$\n",
      "On 2020-08-26 predicted 1 \n",
      " Profit = 83.92916445935953$.\n",
      "Balance: 12608.916185716922$\n",
      "On 2020-08-27 predicted 1 \n",
      " Profit = 288.21705909243065$.\n",
      "Balance: 12897.133244809353$\n",
      "On 2020-08-28 predicted 1 \n",
      " Profit = -57.41705169395391$.\n",
      "Balance: 12839.716193115399$\n",
      "On 2020-08-29 predicted 1 \n",
      " Profit = -563.0788006419889$.\n",
      "Balance: 12276.63739247341$\n",
      "On 2020-08-30 predicted 1 \n",
      " Profit = -503.03312088627445$.\n",
      "Balance: 11773.604271587137$\n",
      "On 2020-08-31 predicted 1 \n",
      " Profit = -609.3028905613501$.\n",
      "Balance: 11164.301381025787$\n",
      "On 2020-09-01 predicted 1 \n",
      " Profit = -630.5207147823194$.\n",
      "Balance: 10533.780666243467$\n",
      "On 2020-09-02 predicted 1 \n",
      " Profit = -385.5683319048603$.\n",
      "Balance: 10148.212334338607$\n",
      "On 2020-09-03 predicted -1 \n",
      " Profit = 45.08083597579662$.\n",
      "Balance: 10193.293170314402$\n",
      "On 2020-09-04 predicted -1 \n",
      " Profit = 104.52027592926333$.\n",
      "Balance: 10297.813446243665$\n",
      "On 2020-09-05 predicted 1 \n",
      " Profit = 78.4049487101338$.\n",
      "Balance: 10376.218394953798$\n",
      "On 2020-09-06 predicted 1 \n",
      " Profit = 48.67510414461685$.\n",
      "Balance: 10424.893499098414$\n",
      "On 2020-09-07 predicted 1 \n",
      " Profit = 29.19793616570496$.\n",
      "Balance: 10454.09143526412$\n",
      "On 2020-09-08 predicted 1 \n",
      " Profit = 277.2889632494298$.\n",
      "Balance: 10731.38039851355$\n",
      "On 2020-09-09 predicted 1 \n",
      " Profit = 284.33574983923245$.\n",
      "Balance: 11015.716148352782$\n",
      "On 2020-09-10 predicted 1 \n",
      " Profit = 313.64041046095736$.\n",
      "Balance: 11329.356558813739$\n",
      "On 2020-09-11 predicted -1 \n",
      " Profit = -293.5185731852753$.\n",
      "Balance: 11035.837985628463$\n",
      "On 2020-09-12 predicted -1 \n",
      " Profit = -265.4607591277354$.\n",
      "Balance: 10770.377226500728$\n",
      "On 2020-09-14 predicted -1 \n",
      " Profit = -166.79012225272254$.\n",
      "Balance: 10603.587104248007$\n",
      "On 2020-09-15 predicted -1 \n",
      " Profit = -55.515754920800646$.\n",
      "Balance: 10548.071349327205$\n",
      "On 2020-09-16 predicted 1 \n",
      " Profit = -197.08311826804174$.\n",
      "Balance: 10350.988231059164$\n",
      "On 2020-09-17 predicted 1 \n",
      " Profit = -155.2433213839513$.\n",
      "Balance: 10195.744909675213$\n",
      "On 2020-09-18 predicted 1 \n",
      " Profit = -267.8183698075036$.\n",
      "Balance: 9927.926539867709$\n",
      "On 2020-09-19 predicted 1 \n",
      " Profit = -124.85059469656426$.\n",
      "Balance: 9803.075945171146$\n",
      "On 2020-09-20 predicted 1 \n",
      " Profit = -84.59632878449156$.\n",
      "Balance: 9718.479616386654$\n",
      "On 2020-09-21 predicted -1 \n",
      " Profit = -108.56252533391898$.\n",
      "Balance: 9609.917091052735$\n",
      "On 2020-09-22 predicted -1 \n",
      " Profit = -86.07031250498221$.\n",
      "Balance: 9523.846778547753$\n",
      "On 2020-09-23 predicted -1 \n",
      " Profit = -184.57951444543687$.\n",
      "Balance: 9339.267264102316$\n",
      "On 2020-09-24 predicted 1 \n",
      " Profit = 35.90588857061175$.\n",
      "Balance: 9375.173152672927$\n",
      "On 2020-09-25 predicted -1 \n",
      " Profit = -29.898870008299582$.\n",
      "Balance: 9345.274282664628$\n",
      "On 2020-09-26 predicted -1 \n",
      " Profit = 45.571321385540614$.\n",
      "Balance: 9390.84560405017$\n",
      "On 2020-09-27 predicted -1 \n",
      " Profit = 65.98352886038265$.\n",
      "Balance: 9456.829132910552$\n",
      "On 2020-09-28 predicted -1 \n",
      " Profit = 54.98182601632925$.\n",
      "Balance: 9511.810958926882$\n",
      "On 2020-09-29 predicted -1 \n",
      " Profit = 57.656160638528036$.\n",
      "Balance: 9569.46711956541$\n",
      "On 2020-09-30 predicted -1 \n",
      " Profit = -5.813138283025182$.\n",
      "Balance: 9563.653981282385$\n",
      "On 2020-10-01 predicted 1 \n",
      " Profit = -0.5999320691571484$.\n",
      "Balance: 9563.054049213228$\n",
      "On 2020-10-02 predicted 1 \n",
      " Profit = 33.95943919725869$.\n",
      "Balance: 9597.013488410486$\n",
      "On 2020-10-03 predicted -1 \n",
      " Profit = -130.12262188316254$.\n",
      "Balance: 9466.890866527323$\n",
      "On 2020-10-04 predicted 1 \n",
      " Profit = -23.800867719392954$.\n",
      "Balance: 9443.089998807929$\n",
      "On 2020-10-05 predicted 1 \n",
      " Profit = -18.685431008687374$.\n",
      "Balance: 9424.404567799242$\n",
      "On 2020-10-06 predicted 1 \n",
      " Profit = 76.59184533425196$.\n",
      "Balance: 9500.996413133493$\n",
      "On 2020-10-07 predicted 1 \n",
      " Profit = 123.1011069103206$.\n",
      "Balance: 9624.097520043813$\n",
      "On 2020-10-08 predicted -1 \n",
      " Profit = -23.369992032604387$.\n",
      "Balance: 9600.727528011208$\n",
      "On 2020-10-28 predicted 1 \n",
      " Profit = 80.7928539397908$.\n",
      "Balance: 9681.520381950999$\n",
      "On 2020-10-29 predicted 1 \n",
      " Profit = 147.6716256662262$.\n",
      "Balance: 9829.192007617225$\n",
      "On 2020-10-30 predicted 1 \n",
      " Profit = 170.4215941487937$.\n",
      "Balance: 9999.613601766017$\n",
      "On 2020-10-31 predicted 1 \n",
      " Profit = 522.1056950811535$.\n",
      "Balance: 10521.719296847172$\n",
      "On 2020-11-01 predicted 1 \n",
      " Profit = 560.2873119069609$.\n",
      "Balance: 11082.006608754133$\n",
      "On 2020-11-02 predicted 1 \n",
      " Profit = 419.7973088394747$.\n",
      "Balance: 11501.803917593606$\n",
      "On 2020-11-03 predicted 1 \n",
      " Profit = 504.34251906266854$.\n",
      "Balance: 12006.146436656276$\n",
      "On 2020-11-04 predicted 1 \n",
      " Profit = 407.2722867974144$.\n",
      "Balance: 12413.418723453691$\n",
      "On 2020-11-06 predicted 1 \n",
      " Profit = 43.210123882885455$.\n",
      "Balance: 12456.628847336577$\n",
      "On 2020-11-07 predicted 1 \n",
      " Profit = 484.5653063821346$.\n",
      "Balance: 12941.194153718712$\n",
      "On 2020-11-08 predicted 1 \n",
      " Profit = 280.3138354140983$.\n",
      "Balance: 13221.50798913281$\n",
      "On 2020-11-09 predicted 1 \n",
      " Profit = 253.8088370829364$.\n",
      "Balance: 13475.316826215745$\n",
      "On 2020-11-10 predicted 1 \n",
      " Profit = 234.30529171213038$.\n",
      "Balance: 13709.622117927876$\n",
      "On 2020-11-11 predicted 1 \n",
      " Profit = 354.41901697338653$.\n",
      "Balance: 14064.041134901263$\n",
      "On 2020-11-12 predicted 1 \n",
      " Profit = 473.19107072190764$.\n",
      "Balance: 14537.232205623171$\n",
      "On 2020-11-13 predicted 1 \n",
      " Profit = 529.6102015220677$.\n",
      "Balance: 15066.84240714524$\n",
      "On 2020-11-14 predicted 1 \n",
      " Profit = 655.985667642638$.\n",
      "Balance: 15722.828074787878$\n",
      "On 2020-11-15 predicted 1 \n",
      " Profit = 1050.735597210126$.\n",
      "Balance: 16773.563671998003$\n",
      "On 2020-11-16 predicted 1 \n",
      " Profit = 773.0964259868451$.\n",
      "Balance: 17546.660097984848$\n",
      "On 2020-11-17 predicted 1 \n",
      " Profit = 288.2163057935031$.\n",
      "Balance: 17834.87640377835$\n",
      "On 2020-11-18 predicted 1 \n",
      " Profit = 224.43456977517144$.\n",
      "Balance: 18059.31097355352$\n",
      "On 2020-11-19 predicted 1 \n",
      " Profit = 523.1669953181881$.\n",
      "Balance: 18582.47796887171$\n",
      "On 2020-11-20 predicted 1 \n",
      " Profit = 44.23021737556246$.\n",
      "Balance: 18626.708186247273$\n",
      "On 2020-11-21 predicted 1 \n",
      " Profit = -596.146897583093$.\n",
      "Balance: 18030.56128866418$\n",
      "On 2020-11-22 predicted 1 \n",
      " Profit = -495.31511493637754$.\n",
      "Balance: 17535.246173727803$\n",
      "On 2020-11-23 predicted 1 \n",
      " Profit = -247.0070183662774$.\n",
      "Balance: 17288.239155361523$\n",
      "On 2020-11-24 predicted 1 \n",
      " Profit = -336.5747343072735$.\n",
      "Balance: 16951.66442105425$\n",
      "On 2020-11-25 predicted 1 \n",
      " Profit = 323.50749917916255$.\n",
      "Balance: 17275.171920233413$\n",
      "On 2020-11-26 predicted 1 \n",
      " Profit = 665.7498593134505$.\n",
      "Balance: 17940.921779546865$\n",
      "On 2020-11-27 predicted 1 \n",
      " Profit = 877.809091234587$.\n",
      "Balance: 18818.73087078145$\n",
      "On 2020-11-28 predicted 1 \n",
      " Profit = 734.1584451638491$.\n",
      "Balance: 19552.8893159453$\n",
      "On 2020-11-29 predicted 1 \n",
      " Profit = 224.7199285086699$.\n",
      "Balance: 19777.609244453968$\n",
      "On 2020-11-30 predicted 1 \n",
      " Profit = -190.1010222014511$.\n",
      "Balance: 19587.508222252516$\n",
      "On 2020-12-01 predicted 1 \n",
      " Profit = 225.89673442590902$.\n",
      "Balance: 19813.404956678423$\n",
      "On 2020-12-02 predicted 1 \n",
      " Profit = -3.9050570216677443$.\n",
      "Balance: 19809.499899656756$\n",
      "On 2020-12-03 predicted 1 \n",
      " Profit = -458.1219094875114$.\n",
      "Balance: 19351.377990169243$\n",
      "On 2020-12-04 predicted 1 \n",
      " Profit = -60.372754826489654$.\n",
      "Balance: 19291.005235342753$\n",
      "On 2020-12-05 predicted 1 \n",
      " Profit = -358.23522875536764$.\n",
      "Balance: 18932.770006587387$\n",
      "On 2020-12-06 predicted 1 \n",
      " Profit = -503.52017292387154$.\n",
      "Balance: 18429.249833663514$\n",
      "On 2020-12-07 predicted 1 \n",
      " Profit = -149.02497970933655$.\n",
      "Balance: 18280.224853954176$\n",
      "On 2020-12-08 predicted 1 \n",
      " Profit = 327.76162926357574$.\n",
      "Balance: 18607.98648321775$\n",
      "On 2020-12-09 predicted 1 \n",
      " Profit = 277.89891541049565$.\n",
      "Balance: 18885.88539862825$\n",
      "On 2020-12-10 predicted 1 \n",
      " Profit = 476.4989958378201$.\n",
      "Balance: 19362.38439446607$\n",
      "On 2020-12-11 predicted 1 \n",
      " Profit = 1394.5593977227$.\n",
      "Balance: 20756.94379218877$\n",
      "On 2020-12-12 predicted 1 \n",
      " Profit = 1766.8698277629264$.\n",
      "Balance: 22523.813619951696$\n",
      "On 2020-12-13 predicted 1 \n",
      " Profit = 1880.5528626318737$.\n",
      "Balance: 24404.36648258357$\n",
      "On 2020-12-14 predicted 1 \n",
      " Profit = 2344.844305426306$.\n",
      "Balance: 26749.210788009877$\n",
      "On 2020-12-15 predicted 1 \n",
      " Profit = 2237.363570645004$.\n",
      "Balance: 28986.57435865488$\n",
      "On 2020-12-16 predicted 1 \n",
      " Profit = 812.0280813032477$.\n",
      "Balance: 29798.60243995813$\n",
      "On 2020-12-17 predicted 1 \n",
      " Profit = 511.09613577870005$.\n",
      "Balance: 30309.69857573683$\n",
      "On 2020-12-18 predicted 1 \n",
      " Profit = 54.17177551419081$.\n",
      "Balance: 30363.870351251022$\n",
      "On 2020-12-19 predicted 1 \n",
      " Profit = -68.12281444711334$.\n",
      "Balance: 30295.74753680391$\n",
      "On 2020-12-20 predicted 1 \n",
      " Profit = 612.9510573392745$.\n",
      "Balance: 30908.698594143185$\n",
      "On 2020-12-21 predicted 1 \n",
      " Profit = 1970.2744051503487$.\n",
      "Balance: 32878.97299929353$\n",
      "On 2020-12-22 predicted 1 \n",
      " Profit = 1376.5193029092916$.\n",
      "Balance: 34255.49230220282$\n",
      "On 2020-12-23 predicted 1 \n",
      " Profit = 2265.9568023112843$.\n",
      "Balance: 36521.449104514104$\n",
      "On 2020-12-24 predicted 1 \n",
      " Profit = 2231.9664734813305$.\n",
      "Balance: 38753.41557799543$\n",
      "On 2020-12-25 predicted 1 \n",
      " Profit = 2624.640859534049$.\n",
      "Balance: 41378.05643752948$\n",
      "On 2020-12-26 predicted 1 \n",
      " Profit = 1605.6507703098214$.\n",
      "Balance: 42983.707207839296$\n",
      "On 2020-12-27 predicted 1 \n",
      " Profit = 2029.960939819739$.\n",
      "Balance: 45013.66814765903$\n",
      "On 2020-12-28 predicted 1 \n",
      " Profit = 3352.1311338229607$.\n",
      "Balance: 48365.79928148199$\n",
      "On 2020-12-29 predicted 1 \n",
      " Profit = 3831.860457110961$.\n",
      "Balance: 52197.65973859295$\n",
      "On 2020-12-30 predicted 1 \n",
      " Profit = 2266.6218136166353$.\n",
      "Balance: 54464.281552209584$\n",
      "On 2020-12-31 predicted 1 \n",
      " Profit = 3748.9552028692488$.\n",
      "Balance: 58213.23675507883$\n",
      "On 2021-01-01 predicted 1 \n",
      " Profit = 5905.884712134637$.\n",
      "Balance: 64119.12146721347$\n",
      "On 2021-01-02 predicted 1 \n",
      " Profit = 5782.807554972962$.\n",
      "Balance: 69901.92902218644$\n",
      "On 2021-01-03 predicted 1 \n",
      " Profit = 6836.7338007564285$.\n",
      "Balance: 76738.66282294286$\n",
      "On 2021-01-04 predicted 1 \n",
      " Profit = 7951.956400156436$.\n",
      "Balance: 84690.61922309929$\n",
      "On 2021-01-05 predicted 1 \n",
      " Profit = 4349.096055640352$.\n",
      "Balance: 89039.71527873963$\n",
      "On 2021-01-06 predicted 1 \n",
      " Profit = -1216.4324481568328$.\n",
      "Balance: 87823.2828305828$\n",
      "On 2021-01-07 predicted 1 \n",
      " Profit = -4861.120387077026$.\n",
      "Balance: 82962.16244350577$\n",
      "On 2021-01-08 predicted 1 \n",
      " Profit = -2831.656388017993$.\n",
      "Balance: 80130.50605548779$\n",
      "On 2021-01-09 predicted 1 \n",
      " Profit = -849.7601900719856$.\n",
      "Balance: 79280.7458654158$\n",
      "On 2021-01-10 predicted 1 \n",
      " Profit = -1265.859934121625$.\n",
      "Balance: 78014.88593129418$\n",
      "On 2021-01-11 predicted 1 \n",
      " Profit = 536.5124393935075$.\n",
      "Balance: 78551.39837068769$\n",
      "On 2021-01-12 predicted 1 \n",
      " Profit = 1730.495950025419$.\n",
      "Balance: 80281.89432071311$\n",
      "On 2021-01-13 predicted 1 \n",
      " Profit = -590.5857194073105$.\n",
      "Balance: 79691.30860130579$\n",
      "On 2021-01-14 predicted 1 \n",
      " Profit = -2535.9169320990295$.\n",
      "Balance: 77155.39166920676$\n",
      "On 2021-01-15 predicted 1 \n",
      " Profit = -1070.7299024632339$.\n",
      "Balance: 76084.66176674352$\n",
      "On 2021-01-16 predicted 1 \n",
      " Profit = -4502.593963830306$.\n",
      "Balance: 71582.06780291321$\n",
      "On 2021-01-17 predicted 1 \n",
      " Profit = -2228.39734294367$.\n",
      "Balance: 69353.67045996954$\n",
      "On 2021-01-18 predicted 1 \n",
      " Profit = -3455.317929570825$.\n",
      "Balance: 65898.35253039871$\n",
      "On 2021-01-19 predicted 1 \n",
      " Profit = -2762.6856652220777$.\n",
      "Balance: 63135.66686517664$\n",
      "On 2021-01-20 predicted 1 \n",
      " Profit = -2260.1387978080093$.\n",
      "Balance: 60875.52806736863$\n",
      "On 2021-01-21 predicted 1 \n",
      " Profit = 1377.7604882969063$.\n",
      "Balance: 62253.28855566554$\n",
      "On 2021-01-22 predicted 1 \n",
      " Profit = -1941.3711771061899$.\n",
      "Balance: 60311.917378559345$\n",
      "On 2021-01-23 predicted 1 \n",
      " Profit = -314.4929599093957$.\n",
      "Balance: 59997.42441864995$\n",
      "On 2021-01-24 predicted 1 \n",
      " Profit = 1506.5665822873088$.\n",
      "Balance: 61503.991000937254$\n",
      "On 2021-01-25 predicted 1 \n",
      " Profit = 1446.5639691537071$.\n",
      "Balance: 62950.55497009096$\n",
      "On 2021-01-26 predicted 1 \n",
      " Profit = 420.9683786425994$.\n",
      "Balance: 63371.523348733564$\n",
      "On 2021-01-27 predicted -1 \n",
      " Profit = -2585.9822250678117$.\n",
      "Balance: 60785.54112366575$\n",
      "On 2021-01-28 predicted -1 \n",
      " Profit = -2965.8978415817037$.\n",
      "Balance: 57819.64328208405$\n",
      "On 2021-01-29 predicted -1 \n",
      " Profit = -2126.8163281378947$.\n",
      "Balance: 55692.826953946154$\n",
      "On 2021-01-30 predicted -1 \n",
      " Profit = -1726.903358667565$.\n",
      "Balance: 53965.92359527859$\n",
      "On 2021-01-31 predicted -1 \n",
      " Profit = -3278.89000861199$.\n",
      "Balance: 50687.0335866666$\n",
      "On 2021-02-01 predicted -1 \n",
      " Profit = -3463.3530443719574$.\n",
      "Balance: 47223.68054229464$\n",
      "On 2021-02-02 predicted -1 \n",
      " Profit = -1804.9657888494148$.\n",
      "Balance: 45418.71475344522$\n",
      "On 2021-02-03 predicted -1 \n",
      " Profit = -4229.813721911072$.\n",
      "Balance: 41188.90103153415$\n",
      "On 2021-02-04 predicted -1 \n",
      " Profit = -4263.238374661014$.\n",
      "Balance: 36925.66265687314$\n",
      "On 2021-02-05 predicted 1 \n",
      " Profit = 2622.984475006804$.\n",
      "Balance: 39548.647131879945$\n",
      "On 2021-02-06 predicted -1 \n",
      " Profit = -3482.213854703192$.\n",
      "Balance: 36066.43327717675$\n",
      "On 2021-02-07 predicted -1 \n",
      " Profit = -3189.663169173782$.\n",
      "Balance: 32876.770108002966$\n",
      "On 2021-02-08 predicted 1 \n",
      " Profit = 258.7787065037246$.\n",
      "Balance: 33135.54881450669$\n",
      "On 2021-02-09 predicted -1 \n",
      " Profit = -637.654116781754$.\n",
      "Balance: 32497.894697724936$\n",
      "On 2021-02-10 predicted -1 \n",
      " Profit = -875.966543102295$.\n",
      "Balance: 31621.92815462264$\n",
      "On 2021-02-11 predicted -1 \n",
      " Profit = -340.721373485354$.\n",
      "Balance: 31281.206781137287$\n",
      "On 2021-02-12 predicted -1 \n",
      " Profit = -1223.241898040671$.\n",
      "Balance: 30057.964883096618$\n",
      "On 2021-02-13 predicted 1 \n",
      " Profit = 1167.53703555629$.\n",
      "Balance: 31225.50191865291$\n",
      "On 2021-02-14 predicted 1 \n",
      " Profit = 1838.4700756598013$.\n",
      "Balance: 33063.97199431271$\n",
      "On 2021-02-15 predicted 1 \n",
      " Profit = 2249.398590439321$.\n",
      "Balance: 35313.37058475203$\n",
      "On 2021-02-16 predicted 1 \n",
      " Profit = 2394.4463678548145$.\n",
      "Balance: 37707.816952606845$\n",
      "On 2021-02-17 predicted -1 \n",
      " Profit = -595.3284577116283$.\n",
      "Balance: 37112.48849489522$\n",
      "On 2021-02-18 predicted 1 \n",
      " Profit = -820.2038961650323$.\n",
      "Balance: 36292.284598730184$\n",
      "On 2021-02-19 predicted 1 \n",
      " Profit = -1605.9793326672097$.\n",
      "Balance: 34686.30526606298$\n",
      "On 2021-02-20 predicted 1 \n",
      " Profit = -2227.280025742388$.\n",
      "Balance: 32459.02524032059$\n",
      "On 2021-02-21 predicted 1 \n",
      " Profit = -2527.267205391203$.\n",
      "Balance: 29931.758034929386$\n",
      "On 2021-02-22 predicted 1 \n",
      " Profit = -1771.1171922873218$.\n",
      "Balance: 28160.640842642064$\n",
      "On 2021-02-23 predicted 1 \n",
      " Profit = -850.5464296268856$.\n",
      "Balance: 27310.094413015177$\n",
      "On 2021-02-26 predicted -1 \n",
      " Profit = -989.7409373391529$.\n",
      "Balance: 26320.353475676024$\n",
      "On 2021-03-02 predicted -1 \n",
      " Profit = -615.3592575519233$.\n",
      "Balance: 25704.9942181241$\n",
      "On 2021-03-03 predicted 1 \n",
      " Profit = 347.5495605156302$.\n",
      "Balance: 26052.54377863973$\n",
      "On 2021-03-04 predicted 1 \n",
      " Profit = 1344.0019302299752$.\n",
      "Balance: 27396.545708869708$\n",
      "On 2021-03-05 predicted 1 \n",
      " Profit = 1586.040216192092$.\n",
      "Balance: 28982.5859250618$\n",
      "On 2021-03-06 predicted 1 \n",
      " Profit = 2107.7243553930293$.\n",
      "Balance: 31090.310280454833$\n",
      "On 2021-03-07 predicted 1 \n",
      " Profit = 1487.6222837277019$.\n",
      "Balance: 32577.932564182534$\n",
      "On 2021-03-08 predicted 1 \n",
      " Profit = 2243.8959543959536$.\n",
      "Balance: 34821.82851857849$\n",
      "On 2021-03-09 predicted 1 \n",
      " Profit = 1137.7407844543395$.\n",
      "Balance: 35959.56930303283$\n",
      "On 2021-03-10 predicted 1 \n",
      " Profit = -26.02858647037283$.\n",
      "Balance: 35933.540716562464$\n",
      "On 2021-03-11 predicted 1 \n",
      " Profit = -248.70738438656736$.\n",
      "Balance: 35684.8333321759$\n",
      "On 2021-03-12 predicted 1 \n",
      " Profit = 383.11520780617866$.\n",
      "Balance: 36067.94853998208$\n",
      "On 2021-03-13 predicted 1 \n",
      " Profit = -797.2155772732222$.\n",
      "Balance: 35270.732962708855$\n",
      "On 2021-03-14 predicted 1 \n",
      " Profit = -227.35686546942088$.\n",
      "Balance: 35043.37609723944$\n",
      "On 2021-03-15 predicted 1 \n",
      " Profit = 603.3567719643179$.\n",
      "Balance: 35646.732869203755$\n",
      "On 2021-03-16 predicted 1 \n",
      " Profit = 180.35678419271244$.\n",
      "Balance: 35827.08965339647$\n",
      "On 2021-03-20 predicted 1 \n",
      " Profit = -1624.3099958532948$.\n",
      "Balance: 34202.77965754317$\n",
      "On 2021-03-21 predicted 1 \n",
      " Profit = -567.5015187327826$.\n",
      "Balance: 33635.27813881039$\n",
      "On 2021-03-22 predicted 1 \n",
      " Profit = 356.37230344101954$.\n",
      "Balance: 33991.65044225141$\n",
      "On 2021-03-23 predicted 1 \n",
      " Profit = 301.0003814860993$.\n",
      "Balance: 34292.65082373751$\n",
      "On 2021-03-27 predicted 1 \n",
      " Profit = 765.1607570377018$.\n",
      "Balance: 35057.81158077521$\n",
      "On 2021-03-28 predicted 1 \n",
      " Profit = 860.566355339708$.\n",
      "Balance: 35918.37793611492$\n",
      "On 2021-03-29 predicted 1 \n",
      " Profit = -36.39930213688058$.\n",
      "Balance: 35881.97863397804$\n",
      "On 2021-03-30 predicted 1 \n",
      " Profit = -38.766897880019314$.\n",
      "Balance: 35843.21173609802$\n",
      "On 2021-03-31 predicted 1 \n",
      " Profit = 33.835610178053685$.\n",
      "Balance: 35877.04734627607$\n",
      "On 2021-04-01 predicted 1 \n",
      " Profit = -219.39349795653106$.\n",
      "Balance: 35657.65384831954$\n",
      "On 2021-04-02 predicted 1 \n",
      " Profit = -801.0980826246869$.\n",
      "Balance: 34856.55576569485$\n",
      "On 2021-04-03 predicted 1 \n",
      " Profit = 174.28613528505957$.\n",
      "Balance: 35030.84190097991$\n",
      "On 2021-04-04 predicted 1 \n",
      " Profit = -122.46806510398892$.\n",
      "Balance: 34908.37383587592$\n",
      "On 2021-04-05 predicted 1 \n",
      " Profit = 173.86376950629528$.\n",
      "Balance: 35082.237605382215$\n",
      "On 2021-04-06 predicted 1 \n",
      " Profit = 485.33315388949995$.\n",
      "Balance: 35567.570759271715$\n",
      "On 2021-04-07 predicted -1 \n",
      " Profit = -975.862077865886$.\n",
      "Balance: 34591.70868140583$\n",
      "On 2021-04-08 predicted 1 \n",
      " Profit = 1228.7774105199132$.\n",
      "Balance: 35820.48609192574$\n",
      "On 2021-04-09 predicted 1 \n",
      " Profit = 1196.707694738454$.\n",
      "Balance: 37017.1937866642$\n",
      "On 2021-04-10 predicted -1 \n",
      " Profit = -871.8665152326121$.\n",
      "Balance: 36145.32727143158$\n",
      "On 2021-04-11 predicted 1 \n",
      " Profit = 328.480909663529$.\n",
      "Balance: 36473.80818109511$\n",
      "On 2021-04-12 predicted 1 \n",
      " Profit = 192.52655977326322$.\n",
      "Balance: 36666.33474086838$\n",
      "On 2021-04-13 predicted 1 \n",
      " Profit = -1683.0429062080457$.\n",
      "Balance: 34983.29183466033$\n",
      "On 2021-04-14 predicted -1 \n",
      " Profit = 1637.5717918983319$.\n",
      "Balance: 36620.86362655867$\n",
      "On 2021-04-15 predicted 1 \n",
      " Profit = -1582.730937594466$.\n",
      "Balance: 35038.1326889642$\n",
      "On 2021-04-16 predicted -1 \n",
      " Profit = 1745.1009032372804$.\n",
      "Balance: 36783.23359220148$\n",
      "On 2021-04-23 predicted -1 \n",
      " Profit = -1074.4200590546006$.\n",
      "Balance: 35708.81353314688$\n",
      "On 2021-04-24 predicted -1 \n",
      " Profit = -1000.0412609080395$.\n",
      "Balance: 34708.77227223884$\n",
      "On 2021-04-25 predicted -1 \n",
      " Profit = -2477.8274249615715$.\n",
      "Balance: 32230.94484727727$\n",
      "On 2021-04-26 predicted -1 \n",
      " Profit = -908.3788346743313$.\n",
      "Balance: 31322.56601260294$\n",
      "On 2021-04-27 predicted -1 \n",
      " Profit = -363.79721514780795$.\n",
      "Balance: 30958.76879745513$\n",
      "On 2021-04-28 predicted -1 \n",
      " Profit = -536.5853897670586$.\n",
      "Balance: 30422.18340768807$\n",
      "On 2021-04-29 predicted -1 \n",
      " Profit = 50.345543108980564$.\n",
      "Balance: 30472.528950797052$\n",
      "On 2021-04-30 predicted 1 \n",
      " Profit = -68.8424768464356$.\n",
      "Balance: 30403.686473950616$\n",
      "On 2021-05-01 predicted 1 \n",
      " Profit = -301.0576733723301$.\n",
      "Balance: 30102.628800578284$\n",
      "On 2021-05-02 predicted 1 \n",
      " Profit = 154.22037826249652$.\n",
      "Balance: 30256.84917884078$\n",
      "On 2021-05-03 predicted 1 \n",
      " Profit = 339.2736811421346$.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Balance: 30596.122859982916$\n",
      "On 2021-05-04 predicted -1 \n",
      " Profit = -1124.122614650265$.\n",
      "Balance: 29472.000245332652$\n",
      "On 2021-05-05 predicted 1 \n",
      " Profit = -321.12300693892576$.\n",
      "Balance: 29150.877238393725$\n",
      "On 2021-05-06 predicted 1 \n",
      " Profit = 63.69314243198278$.\n",
      "Balance: 29214.57038082571$\n",
      "On 2021-05-08 predicted -1 \n",
      " Profit = 1805.9378561645517$.\n",
      "Balance: 31020.50823699026$\n",
      "On 2021-05-09 predicted -1 \n",
      " Profit = 1779.6063426559613$.\n",
      "Balance: 32800.11457964622$\n",
      "On 2021-05-10 predicted -1 \n",
      " Profit = 2137.2668489856405$.\n",
      "Balance: 34937.38142863187$\n",
      "On 2021-05-11 predicted -1 \n",
      " Profit = 2525.7666027792475$.\n",
      "Balance: 37463.14803141111$\n",
      "On 2021-05-17 predicted -1 \n",
      " Profit = 2065.4539581869685$.\n",
      "Balance: 39528.60198959808$\n",
      "On 2021-05-18 predicted -1 \n",
      " Profit = 2999.027450797559$.\n",
      "Balance: 42527.62944039564$\n",
      "On 2021-05-20 predicted -1 \n",
      " Profit = 992.9464341460007$.\n",
      "Balance: 43520.57587454164$\n",
      "On 2021-05-21 predicted -1 \n",
      " Profit = -928.4036132220572$.\n",
      "Balance: 42592.17226131958$\n",
      "On 2021-05-22 predicted -1 \n",
      " Profit = -408.6382869001536$.\n",
      "Balance: 42183.53397441943$\n",
      "On 2021-05-23 predicted -1 \n",
      " Profit = -449.8644820738664$.\n",
      "Balance: 41733.669492345565$\n",
      "On 2021-05-24 predicted -1 \n",
      " Profit = 1763.9353886828212$.\n",
      "Balance: 43497.60488102838$\n"
     ]
    }
   ],
   "source": [
    "bc = Backtester(trading_data, investment_proportion = 0.4)\n",
    "bc.make_money()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "50fc94d8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚ïí‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï§‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï§‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï§‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïï\n",
      "‚îÇ Date       ‚îÇ   Prediction ‚îÇ   Next_5_day_return ‚îÇ      Loss ‚îÇ\n",
      "‚ïû‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï°\n",
      "‚îÇ 2020-01-02 ‚îÇ       -1.000 ‚îÇ               0.169 ‚îÇ  -674.670 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-03 ‚îÇ       -1.000 ‚îÇ               0.100 ‚îÇ  -373.262 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-04 ‚îÇ       -1.000 ‚îÇ               0.063 ‚îÇ  -226.338 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-05 ‚îÇ       -1.000 ‚îÇ               0.102 ‚îÇ  -355.672 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-06 ‚îÇ       -1.000 ‚îÇ               0.035 ‚îÇ  -115.628 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-11 ‚îÇ       -1.000 ‚îÇ               0.085 ‚îÇ  -281.907 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-12 ‚îÇ       -1.000 ‚îÇ               0.090 ‚îÇ  -286.707 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-18 ‚îÇ        1.000 ‚îÇ              -0.060 ‚îÇ  -195.238 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-21 ‚îÇ        1.000 ‚îÇ              -0.017 ‚îÇ   -55.541 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-22 ‚îÇ       -1.000 ‚îÇ               0.026 ‚îÇ   -85.356 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-28 ‚îÇ        1.000 ‚îÇ              -0.027 ‚îÇ   -93.434 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-29 ‚îÇ        1.000 ‚îÇ              -0.034 ‚îÇ  -117.904 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-06 ‚îÇ       -1.000 ‚îÇ               0.049 ‚îÇ  -186.669 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-09 ‚îÇ       -1.000 ‚îÇ               0.019 ‚îÇ   -74.493 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-10 ‚îÇ       -1.000 ‚îÇ               0.003 ‚îÇ   -12.738 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-16 ‚îÇ        1.000 ‚îÇ              -0.025 ‚îÇ  -101.735 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-18 ‚îÇ        1.000 ‚îÇ              -0.021 ‚îÇ   -86.616 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-19 ‚îÇ       -1.000 ‚îÇ               0.002 ‚îÇ    -6.979 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-24 ‚îÇ        1.000 ‚îÇ              -0.109 ‚îÇ  -496.751 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-27 ‚îÇ       -1.000 ‚îÇ               0.000 ‚îÇ    -1.690 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-28 ‚îÇ       -1.000 ‚îÇ               0.010 ‚îÇ   -43.043 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-29 ‚îÇ       -1.000 ‚îÇ               0.056 ‚îÇ  -250.318 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-03-01 ‚îÇ       -1.000 ‚îÇ               0.065 ‚îÇ  -287.256 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-03-03 ‚îÇ        1.000 ‚îÇ              -0.077 ‚îÇ  -331.361 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-03-04 ‚îÇ        1.000 ‚îÇ              -0.095 ‚îÇ  -394.349 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-03-05 ‚îÇ        1.000 ‚îÇ              -0.129 ‚îÇ  -514.295 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-03-06 ‚îÇ        1.000 ‚îÇ              -0.133 ‚îÇ  -502.940 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-03-07 ‚îÇ        1.000 ‚îÇ              -0.442 ‚îÇ -1585.907 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-03-23 ‚îÇ        1.000 ‚îÇ              -0.027 ‚îÇ  -147.616 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-04-06 ‚îÇ        1.000 ‚îÇ              -0.057 ‚îÇ  -381.152 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-04-07 ‚îÇ        1.000 ‚îÇ              -0.029 ‚îÇ  -187.786 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-04-08 ‚îÇ        1.000 ‚îÇ              -0.067 ‚îÇ  -432.665 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-04-09 ‚îÇ        1.000 ‚îÇ              -0.063 ‚îÇ  -397.544 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-04-10 ‚îÇ        1.000 ‚îÇ              -0.033 ‚îÇ  -200.308 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-04-12 ‚îÇ       -1.000 ‚îÇ               0.035 ‚îÇ  -213.657 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-04-13 ‚îÇ       -1.000 ‚îÇ               0.044 ‚îÇ  -260.824 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-04-14 ‚îÇ       -1.000 ‚îÇ               0.046 ‚îÇ  -269.112 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-04-15 ‚îÇ       -1.000 ‚îÇ               0.088 ‚îÇ  -509.590 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-05 ‚îÇ        1.000 ‚îÇ              -0.027 ‚îÇ  -174.232 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-06 ‚îÇ        1.000 ‚îÇ              -0.072 ‚îÇ  -452.640 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-09 ‚îÇ       -1.000 ‚îÇ               0.015 ‚îÇ   -91.111 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-14 ‚îÇ        1.000 ‚îÇ              -0.000 ‚îÇ    -2.990 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-15 ‚îÇ       -1.000 ‚îÇ               0.021 ‚îÇ  -129.751 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-16 ‚îÇ        1.000 ‚îÇ              -0.031 ‚îÇ  -194.018 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-17 ‚îÇ        1.000 ‚îÇ              -0.050 ‚îÇ  -307.123 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-18 ‚îÇ        1.000 ‚îÇ              -0.053 ‚îÇ  -317.046 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-20 ‚îÇ        1.000 ‚îÇ              -0.084 ‚îÇ  -492.327 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-01 ‚îÇ        1.000 ‚îÇ              -0.051 ‚îÇ  -312.406 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-04 ‚îÇ        1.000 ‚îÇ              -0.001 ‚îÇ    -3.096 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-06 ‚îÇ        1.000 ‚îÇ              -0.034 ‚îÇ  -213.080 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-07 ‚îÇ        1.000 ‚îÇ              -0.028 ‚îÇ  -174.131 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-08 ‚îÇ        1.000 ‚îÇ              -0.030 ‚îÇ  -183.182 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-09 ‚îÇ        1.000 ‚îÇ              -0.042 ‚îÇ  -249.193 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-10 ‚îÇ        1.000 ‚îÇ              -0.042 ‚îÇ  -249.418 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-12 ‚îÇ        1.000 ‚îÇ              -0.000 ‚îÇ    -0.358 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-13 ‚îÇ        1.000 ‚îÇ              -0.007 ‚îÇ   -38.630 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-14 ‚îÇ        1.000 ‚îÇ              -0.011 ‚îÇ   -60.550 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-15 ‚îÇ        1.000 ‚îÇ              -0.013 ‚îÇ   -71.767 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-16 ‚îÇ        1.000 ‚îÇ              -0.025 ‚îÇ  -140.115 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-20 ‚îÇ        1.000 ‚îÇ              -0.007 ‚îÇ   -41.567 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-21 ‚îÇ        1.000 ‚îÇ              -0.015 ‚îÇ   -86.633 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-22 ‚îÇ        1.000 ‚îÇ              -0.063 ‚îÇ  -356.001 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-23 ‚îÇ        1.000 ‚îÇ              -0.050 ‚îÇ  -280.195 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-24 ‚îÇ        1.000 ‚îÇ              -0.013 ‚îÇ   -71.686 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-25 ‚îÇ        1.000 ‚îÇ              -0.014 ‚îÇ   -74.057 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-26 ‚îÇ       -1.000 ‚îÇ               0.007 ‚îÇ   -38.408 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-27 ‚îÇ       -1.000 ‚îÇ               0.009 ‚îÇ   -46.277 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-28 ‚îÇ        1.000 ‚îÇ              -0.006 ‚îÇ   -32.909 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-29 ‚îÇ        1.000 ‚îÇ              -0.006 ‚îÇ   -33.870 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-02 ‚îÇ       -1.000 ‚îÇ               0.014 ‚îÇ   -75.836 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-05 ‚îÇ       -1.000 ‚îÇ               0.023 ‚îÇ  -123.120 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-15 ‚îÇ       -1.000 ‚îÇ               0.017 ‚îÇ   -94.482 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-16 ‚îÇ       -1.000 ‚îÇ               0.040 ‚îÇ  -223.084 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-17 ‚îÇ       -1.000 ‚îÇ               0.044 ‚îÇ  -240.866 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-18 ‚îÇ       -1.000 ‚îÇ               0.038 ‚îÇ  -206.013 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-20 ‚îÇ       -1.000 ‚îÇ               0.056 ‚îÇ  -297.060 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-21 ‚îÇ       -1.000 ‚îÇ               0.057 ‚îÇ  -293.514 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-22 ‚îÇ       -1.000 ‚îÇ               0.154 ‚îÇ  -780.294 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-06 ‚îÇ        1.000 ‚îÇ              -0.031 ‚îÇ  -162.918 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-07 ‚îÇ        1.000 ‚îÇ              -0.001 ‚îÇ    -7.316 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-10 ‚îÇ        1.000 ‚îÇ              -0.001 ‚îÇ    -5.383 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-14 ‚îÇ        1.000 ‚îÇ              -0.001 ‚îÇ    -4.853 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-16 ‚îÇ        1.000 ‚îÇ              -0.025 ‚îÇ  -136.231 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-17 ‚îÇ        1.000 ‚îÇ              -0.047 ‚îÇ  -249.526 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-18 ‚îÇ        1.000 ‚îÇ              -0.027 ‚îÇ  -142.642 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-20 ‚îÇ        1.000 ‚îÇ              -0.043 ‚îÇ  -223.657 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-21 ‚îÇ        1.000 ‚îÇ              -0.009 ‚îÇ   -45.782 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-22 ‚îÇ        1.000 ‚îÇ              -0.031 ‚îÇ  -155.825 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-23 ‚îÇ        1.000 ‚îÇ              -0.010 ‚îÇ   -52.614 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-24 ‚îÇ        1.000 ‚îÇ              -0.023 ‚îÇ  -113.582 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-28 ‚îÇ        1.000 ‚îÇ              -0.011 ‚îÇ   -57.417 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-29 ‚îÇ        1.000 ‚îÇ              -0.110 ‚îÇ  -563.079 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-30 ‚îÇ        1.000 ‚îÇ              -0.102 ‚îÇ  -503.033 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-31 ‚îÇ        1.000 ‚îÇ              -0.129 ‚îÇ  -609.303 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-01 ‚îÇ        1.000 ‚îÇ              -0.141 ‚îÇ  -630.521 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-02 ‚îÇ        1.000 ‚îÇ              -0.092 ‚îÇ  -385.568 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-11 ‚îÇ       -1.000 ‚îÇ               0.065 ‚îÇ  -293.519 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-12 ‚îÇ       -1.000 ‚îÇ               0.060 ‚îÇ  -265.461 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-14 ‚îÇ       -1.000 ‚îÇ               0.039 ‚îÇ  -166.790 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-15 ‚îÇ       -1.000 ‚îÇ               0.013 ‚îÇ   -55.516 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-16 ‚îÇ        1.000 ‚îÇ              -0.047 ‚îÇ  -197.083 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-17 ‚îÇ        1.000 ‚îÇ              -0.037 ‚îÇ  -155.243 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-18 ‚îÇ        1.000 ‚îÇ              -0.066 ‚îÇ  -267.818 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-19 ‚îÇ        1.000 ‚îÇ              -0.031 ‚îÇ  -124.851 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-20 ‚îÇ        1.000 ‚îÇ              -0.022 ‚îÇ   -84.596 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-21 ‚îÇ       -1.000 ‚îÇ               0.028 ‚îÇ  -108.563 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-22 ‚îÇ       -1.000 ‚îÇ               0.022 ‚îÇ   -86.070 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-23 ‚îÇ       -1.000 ‚îÇ               0.048 ‚îÇ  -184.580 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-25 ‚îÇ       -1.000 ‚îÇ               0.008 ‚îÇ   -29.899 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-30 ‚îÇ       -1.000 ‚îÇ               0.002 ‚îÇ    -5.813 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-10-01 ‚îÇ        1.000 ‚îÇ              -0.000 ‚îÇ    -0.600 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-10-03 ‚îÇ       -1.000 ‚îÇ               0.034 ‚îÇ  -130.123 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-10-04 ‚îÇ        1.000 ‚îÇ              -0.006 ‚îÇ   -23.801 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-10-05 ‚îÇ        1.000 ‚îÇ              -0.005 ‚îÇ   -18.685 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-10-08 ‚îÇ       -1.000 ‚îÇ               0.006 ‚îÇ   -23.370 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-11-21 ‚îÇ        1.000 ‚îÇ              -0.080 ‚îÇ  -596.147 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-11-22 ‚îÇ        1.000 ‚îÇ              -0.069 ‚îÇ  -495.315 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-11-23 ‚îÇ        1.000 ‚îÇ              -0.035 ‚îÇ  -247.007 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-11-24 ‚îÇ        1.000 ‚îÇ              -0.049 ‚îÇ  -336.575 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-11-30 ‚îÇ        1.000 ‚îÇ              -0.024 ‚îÇ  -190.101 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-12-02 ‚îÇ        1.000 ‚îÇ              -0.000 ‚îÇ    -3.905 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-12-03 ‚îÇ        1.000 ‚îÇ              -0.058 ‚îÇ  -458.122 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-12-04 ‚îÇ        1.000 ‚îÇ              -0.008 ‚îÇ   -60.373 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-12-05 ‚îÇ        1.000 ‚îÇ              -0.046 ‚îÇ  -358.235 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-12-06 ‚îÇ        1.000 ‚îÇ              -0.066 ‚îÇ  -503.520 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-12-07 ‚îÇ        1.000 ‚îÇ              -0.020 ‚îÇ  -149.025 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-12-19 ‚îÇ        1.000 ‚îÇ              -0.006 ‚îÇ   -68.123 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-06 ‚îÇ        1.000 ‚îÇ              -0.034 ‚îÇ -1216.432 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-07 ‚îÇ        1.000 ‚îÇ              -0.138 ‚îÇ -4861.120 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-08 ‚îÇ        1.000 ‚îÇ              -0.085 ‚îÇ -2831.656 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-09 ‚îÇ        1.000 ‚îÇ              -0.027 ‚îÇ  -849.760 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-10 ‚îÇ        1.000 ‚îÇ              -0.040 ‚îÇ -1265.860 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-13 ‚îÇ        1.000 ‚îÇ              -0.018 ‚îÇ  -590.586 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-14 ‚îÇ        1.000 ‚îÇ              -0.080 ‚îÇ -2535.917 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-15 ‚îÇ        1.000 ‚îÇ              -0.035 ‚îÇ -1070.730 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-16 ‚îÇ        1.000 ‚îÇ              -0.148 ‚îÇ -4502.594 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-17 ‚îÇ        1.000 ‚îÇ              -0.078 ‚îÇ -2228.397 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-18 ‚îÇ        1.000 ‚îÇ              -0.125 ‚îÇ -3455.318 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-19 ‚îÇ        1.000 ‚îÇ              -0.105 ‚îÇ -2762.686 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-20 ‚îÇ        1.000 ‚îÇ              -0.089 ‚îÇ -2260.139 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-22 ‚îÇ        1.000 ‚îÇ              -0.078 ‚îÇ -1941.371 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-23 ‚îÇ        1.000 ‚îÇ              -0.013 ‚îÇ  -314.493 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-27 ‚îÇ       -1.000 ‚îÇ               0.102 ‚îÇ -2585.982 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-28 ‚îÇ       -1.000 ‚îÇ               0.122 ‚îÇ -2965.898 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-29 ‚îÇ       -1.000 ‚îÇ               0.092 ‚îÇ -2126.816 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-30 ‚îÇ       -1.000 ‚îÇ               0.078 ‚îÇ -1726.903 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-31 ‚îÇ       -1.000 ‚îÇ               0.152 ‚îÇ -3278.890 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-01 ‚îÇ       -1.000 ‚îÇ               0.171 ‚îÇ -3463.353 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-02 ‚îÇ       -1.000 ‚îÇ               0.096 ‚îÇ -1804.966 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-03 ‚îÇ       -1.000 ‚îÇ               0.233 ‚îÇ -4229.814 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-04 ‚îÇ       -1.000 ‚îÇ               0.259 ‚îÇ -4263.238 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-06 ‚îÇ       -1.000 ‚îÇ               0.220 ‚îÇ -3482.214 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-07 ‚îÇ       -1.000 ‚îÇ               0.221 ‚îÇ -3189.663 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-09 ‚îÇ       -1.000 ‚îÇ               0.048 ‚îÇ  -637.654 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-10 ‚îÇ       -1.000 ‚îÇ               0.067 ‚îÇ  -875.967 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-11 ‚îÇ       -1.000 ‚îÇ               0.027 ‚îÇ  -340.721 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-12 ‚îÇ       -1.000 ‚îÇ               0.098 ‚îÇ -1223.242 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-17 ‚îÇ       -1.000 ‚îÇ               0.039 ‚îÇ  -595.328 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-18 ‚îÇ        1.000 ‚îÇ              -0.055 ‚îÇ  -820.204 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-19 ‚îÇ        1.000 ‚îÇ              -0.111 ‚îÇ -1605.979 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-20 ‚îÇ        1.000 ‚îÇ              -0.161 ‚îÇ -2227.280 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-21 ‚îÇ        1.000 ‚îÇ              -0.195 ‚îÇ -2527.267 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-22 ‚îÇ        1.000 ‚îÇ              -0.148 ‚îÇ -1771.117 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-23 ‚îÇ        1.000 ‚îÇ              -0.076 ‚îÇ  -850.546 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-26 ‚îÇ       -1.000 ‚îÇ               0.091 ‚îÇ  -989.741 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-02 ‚îÇ       -1.000 ‚îÇ               0.058 ‚îÇ  -615.359 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-10 ‚îÇ        1.000 ‚îÇ              -0.002 ‚îÇ   -26.029 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-11 ‚îÇ        1.000 ‚îÇ              -0.017 ‚îÇ  -248.707 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-13 ‚îÇ        1.000 ‚îÇ              -0.055 ‚îÇ  -797.216 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-14 ‚îÇ        1.000 ‚îÇ              -0.016 ‚îÇ  -227.357 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-20 ‚îÇ        1.000 ‚îÇ              -0.113 ‚îÇ -1624.310 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-21 ‚îÇ        1.000 ‚îÇ              -0.041 ‚îÇ  -567.502 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-29 ‚îÇ        1.000 ‚îÇ              -0.003 ‚îÇ   -36.399 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-30 ‚îÇ        1.000 ‚îÇ              -0.003 ‚îÇ   -38.767 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-01 ‚îÇ        1.000 ‚îÇ              -0.015 ‚îÇ  -219.393 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-02 ‚îÇ        1.000 ‚îÇ              -0.056 ‚îÇ  -801.098 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-04 ‚îÇ        1.000 ‚îÇ              -0.009 ‚îÇ  -122.468 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-07 ‚îÇ       -1.000 ‚îÇ               0.069 ‚îÇ  -975.862 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-10 ‚îÇ       -1.000 ‚îÇ               0.059 ‚îÇ  -871.867 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-13 ‚îÇ        1.000 ‚îÇ              -0.115 ‚îÇ -1683.043 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-15 ‚îÇ        1.000 ‚îÇ              -0.108 ‚îÇ -1582.731 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-23 ‚îÇ       -1.000 ‚îÇ               0.073 ‚îÇ -1074.420 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-24 ‚îÇ       -1.000 ‚îÇ               0.070 ‚îÇ -1000.041 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-25 ‚îÇ       -1.000 ‚îÇ               0.178 ‚îÇ -2477.827 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-26 ‚îÇ       -1.000 ‚îÇ               0.070 ‚îÇ  -908.379 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-27 ‚îÇ       -1.000 ‚îÇ               0.029 ‚îÇ  -363.797 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-28 ‚îÇ       -1.000 ‚îÇ               0.043 ‚îÇ  -536.585 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-30 ‚îÇ        1.000 ‚îÇ              -0.006 ‚îÇ   -68.842 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-05-01 ‚îÇ        1.000 ‚îÇ              -0.025 ‚îÇ  -301.058 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-05-04 ‚îÇ       -1.000 ‚îÇ               0.092 ‚îÇ -1124.123 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-05-05 ‚îÇ        1.000 ‚îÇ              -0.027 ‚îÇ  -321.123 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-05-21 ‚îÇ       -1.000 ‚îÇ               0.053 ‚îÇ  -928.404 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-05-22 ‚îÇ       -1.000 ‚îÇ               0.024 ‚îÇ  -408.638 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-05-23 ‚îÇ       -1.000 ‚îÇ               0.027 ‚îÇ  -449.864 ‚îÇ\n",
      "‚ïò‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïß‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïß‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïß‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïõ\n"
     ]
    }
   ],
   "source": [
    "from tabulate import tabulate\n",
    "bc.show_drawdowns()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "0e68d496",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "bc.show_balance_hist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "0f8d9895",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "bc.show_returns_hist()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "350dbbfe",
   "metadata": {},
   "source": [
    "# Backtester With Sentiment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "bc3bc6e4",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-127-c35a7a429394>:3: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  trading_data['5_day_return'] = ((trading_data.returns + 1).rolling(5, min_periods = 5).agg(lambda x : x.prod()) - 1).shift(-5)\n",
      "<ipython-input-127-c35a7a429394>:5: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  trading_data['predictions'] = labels_sentiment\n",
      "<ipython-input-127-c35a7a429394>:6: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  trading_data.dropna(inplace=True)\n"
     ]
    }
   ],
   "source": [
    "X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size = 0.33,shuffle = False)\n",
    "trading_data = data.iloc[len(X_train):,:]\n",
    "trading_data['5_day_return'] = ((trading_data.returns + 1).rolling(5, min_periods = 5).agg(lambda x : x.prod()) - 1).shift(-5)\n",
    "\n",
    "trading_data['predictions'] = labels_sentiment\n",
    "trading_data.dropna(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "923eae21",
   "metadata": {},
   "outputs": [],
   "source": [
    "class Backtester:\n",
    "    \n",
    "    def __init__(self,trading_data, budget = 10000, investment_proportion = 0.5):\n",
    "        self.trading_data = trading_data\n",
    "        self.predictions  = trading_data.predictions\n",
    "        self.balance      = budget\n",
    "        self.dates        = trading_data.Date\n",
    "        self.traded_days  = [0]\n",
    "        self.drawdowns    = {'Date':[], 'Prediction':[], 'Next_5_day_return':[], 'Loss':[]}\n",
    "        self.balance_hist = [self.balance]\n",
    "        self.returns      = [0]\n",
    "        self.investment_proportion = investment_proportion\n",
    "        \n",
    "    def make_money(self):\n",
    "        for trading_day in self.dates:\n",
    "            pred  = self.trading_data.loc[self.trading_data.Date == trading_day, 'predictions'].values[0]\n",
    "            \n",
    "            if pred != 0:\n",
    "                profit= self.invest(pred, trading_day)\n",
    "                self.traded_days.append(trading_day)\n",
    "                print('On '+trading_day+' predicted '+str(pred)+' \\n Profit = '+str(profit)+'$.')\n",
    "                \n",
    "                self.update_balance(profit)\n",
    "                print(\"Balance: \" +str(self.balance)+'$')\n",
    "\n",
    "        \n",
    "    def invest(self, pred, date):\n",
    "        \n",
    "        portfolio_profit = 0\n",
    "        money_to_invest  = self.balance*self.investment_proportion\n",
    "        investment_value = 0\n",
    "        returns = self.trading_data.loc[(self.trading_data.Date >= date),'5_day_return'].values[0]\n",
    "        if pred == 1:\n",
    "            investment_value = money_to_invest*(1+returns)\n",
    "        elif pred == -1:\n",
    "            investment_value = money_to_invest*(1-returns)\n",
    "            \n",
    "        profit = investment_value - money_to_invest\n",
    "        \n",
    "        if profit<0:\n",
    "            self.drawdowns['Date'].append(date)\n",
    "            self.drawdowns['Prediction'].append(pred)\n",
    "            self.drawdowns['Next_5_day_return'].append(returns)\n",
    "            self.drawdowns['Loss'].append(profit)\n",
    "\n",
    "        portfolio_profit = portfolio_profit+profit\n",
    "                \n",
    "        return portfolio_profit\n",
    "        \n",
    "    def update_balance(self,val1):\n",
    "        new_balance    = self.balance + val1\n",
    "        overall_return = (new_balance-self.balance)/self.balance\n",
    "        \n",
    "        self.returns.append(overall_return)\n",
    "        self.balance   = new_balance\n",
    "        self.balance_hist.append(self.balance)\n",
    "        \n",
    "    def show_drawdowns(self):\n",
    "        print(tabulate(self.drawdowns, headers='keys', floatfmt='.3f', tablefmt='fancy_grid'))\n",
    "    \n",
    "    def show_balance_hist(self):\n",
    "        hist = pd.DataFrame()\n",
    "        hist['Date'] = self.traded_days\n",
    "        hist['Balance'] = self.balance_hist\n",
    "        hist.plot(x = 'Date', y = 'Balance', kind = 'line', figsize=(10, 7))\n",
    "        plt.show()\n",
    "        \n",
    "    def show_returns_hist(self):\n",
    "        hist = pd.DataFrame()\n",
    "        hist['Date'] = self.traded_days\n",
    "        hist['Returns'] = self.returns\n",
    "        hist.plot(x = 'Date', y = 'Returns', kind = 'line', figsize=(10, 7))\n",
    "        plt.show()\n",
    "                    \n",
    "                    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "7bf8871b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "On 2020-01-02 predicted -1 \n",
      " Profit = -674.6702121612279$.\n",
      "Balance: 9325.329787838771$\n",
      "On 2020-01-03 predicted -1 \n",
      " Profit = -373.26208502093914$.\n",
      "Balance: 8952.067702817832$\n",
      "On 2020-01-04 predicted -1 \n",
      " Profit = -226.33776852920028$.\n",
      "Balance: 8725.729934288633$\n",
      "On 2020-01-05 predicted -1 \n",
      " Profit = -355.6718543973893$.\n",
      "Balance: 8370.058079891243$\n",
      "On 2020-01-07 predicted -1 \n",
      " Profit = -11.811929012170367$.\n",
      "Balance: 8358.246150879073$\n",
      "On 2020-01-08 predicted -1 \n",
      " Profit = -26.619208045250616$.\n",
      "Balance: 8331.626942833822$\n",
      "On 2020-01-09 predicted -1 \n",
      " Profit = -401.27364560678325$.\n",
      "Balance: 7930.353297227039$\n",
      "On 2020-01-10 predicted -1 \n",
      " Profit = -248.77305819546882$.\n",
      "Balance: 7681.580239031569$\n",
      "On 2020-01-11 predicted -1 \n",
      " Profit = -262.3426949483678$.\n",
      "Balance: 7419.237544083202$\n",
      "On 2020-01-12 predicted -1 \n",
      " Profit = -266.8098088597053$.\n",
      "Balance: 7152.427735223497$\n",
      "On 2020-01-13 predicted 1 \n",
      " Profit = 280.5449149667311$.\n",
      "Balance: 7432.972650190228$\n",
      "On 2020-01-16 predicted 1 \n",
      " Profit = 7.534853109335472$.\n",
      "Balance: 7440.507503299563$\n",
      "On 2020-01-17 predicted -1 \n",
      " Profit = 82.71672788334126$.\n",
      "Balance: 7523.224231182904$\n",
      "On 2020-01-18 predicted 1 \n",
      " Profit = -180.46465903791295$.\n",
      "Balance: 7342.759572144991$\n",
      "On 2020-01-19 predicted -1 \n",
      " Profit = 87.98599693735741$.\n",
      "Balance: 7430.745569082348$\n",
      "On 2020-01-20 predicted -1 \n",
      " Profit = 99.49093246542952$.\n",
      "Balance: 7530.236501547777$\n",
      "On 2020-01-21 predicted -1 \n",
      " Profit = 51.337942898128404$.\n",
      "Balance: 7581.574444445905$\n",
      "On 2020-01-22 predicted -1 \n",
      " Profit = -79.98045931857041$.\n",
      "Balance: 7501.593985127334$\n",
      "On 2020-01-23 predicted -1 \n",
      " Profit = -339.8351732508768$.\n",
      "Balance: 7161.758811876458$\n",
      "On 2020-01-24 predicted -1 \n",
      " Profit = -295.51070027380365$.\n",
      "Balance: 6866.248111602654$\n",
      "On 2020-01-25 predicted -1 \n",
      " Profit = -260.4508614276533$.\n",
      "Balance: 6605.797250175001$\n",
      "On 2020-01-26 predicted -1 \n",
      " Profit = -186.26938890071142$.\n",
      "Balance: 6419.5278612742895$\n",
      "On 2020-01-27 predicted -1 \n",
      " Profit = -70.75687331303061$.\n",
      "Balance: 6348.770987961259$\n",
      "On 2020-01-29 predicted 1 \n",
      " Profit = -87.60503007951911$.\n",
      "Balance: 6261.16595788174$\n",
      "On 2020-01-31 predicted 1 \n",
      " Profit = 70.41425081844773$.\n",
      "Balance: 6331.5802087001875$\n",
      "On 2020-02-01 predicted 1 \n",
      " Profit = 90.8466808185699$.\n",
      "Balance: 6422.426889518758$\n",
      "On 2020-02-02 predicted -1 \n",
      " Profit = -124.14872150612518$.\n",
      "Balance: 6298.278168012633$\n",
      "On 2020-02-03 predicted -1 \n",
      " Profit = -154.95013597023444$.\n",
      "Balance: 6143.328032042398$\n",
      "On 2020-02-04 predicted -1 \n",
      " Profit = -250.4477709977823$.\n",
      "Balance: 5892.880261044616$\n",
      "On 2020-02-05 predicted -1 \n",
      " Profit = -59.628071917887155$.\n",
      "Balance: 5833.25218912673$\n",
      "On 2020-02-06 predicted -1 \n",
      " Profit = -114.73325242260944$.\n",
      "Balance: 5718.51893670412$\n",
      "On 2020-02-07 predicted 1 \n",
      " Profit = 123.78396086427938$.\n",
      "Balance: 5842.302897568399$\n",
      "On 2020-02-08 predicted 1 \n",
      " Profit = 82.73542430980388$.\n",
      "Balance: 5925.038321878203$\n",
      "On 2020-02-09 predicted 1 \n",
      " Profit = 45.78594224474$.\n",
      "Balance: 5970.824264122943$\n",
      "On 2020-02-10 predicted -1 \n",
      " Profit = -7.950947770671974$.\n",
      "Balance: 5962.87331635227$\n",
      "On 2020-02-11 predicted -1 \n",
      " Profit = 63.97387223627311$.\n",
      "Balance: 6026.847188588543$\n",
      "On 2020-02-12 predicted 1 \n",
      " Profit = -148.46115881205742$.\n",
      "Balance: 5878.386029776486$\n",
      "On 2020-02-13 predicted -1 \n",
      " Profit = 16.662777727624416$.\n",
      "Balance: 5895.04880750411$\n",
      "On 2020-02-14 predicted 1 \n",
      " Profit = -155.20164437884887$.\n",
      "Balance: 5739.847163125261$\n",
      "On 2020-02-15 predicted -1 \n",
      " Profit = 65.22545484522334$.\n",
      "Balance: 5805.072617970485$\n",
      "On 2020-02-16 predicted -1 \n",
      " Profit = 57.96455918327729$.\n",
      "Balance: 5863.037177153763$\n",
      "On 2020-02-17 predicted -1 \n",
      " Profit = 6.525104236166044$.\n",
      "Balance: 5869.562281389929$\n",
      "On 2020-02-18 predicted -1 \n",
      " Profit = 50.345716797764$.\n",
      "Balance: 5919.907998187693$\n",
      "On 2020-02-19 predicted -1 \n",
      " Profit = -4.126645279989589$.\n",
      "Balance: 5915.781352907703$\n",
      "On 2020-02-20 predicted 1 \n",
      " Profit = -65.69849639963877$.\n",
      "Balance: 5850.082856508065$\n",
      "On 2020-02-21 predicted 1 \n",
      " Profit = -209.18714574094156$.\n",
      "Balance: 5640.895710767123$\n",
      "On 2020-02-22 predicted 1 \n",
      " Profit = -205.174019655155$.\n",
      "Balance: 5435.7216911119685$\n",
      "On 2020-02-23 predicted -1 \n",
      " Profit = 274.30467867950574$.\n",
      "Balance: 5710.026369791474$\n",
      "On 2020-02-24 predicted -1 \n",
      " Profit = 248.67241385494253$.\n",
      "Balance: 5958.698783646417$\n",
      "On 2020-02-25 predicted -1 \n",
      " Profit = 198.82117039989362$.\n",
      "Balance: 6157.519954046311$\n",
      "On 2020-02-26 predicted -1 \n",
      " Profit = -13.723743605269192$.\n",
      "Balance: 6143.796210441042$\n",
      "On 2020-02-27 predicted -1 \n",
      " Profit = -0.9209558410429963$.\n",
      "Balance: 6142.875254599999$\n",
      "On 2020-02-28 predicted -1 \n",
      " Profit = -23.45702013630398$.\n",
      "Balance: 6119.418234463695$\n",
      "On 2020-02-29 predicted -1 \n",
      " Profit = -136.4150052414975$.\n",
      "Balance: 5983.003229222197$\n",
      "On 2020-03-01 predicted -1 \n",
      " Profit = -156.54535413374697$.\n",
      "Balance: 5826.45787508845$\n",
      "On 2020-03-02 predicted -1 \n",
      " Profit = -10.58501972977865$.\n",
      "Balance: 5815.872855358672$\n",
      "On 2020-03-03 predicted -1 \n",
      " Profit = 179.925810216052$.\n",
      "Balance: 5995.798665574724$\n",
      "On 2020-03-04 predicted -1 \n",
      " Profit = 227.80013208959326$.\n",
      "Balance: 6223.598797664317$\n",
      "On 2020-03-05 predicted -1 \n",
      " Profit = 320.554413901682$.\n",
      "Balance: 6544.153211565999$\n",
      "On 2020-03-06 predicted -1 \n",
      " Profit = 347.5225854853511$.\n",
      "Balance: 6891.67579705135$\n",
      "On 2020-03-07 predicted -1 \n",
      " Profit = 1218.7472475056024$.\n",
      "Balance: 8110.423044556952$\n",
      "On 2020-03-08 predicted -1 \n",
      " Profit = 1018.0532351155894$.\n",
      "Balance: 9128.47627967254$\n",
      "On 2020-03-09 predicted -1 \n",
      " Profit = 1254.9468341144338$.\n",
      "Balance: 10383.423113786976$\n",
      "On 2020-03-10 predicted -1 \n",
      " Profit = 1321.884924751208$.\n",
      "Balance: 11705.308038538184$\n",
      "On 2020-03-11 predicted -1 \n",
      " Profit = 1714.4659644144504$.\n",
      "Balance: 13419.774002952634$\n",
      "On 2020-03-23 predicted 1 \n",
      " Profit = -145.67026330181397$.\n",
      "Balance: 13274.10373965082$\n",
      "On 2020-03-26 predicted 1 \n",
      " Profit = 195.6628813726402$.\n",
      "Balance: 13469.76662102346$\n",
      "On 2020-04-11 predicted 1 \n",
      " Profit = 202.44363813724794$.\n",
      "Balance: 13672.210259160707$\n",
      "On 2020-04-12 predicted -1 \n",
      " Profit = -192.30320054050026$.\n",
      "Balance: 13479.907058620207$\n",
      "On 2020-04-13 predicted -1 \n",
      " Profit = -234.7562730994241$.\n",
      "Balance: 13245.150785520782$\n",
      "On 2020-04-14 predicted -1 \n",
      " Profit = -242.21634314699986$.\n",
      "Balance: 13002.934442373782$\n",
      "On 2020-04-15 predicted -1 \n",
      " Profit = -458.6598264461436$.\n",
      "Balance: 12544.27461592764$\n",
      "On 2020-04-16 predicted -1 \n",
      " Profit = -228.6727183544117$.\n",
      "Balance: 12315.601897573228$\n",
      "On 2020-05-04 predicted 1 \n",
      " Profit = 376.5391225259664$.\n",
      "Balance: 12692.141020099194$\n",
      "On 2020-05-05 predicted 1 \n",
      " Profit = -139.08078455127452$.\n",
      "Balance: 12553.06023554792$\n",
      "On 2020-05-08 predicted 1 \n",
      " Profit = -292.15134773903264$.\n",
      "Balance: 12260.908887808888$\n",
      "On 2020-05-09 predicted 1 \n",
      " Profit = 71.47811074406036$.\n",
      "Balance: 12332.386998552949$\n",
      "On 2020-05-10 predicted -1 \n",
      " Profit = -322.1059940645064$.\n",
      "Balance: 12010.281004488443$\n",
      "On 2020-05-11 predicted -1 \n",
      " Profit = -432.9599732808738$.\n",
      "Balance: 11577.321031207568$\n",
      "On 2020-05-12 predicted -1 \n",
      " Profit = -455.6313522743267$.\n",
      "Balance: 11121.689678933242$\n",
      "On 2020-05-13 predicted -1 \n",
      " Profit = -219.116969922924$.\n",
      "Balance: 10902.572709010317$\n",
      "On 2020-05-14 predicted -1 \n",
      " Profit = 2.0984049391663575$.\n",
      "Balance: 10904.671113949484$\n",
      "On 2020-05-15 predicted -1 \n",
      " Profit = -91.08115318005002$.\n",
      "Balance: 10813.589960769434$\n",
      "On 2020-05-16 predicted 1 \n",
      " Profit = -136.1940449928925$.\n",
      "Balance: 10677.395915776542$\n",
      "On 2020-05-17 predicted 1 \n",
      " Profit = -215.590555406156$.\n",
      "Balance: 10461.805360370387$\n",
      "On 2020-05-18 predicted 1 \n",
      " Profit = -222.55592179053792$.\n",
      "Balance: 10239.249438579849$\n",
      "On 2020-05-19 predicted 1 \n",
      " Profit = -395.15830391005875$.\n",
      "Balance: 9844.09113466979$\n",
      "On 2020-05-20 predicted 1 \n",
      " Profit = -332.259919969536$.\n",
      "Balance: 9511.831214700254$\n",
      "On 2020-05-21 predicted -1 \n",
      " Profit = 8.754848335192492$.\n",
      "Balance: 9520.586063035447$\n",
      "On 2020-05-22 predicted 1 \n",
      " Profit = 90.62085953874248$.\n",
      "Balance: 9611.20692257419$\n",
      "On 2020-05-23 predicted 1 \n",
      " Profit = 44.37805964529298$.\n",
      "Balance: 9655.584982219483$\n",
      "On 2020-05-24 predicted 1 \n",
      " Profit = 344.0693817204028$.\n",
      "Balance: 9999.654363939886$\n",
      "On 2020-05-26 predicted 1 \n",
      " Profit = 283.40938841083107$.\n",
      "Balance: 10283.063752350718$\n",
      "On 2020-05-27 predicted 1 \n",
      " Profit = 441.85436248858423$.\n",
      "Balance: 10724.918114839302$\n",
      "On 2020-05-28 predicted 1 \n",
      " Profit = 1.825168027012296$.\n",
      "Balance: 10726.743282866315$\n",
      "On 2020-05-29 predicted 1 \n",
      " Profit = 98.91054680577963$.\n",
      "Balance: 10825.653829672094$\n",
      "On 2020-05-30 predicted 1 \n",
      " Profit = 44.73935948300277$.\n",
      "Balance: 10870.393189155096$\n",
      "On 2020-05-31 predicted 1 \n",
      " Profit = 93.97339102998103$.\n",
      "Balance: 10964.366580185077$\n",
      "On 2020-06-01 predicted 1 \n",
      " Profit = -221.5413738243642$.\n",
      "Balance: 10742.825206360712$\n",
      "On 2020-06-02 predicted -1 \n",
      " Profit = -103.28151964286644$.\n",
      "Balance: 10639.543686717847$\n",
      "On 2020-06-03 predicted 1 \n",
      " Profit = 50.58100515523802$.\n",
      "Balance: 10690.124691873085$\n",
      "On 2020-06-04 predicted 1 \n",
      " Profit = -2.1538215778209633$.\n",
      "Balance: 10687.970870295263$\n",
      "On 2020-06-05 predicted 1 \n",
      " Profit = 90.48016550257489$.\n",
      "Balance: 10778.451035797838$\n",
      "On 2020-06-06 predicted -1 \n",
      " Profit = 148.22746055217158$.\n",
      "Balance: 10926.67849635001$\n",
      "On 2020-06-07 predicted 1 \n",
      " Profit = -124.51105883290256$.\n",
      "Balance: 10802.167437517108$\n",
      "On 2020-06-08 predicted 1 \n",
      " Profit = -130.98231426272105$.\n",
      "Balance: 10671.185123254387$\n",
      "On 2020-06-09 predicted 1 \n",
      " Profit = -178.18335504006654$.\n",
      "Balance: 10493.00176821432$\n",
      "On 2020-06-10 predicted 1 \n",
      " Profit = -178.3442690163729$.\n",
      "Balance: 10314.657499197947$\n",
      "On 2020-06-11 predicted -1 \n",
      " Profit = -95.7102130326407$.\n",
      "Balance: 10218.947286165307$\n",
      "On 2020-06-12 predicted -1 \n",
      " Profit = 0.25388461154716424$.\n",
      "Balance: 10219.201170776854$\n",
      "On 2020-06-13 predicted -1 \n",
      " Profit = 27.366823230405316$.\n",
      "Balance: 10246.567994007259$\n",
      "On 2020-06-14 predicted 1 \n",
      " Profit = -43.126518074359865$.\n",
      "Balance: 10203.4414759329$\n",
      "On 2020-06-15 predicted -1 \n",
      " Profit = 51.11547753167633$.\n",
      "Balance: 10254.556953464577$\n",
      "On 2020-06-16 predicted 1 \n",
      " Profit = -100.8012545739366$.\n",
      "Balance: 10153.75569889064$\n",
      "On 2020-06-17 predicted 1 \n",
      " Profit = 72.17236458300067$.\n",
      "Balance: 10225.92806347364$\n",
      "On 2020-06-18 predicted 1 \n",
      " Profit = 94.66309225285477$.\n",
      "Balance: 10320.591155726495$\n",
      "On 2020-06-19 predicted 1 \n",
      " Profit = 11.374760815273476$.\n",
      "Balance: 10331.965916541769$\n",
      "On 2020-06-20 predicted 1 \n",
      " Profit = -29.90418887468786$.\n",
      "Balance: 10302.061727667082$\n",
      "On 2020-06-21 predicted 1 \n",
      " Profit = -62.325042680166916$.\n",
      "Balance: 10239.736684986914$\n",
      "On 2020-06-22 predicted 1 \n",
      " Profit = -256.1132484447503$.\n",
      "Balance: 9983.623436542164$\n",
      "On 2020-06-23 predicted 1 \n",
      " Profit = -201.57730878597704$.\n",
      "Balance: 9782.046127756188$\n",
      "On 2020-06-24 predicted -1 \n",
      " Profit = 51.57198721393797$.\n",
      "Balance: 9833.618114970126$\n",
      "On 2020-06-25 predicted -1 \n",
      " Profit = 53.842531438281185$.\n",
      "Balance: 9887.460646408406$\n",
      "On 2020-06-26 predicted 1 \n",
      " Profit = 28.23167795471727$.\n",
      "Balance: 9915.692324363124$\n",
      "On 2020-06-27 predicted 1 \n",
      " Profit = 34.210470139298195$.\n",
      "Balance: 9949.902794502423$\n",
      "On 2020-06-28 predicted -1 \n",
      " Profit = 24.49647464371901$.\n",
      "Balance: 9974.399269146143$\n",
      "On 2020-06-29 predicted -1 \n",
      " Profit = 25.33683425618301$.\n",
      "Balance: 9999.736103402325$\n",
      "On 2020-06-30 predicted -1 \n",
      " Profit = 28.0363924867047$.\n",
      "Balance: 10027.77249588903$\n",
      "On 2020-07-01 predicted -1 \n",
      " Profit = -63.9587710799301$.\n",
      "Balance: 9963.8137248091$\n",
      "On 2020-07-02 predicted -1 \n",
      " Profit = -56.29511923795417$.\n",
      "Balance: 9907.518605571146$\n",
      "On 2020-07-03 predicted -1 \n",
      " Profit = -148.72416340536302$.\n",
      "Balance: 9758.794442165783$\n",
      "On 2020-07-04 predicted -1 \n",
      " Profit = -62.1825909563936$.\n",
      "Balance: 9696.611851209389$\n",
      "On 2020-07-05 predicted -1 \n",
      " Profit = -87.56937490045902$.\n",
      "Balance: 9609.04247630893$\n",
      "On 2020-07-06 predicted -1 \n",
      " Profit = 55.39772923069768$.\n",
      "Balance: 9664.440205539628$\n",
      "On 2020-07-07 predicted -1 \n",
      " Profit = -10.120682803923955$.\n",
      "Balance: 9654.319522735703$\n",
      "On 2020-07-08 predicted 1 \n",
      " Profit = -75.65850009019141$.\n",
      "Balance: 9578.661022645512$\n",
      "On 2020-07-09 predicted -1 \n",
      " Profit = 14.35210351799833$.\n",
      "Balance: 9593.01312616351$\n",
      "On 2020-07-10 predicted -1 \n",
      " Profit = 35.55276136272096$.\n",
      "Balance: 9628.56588752623$\n",
      "On 2020-07-11 predicted -1 \n",
      " Profit = 45.064641354830655$.\n",
      "Balance: 9673.630528881062$\n",
      "On 2020-07-12 predicted -1 \n",
      " Profit = 52.18532752002511$.\n",
      "Balance: 9725.815856401086$\n",
      "On 2020-07-13 predicted 1 \n",
      " Profit = -35.59444421779199$.\n",
      "Balance: 9690.221412183295$\n",
      "On 2020-07-14 predicted -1 \n",
      " Profit = 44.323362426009226$.\n",
      "Balance: 9734.544774609305$\n",
      "On 2020-07-15 predicted -1 \n",
      " Profit = -65.53585165256618$.\n",
      "Balance: 9669.008922956738$\n",
      "On 2020-07-16 predicted -1 \n",
      " Profit = -154.73780972150507$.\n",
      "Balance: 9514.271113235234$\n",
      "On 2020-07-17 predicted -1 \n",
      " Profit = -167.0722693121529$.\n",
      "Balance: 9347.19884392308$\n",
      "On 2020-07-18 predicted -1 \n",
      " Profit = -142.89723037199474$.\n",
      "Balance: 9204.301613551086$\n",
      "On 2020-07-20 predicted -1 \n",
      " Profit = -206.04975502802063$.\n",
      "Balance: 8998.251858523065$\n",
      "On 2020-07-21 predicted -1 \n",
      " Profit = -203.59013675700544$.\n",
      "Balance: 8794.661721766059$\n",
      "On 2020-07-22 predicted 1 \n",
      " Profit = 541.2355313575586$.\n",
      "Balance: 9335.897253123618$\n",
      "On 2020-07-23 predicted -1 \n",
      " Profit = -519.068844634603$.\n",
      "Balance: 8816.828408489015$\n",
      "On 2020-07-24 predicted -1 \n",
      " Profit = -578.2082197249952$.\n",
      "Balance: 8238.62018876402$\n",
      "On 2020-07-25 predicted -1 \n",
      " Profit = -488.36919430241505$.\n",
      "Balance: 7750.250994461605$\n",
      "On 2020-07-26 predicted -1 \n",
      " Profit = -443.89678570886826$.\n",
      "Balance: 7306.354208752737$\n",
      "On 2020-07-29 predicted 1 \n",
      " Profit = 38.40765118133049$.\n",
      "Balance: 7344.761859934068$\n",
      "On 2020-07-30 predicted 1 \n",
      " Profit = 25.033901563745985$.\n",
      "Balance: 7369.795761497813$\n",
      "On 2020-07-31 predicted 1 \n",
      " Profit = 110.26724565069117$.\n",
      "Balance: 7480.063007148505$\n",
      "On 2020-08-01 predicted 1 \n",
      " Profit = 5.134621534607504$.\n",
      "Balance: 7485.197628683112$\n",
      "On 2020-08-02 predicted 1 \n",
      " Profit = 148.3977380012434$.\n",
      "Balance: 7633.595366684356$\n",
      "On 2020-08-03 predicted 1 \n",
      " Profit = 137.84226743283898$.\n",
      "Balance: 7771.437634117196$\n",
      "On 2020-08-04 predicted 1 \n",
      " Profit = 130.33800371728012$.\n",
      "Balance: 7901.775637834476$\n",
      "On 2020-08-05 predicted 1 \n",
      " Profit = 35.271399849311365$.\n",
      "Balance: 7937.0470376837875$\n",
      "On 2020-08-06 predicted 1 \n",
      " Profit = -99.5176735117061$.\n",
      "Balance: 7837.529364172082$\n",
      "On 2020-08-07 predicted 1 \n",
      " Profit = -4.469009702321728$.\n",
      "Balance: 7833.060354469761$\n",
      "On 2020-08-08 predicted 1 \n",
      " Profit = 8.021437524437715$.\n",
      "Balance: 7841.081791994198$\n",
      "On 2020-08-09 predicted 1 \n",
      " Profit = 25.017836639824964$.\n",
      "Balance: 7866.099628634023$\n",
      "On 2020-08-10 predicted 1 \n",
      " Profit = -3.28815140651659$.\n",
      "Balance: 7862.811477227507$\n",
      "On 2020-08-11 predicted 1 \n",
      " Profit = 132.93212642793742$.\n",
      "Balance: 7995.7436036554445$\n",
      "On 2020-08-12 predicted 1 \n",
      " Profit = 184.82254308714482$.\n",
      "Balance: 8180.566146742589$\n",
      "On 2020-08-13 predicted 1 \n",
      " Profit = 57.50645964758223$.\n",
      "Balance: 8238.072606390171$\n",
      "On 2020-08-14 predicted 1 \n",
      " Profit = -2.9645601216916475$.\n",
      "Balance: 8235.10804626848$\n",
      "On 2020-08-15 predicted 1 \n",
      " Profit = 3.5183885789515443$.\n",
      "Balance: 8238.626434847432$\n",
      "On 2020-08-16 predicted 1 \n",
      " Profit = -83.21599015256879$.\n",
      "Balance: 8155.410444694864$\n",
      "On 2020-08-17 predicted 1 \n",
      " Profit = -152.42201227820806$.\n",
      "Balance: 8002.988432416656$\n",
      "On 2020-08-18 predicted 1 \n",
      " Profit = -87.13236515494282$.\n",
      "Balance: 7915.856067261713$\n",
      "On 2020-08-19 predicted 1 \n",
      " Profit = 4.392729784371113$.\n",
      "Balance: 7920.248797046084$\n",
      "On 2020-08-20 predicted 1 \n",
      " Profit = -136.61962655824163$.\n",
      "Balance: 7783.629170487842$\n",
      "On 2020-08-21 predicted 1 \n",
      " Profit = -27.965624084522915$.\n",
      "Balance: 7755.663546403319$\n",
      "On 2020-08-22 predicted 1 \n",
      " Profit = -95.1852938800539$.\n",
      "Balance: 7660.478252523265$\n",
      "On 2020-08-23 predicted 1 \n",
      " Profit = -32.13900723523284$.\n",
      "Balance: 7628.3392452880325$\n",
      "On 2020-08-24 predicted 1 \n",
      " Profit = -69.3811964452143$.\n",
      "Balance: 7558.958048842818$\n",
      "On 2020-08-25 predicted 1 \n",
      " Profit = 91.87452575626185$.\n",
      "Balance: 7650.8325745990805$\n",
      "On 2020-08-26 predicted 1 \n",
      " Profit = 51.26775655054371$.\n",
      "Balance: 7702.100331149624$\n",
      "On 2020-08-27 predicted 1 \n",
      " Profit = 176.0561077242628$.\n",
      "Balance: 7878.156438873887$\n",
      "On 2020-08-28 predicted 1 \n",
      " Profit = -35.07295047028583$.\n",
      "Balance: 7843.083488403601$\n",
      "On 2020-08-29 predicted 1 \n",
      " Profit = -343.9541791705078$.\n",
      "Balance: 7499.129309233093$\n",
      "On 2020-08-30 predicted 1 \n",
      " Profit = -307.2755429484291$.\n",
      "Balance: 7191.853766284665$\n",
      "On 2020-08-31 predicted 1 \n",
      " Profit = -372.189958759423$.\n",
      "Balance: 6819.663807525241$\n",
      "On 2020-09-01 predicted 1 \n",
      " Profit = -385.1507722466058$.\n",
      "Balance: 6434.5130352786355$\n",
      "On 2020-09-02 predicted 1 \n",
      " Profit = -235.52269942195517$.\n",
      "Balance: 6198.990335856681$\n",
      "On 2020-09-03 predicted -1 \n",
      " Profit = 27.53742800598502$.\n",
      "Balance: 6226.527763862666$\n",
      "On 2020-09-04 predicted -1 \n",
      " Profit = 63.84574534316789$.\n",
      "Balance: 6290.373509205834$\n",
      "On 2020-09-05 predicted -1 \n",
      " Profit = -47.89331394780447$.\n",
      "Balance: 6242.480195258029$\n",
      "On 2020-09-06 predicted -1 \n",
      " Profit = -29.28363321387542$.\n",
      "Balance: 6213.196562044153$\n",
      "On 2020-09-07 predicted -1 \n",
      " Profit = -17.40185802562246$.\n",
      "Balance: 6195.794704018531$\n",
      "On 2020-09-08 predicted -1 \n",
      " Profit = -164.34000990160666$.\n",
      "Balance: 6031.454694116925$\n",
      "On 2020-09-09 predicted -1 \n",
      " Profit = -159.80779073963686$.\n",
      "Balance: 5871.646903377288$\n",
      "On 2020-09-10 predicted 1 \n",
      " Profit = 167.17803182795706$.\n",
      "Balance: 6038.824935205245$\n",
      "On 2020-09-11 predicted -1 \n",
      " Profit = -156.4525990064435$.\n",
      "Balance: 5882.372336198801$\n",
      "On 2020-09-12 predicted 1 \n",
      " Profit = 141.49709590452994$.\n",
      "Balance: 6023.869432103331$\n",
      "On 2020-09-14 predicted -1 \n",
      " Profit = -93.28567587612588$.\n",
      "Balance: 5930.5837562272045$\n",
      "On 2020-09-15 predicted -1 \n",
      " Profit = -31.04994857976817$.\n",
      "Balance: 5899.533807647436$\n",
      "On 2020-09-16 predicted 1 \n",
      " Profit = -110.22854137340028$.\n",
      "Balance: 5789.305266274036$\n",
      "On 2020-09-17 predicted 1 \n",
      " Profit = -86.82755288477574$.\n",
      "Balance: 5702.47771338926$\n",
      "On 2020-09-18 predicted 1 \n",
      " Profit = -149.7907508076505$.\n",
      "Balance: 5552.68696258161$\n",
      "On 2020-09-19 predicted 1 \n",
      " Profit = -69.8289080462323$.\n",
      "Balance: 5482.858054535378$\n",
      "On 2020-09-20 predicted -1 \n",
      " Profit = 47.314706654766724$.\n",
      "Balance: 5530.172761190144$\n",
      "On 2020-09-21 predicted -1 \n",
      " Profit = -61.776074466972204$.\n",
      "Balance: 5468.396686723172$\n",
      "On 2020-09-22 predicted -1 \n",
      " Profit = -48.977177146063696$.\n",
      "Balance: 5419.419509577108$\n",
      "On 2020-09-23 predicted -1 \n",
      " Profit = -105.03254041287755$.\n",
      "Balance: 5314.38696916423$\n",
      "On 2020-09-24 predicted -1 \n",
      " Profit = -20.431772744032514$.\n",
      "Balance: 5293.955196420198$\n",
      "On 2020-09-25 predicted -1 \n",
      " Profit = -16.883237852775437$.\n",
      "Balance: 5277.071958567423$\n",
      "On 2020-09-26 predicted 1 \n",
      " Profit = -25.733128308988853$.\n",
      "Balance: 5251.338830258434$\n",
      "On 2020-09-27 predicted 1 \n",
      " Profit = -36.897834537132894$.\n",
      "Balance: 5214.440995721301$\n",
      "On 2020-09-28 predicted 1 \n",
      " Profit = -30.31666149083958$.\n",
      "Balance: 5184.1243342304615$\n",
      "On 2020-09-29 predicted 1 \n",
      " Profit = -31.423743246702543$.\n",
      "Balance: 5152.700590983759$\n",
      "On 2020-09-30 predicted 1 \n",
      " Profit = 3.1300970777328985$.\n",
      "Balance: 5155.830688061492$\n",
      "On 2020-10-01 predicted -1 \n",
      " Profit = 0.32342744509196564$.\n",
      "Balance: 5156.154115506584$\n",
      "On 2020-10-02 predicted -1 \n",
      " Profit = -18.31006091528343$.\n",
      "Balance: 5137.844054591301$\n",
      "On 2020-10-03 predicted 1 \n",
      " Profit = 69.66226941512468$.\n",
      "Balance: 5207.5063240064255$\n",
      "On 2020-10-04 predicted 1 \n",
      " Profit = -13.092278226615235$.\n",
      "Balance: 5194.41404577981$\n",
      "On 2020-10-05 predicted 1 \n",
      " Profit = -10.278400957231952$.\n",
      "Balance: 5184.135644822578$\n",
      "On 2020-10-06 predicted 1 \n",
      " Profit = 42.131310539945844$.\n",
      "Balance: 5226.266955362524$\n",
      "On 2020-10-07 predicted 1 \n",
      " Profit = 67.7149237025942$.\n",
      "Balance: 5293.981879065118$\n",
      "On 2020-10-08 predicted 1 \n",
      " Profit = 12.855263995074438$.\n",
      "Balance: 5306.837143060193$\n",
      "On 2020-10-28 predicted 1 \n",
      " Profit = 44.65854456660463$.\n",
      "Balance: 5351.495687626797$\n",
      "On 2020-10-29 predicted 1 \n",
      " Profit = 81.62602946236802$.\n",
      "Balance: 5433.121717089165$\n",
      "On 2020-10-30 predicted 1 \n",
      " Profit = 94.2011574820408$.\n",
      "Balance: 5527.322874571206$\n",
      "On 2020-10-31 predicted 1 \n",
      " Profit = 288.59582642836267$.\n",
      "Balance: 5815.9187009995685$\n",
      "On 2020-11-01 predicted 1 \n",
      " Profit = 309.700854329853$.\n",
      "Balance: 6125.619555329422$\n",
      "On 2020-11-02 predicted 1 \n",
      " Profit = 232.04449294141386$.\n",
      "Balance: 6357.664048270835$\n",
      "On 2020-11-03 predicted 1 \n",
      " Profit = 278.77716612386166$.\n",
      "Balance: 6636.441214394697$\n",
      "On 2020-11-04 predicted 1 \n",
      " Profit = 225.12124134443638$.\n",
      "Balance: 6861.562455739134$\n",
      "On 2020-11-05 predicted 1 \n",
      " Profit = -50.9022405809028$.\n",
      "Balance: 6810.660215158231$\n",
      "On 2020-11-06 predicted 1 \n",
      " Profit = 23.707366856577664$.\n",
      "Balance: 6834.367582014809$\n",
      "On 2020-11-07 predicted 1 \n",
      " Profit = 265.8582399695747$.\n",
      "Balance: 7100.225821984384$\n",
      "On 2020-11-08 predicted 1 \n",
      " Profit = 153.79504463231797$.\n",
      "Balance: 7254.020866616702$\n",
      "On 2020-11-09 predicted 1 \n",
      " Profit = 139.25299609126478$.\n",
      "Balance: 7393.273862707967$\n",
      "On 2020-11-10 predicted 1 \n",
      " Profit = 128.55231616813353$.\n",
      "Balance: 7521.826178876101$\n",
      "On 2020-11-11 predicted 1 \n",
      " Profit = 194.45307954008604$.\n",
      "Balance: 7716.279258416187$\n",
      "On 2020-11-12 predicted 1 \n",
      " Profit = 259.6177307259304$.\n",
      "Balance: 7975.8969891421175$\n",
      "On 2020-11-13 predicted 1 \n",
      " Profit = 290.57225969774845$.\n",
      "Balance: 8266.469248839865$\n",
      "On 2020-11-14 predicted 1 \n",
      " Profit = 359.90854637703796$.\n",
      "Balance: 8626.377795216904$\n",
      "On 2020-11-15 predicted 1 \n",
      " Profit = 576.4893046787124$.\n",
      "Balance: 9202.867099895617$\n",
      "On 2020-11-16 predicted 1 \n",
      " Profit = 424.16172274938845$.\n",
      "Balance: 9627.028822645005$\n",
      "On 2020-11-17 predicted 1 \n",
      " Profit = 158.13075921776$.\n",
      "Balance: 9785.159581862765$\n",
      "On 2020-11-18 predicted 1 \n",
      " Profit = 123.1367143352627$.\n",
      "Balance: 9908.296296198027$\n",
      "On 2020-11-19 predicted 1 \n",
      " Profit = 287.0371748731377$.\n",
      "Balance: 10195.333471071164$\n",
      "On 2020-11-20 predicted 1 \n",
      " Profit = 24.267044276722118$.\n",
      "Balance: 10219.600515347887$\n",
      "On 2020-11-21 predicted 1 \n",
      " Profit = -327.0778218483838$.\n",
      "Balance: 9892.522693499504$\n",
      "On 2020-11-22 predicted 1 \n",
      " Profit = -271.7561553683863$.\n",
      "Balance: 9620.766538131118$\n",
      "On 2020-11-23 predicted 1 \n",
      " Profit = -135.52115741279204$.\n",
      "Balance: 9485.245380718326$\n",
      "On 2020-11-24 predicted 1 \n",
      " Profit = -184.66275918357405$.\n",
      "Balance: 9300.582621534752$\n",
      "On 2020-11-25 predicted 1 \n",
      " Profit = 177.49338059482216$.\n",
      "Balance: 9478.076002129574$\n",
      "On 2020-11-26 predicted -1 \n",
      " Profit = -365.26570005299845$.\n",
      "Balance: 9112.810302076576$\n",
      "On 2020-11-27 predicted 1 \n",
      " Profit = 445.8693833099728$.\n",
      "Balance: 9558.679685386549$\n",
      "On 2020-11-28 predicted 1 \n",
      " Profit = 372.90428689526425$.\n",
      "Balance: 9931.583972281813$\n",
      "On 2020-11-29 predicted 1 \n",
      " Profit = 114.14296906027994$.\n",
      "Balance: 10045.726941342093$\n",
      "On 2020-11-30 predicted 1 \n",
      " Profit = -96.5588376583637$.\n",
      "Balance: 9949.168103683729$\n",
      "On 2020-12-01 predicted 1 \n",
      " Profit = 114.74070919971837$.\n",
      "Balance: 10063.908812883448$\n",
      "On 2020-12-02 predicted 1 \n",
      " Profit = -1.9835125694498856$.\n",
      "Balance: 10061.925300313998$\n",
      "On 2020-12-03 predicted 1 \n",
      " Profit = -232.6958507307104$.\n",
      "Balance: 9829.229449583288$\n",
      "On 2020-12-04 predicted 1 \n",
      " Profit = -30.66539550798234$.\n",
      "Balance: 9798.564054075307$\n",
      "On 2020-12-05 predicted 1 \n",
      " Profit = -181.9599752611557$.\n",
      "Balance: 9616.60407881415$\n",
      "On 2020-12-06 predicted 1 \n",
      " Profit = -255.75518780506764$.\n",
      "Balance: 9360.848891009084$\n",
      "On 2020-12-07 predicted 1 \n",
      " Profit = -75.69490503604948$.\n",
      "Balance: 9285.153985973035$\n",
      "On 2020-12-08 predicted 1 \n",
      " Profit = 166.4813875496402$.\n",
      "Balance: 9451.635373522675$\n",
      "On 2020-12-09 predicted 1 \n",
      " Profit = 141.15440278970073$.\n",
      "Balance: 9592.789776312376$\n",
      "On 2020-12-10 predicted 1 \n",
      " Profit = 242.0302039971166$.\n",
      "Balance: 9834.819980309494$\n",
      "On 2020-12-11 predicted 1 \n",
      " Profit = 708.3446103038586$.\n",
      "Balance: 10543.164590613353$\n",
      "On 2020-12-12 predicted 1 \n",
      " Profit = 897.4538636705965$.\n",
      "Balance: 11440.61845428395$\n",
      "On 2020-12-13 predicted 1 \n",
      " Profit = 955.1973812030183$.\n",
      "Balance: 12395.815835486967$\n",
      "On 2020-12-14 predicted 1 \n",
      " Profit = 1191.0269497754953$.\n",
      "Balance: 13586.842785262463$\n",
      "On 2020-12-15 predicted 1 \n",
      " Profit = 1136.4337934580526$.\n",
      "Balance: 14723.276578720515$\n",
      "On 2020-12-16 predicted 1 \n",
      " Profit = 412.45694930300397$.\n",
      "Balance: 15135.73352802352$\n",
      "On 2020-12-17 predicted 1 \n",
      " Profit = 259.6032795140645$.\n",
      "Balance: 15395.336807537584$\n",
      "On 2020-12-18 predicted 1 \n",
      " Profit = 27.515705160159087$.\n",
      "Balance: 15422.852512697744$\n",
      "On 2020-12-19 predicted 1 \n",
      " Profit = -34.60191694318746$.\n",
      "Balance: 15388.250595754556$\n",
      "On 2020-12-20 predicted 1 \n",
      " Profit = 311.33889209404697$.\n",
      "Balance: 15699.589487848603$\n",
      "On 2020-12-21 predicted 1 \n",
      " Profit = 1000.7700338809118$.\n",
      "Balance: 16700.359521729515$\n",
      "On 2020-12-22 predicted 1 \n",
      " Profit = 699.1814266120664$.\n",
      "Balance: 17399.540948341582$\n",
      "On 2020-12-23 predicted 1 \n",
      " Profit = 1150.9572777750727$.\n",
      "Balance: 18550.498226116655$\n",
      "On 2020-12-24 predicted 1 \n",
      " Profit = 1133.6924224605773$.\n",
      "Balance: 19684.190648577234$\n",
      "On 2020-12-25 predicted 1 \n",
      " Profit = 1333.145228428567$.\n",
      "Balance: 21017.3358770058$\n",
      "On 2020-12-26 predicted 1 \n",
      " Profit = 815.5651677773549$.\n",
      "Balance: 21832.901044783153$\n",
      "On 2020-12-27 predicted 1 \n",
      " Profit = 1031.0868746048109$.\n",
      "Balance: 22863.987919387964$\n",
      "On 2020-12-28 predicted 1 \n",
      " Profit = 1702.6625223369701$.\n",
      "Balance: 24566.650441724934$\n",
      "On 2020-12-29 predicted 1 \n",
      " Profit = 1946.3335205824987$.\n",
      "Balance: 26512.983962307433$\n",
      "On 2020-12-30 predicted 1 \n",
      " Profit = 1151.2950598549942$.\n",
      "Balance: 27664.279022162427$\n",
      "On 2020-12-31 predicted 1 \n",
      " Profit = 1904.2230948065244$.\n",
      "Balance: 29568.50211696895$\n",
      "On 2021-01-01 predicted 1 \n",
      " Profit = 2999.801666209396$.\n",
      "Balance: 32568.303783178344$\n",
      "On 2021-01-02 predicted 1 \n",
      " Profit = 2937.286551349922$.\n",
      "Balance: 35505.590334528264$\n",
      "On 2021-01-03 predicted 1 \n",
      " Profit = 3472.6118857011115$.\n",
      "Balance: 38978.202220229374$\n",
      "On 2021-01-04 predicted 1 \n",
      " Profit = 4039.071743104141$.\n",
      "Balance: 43017.273963333515$\n",
      "On 2021-01-05 predicted 1 \n",
      " Profit = 2209.055244070132$.\n",
      "Balance: 45226.32920740364$\n",
      "On 2021-01-06 predicted 1 \n",
      " Profit = -617.8678153527835$.\n",
      "Balance: 44608.46139205086$\n",
      "On 2021-01-07 predicted 1 \n",
      " Profit = -2469.1299860351373$.\n",
      "Balance: 42139.33140601572$\n",
      "On 2021-01-08 predicted 1 \n",
      " Profit = -1438.2955247087139$.\n",
      "Balance: 40701.035881307005$\n",
      "On 2021-01-09 predicted 1 \n",
      " Profit = -431.62238314926253$.\n",
      "Balance: 40269.413498157744$\n",
      "On 2021-01-10 predicted 1 \n",
      " Profit = -642.9737329215914$.\n",
      "Balance: 39626.43976523615$\n",
      "On 2021-01-11 predicted 1 \n",
      " Profit = 272.5130929711286$.\n",
      "Balance: 39898.95285820728$\n",
      "On 2021-01-12 predicted 1 \n",
      " Profit = 878.9783220097015$.\n",
      "Balance: 40777.93118021698$\n",
      "On 2021-01-13 predicted 1 \n",
      " Profit = -299.97876888409155$.\n",
      "Balance: 40477.952411332895$\n",
      "On 2021-01-14 predicted 1 \n",
      " Profit = -1288.0792987118275$.\n",
      "Balance: 39189.87311262107$\n",
      "On 2021-01-15 predicted 1 \n",
      " Profit = -543.8604886529338$.\n",
      "Balance: 38646.012623968134$\n",
      "On 2021-01-16 predicted 1 \n",
      " Profit = -2287.0221030915727$.\n",
      "Balance: 36358.99052087656$\n",
      "On 2021-01-17 predicted 1 \n",
      " Profit = -1131.8795384887999$.\n",
      "Balance: 35227.11098238776$\n",
      "On 2021-01-18 predicted 1 \n",
      " Profit = -1755.074639556131$.\n",
      "Balance: 33472.036342831634$\n",
      "On 2021-01-19 predicted 1 \n",
      " Profit = -1403.262925996154$.\n",
      "Balance: 32068.77341683548$\n",
      "On 2021-01-20 predicted 1 \n",
      " Profit = -1148.0021134849412$.\n",
      "Balance: 30920.77130335054$\n",
      "On 2021-01-21 predicted 1 \n",
      " Profit = 699.8118672954388$.\n",
      "Balance: 31620.58317064598$\n",
      "On 2021-01-22 predicted 1 \n",
      " Profit = -986.089091757618$.\n",
      "Balance: 30634.49407888836$\n",
      "On 2021-01-23 predicted 1 \n",
      " Profit = -159.74177470970972$.\n",
      "Balance: 30474.75230417865$\n",
      "On 2021-01-24 predicted 1 \n",
      " Profit = 765.2369059143657$.\n",
      "Balance: 31239.989210093016$\n",
      "On 2021-01-25 predicted 1 \n",
      " Profit = 734.7595180836706$.\n",
      "Balance: 31974.748728176688$\n",
      "On 2021-01-26 predicted 1 \n",
      " Profit = 213.8242964815854$.\n",
      "Balance: 32188.573024658275$\n",
      "On 2021-01-27 predicted 1 \n",
      " Profit = 1313.5091803616397$.\n",
      "Balance: 33502.08220501991$\n",
      "On 2021-01-28 predicted 1 \n",
      " Profit = 1634.6609977232874$.\n",
      "Balance: 35136.7432027432$\n",
      "On 2021-01-29 predicted 1 \n",
      " Profit = 1292.4569388399868$.\n",
      "Balance: 36429.20014158319$\n",
      "On 2021-01-30 predicted 1 \n",
      " Profit = 1129.5836738561447$.\n",
      "Balance: 37558.78381543934$\n",
      "On 2021-01-31 predicted 1 \n",
      " Profit = 2282.016368544764$.\n",
      "Balance: 39840.8001839841$\n",
      "On 2021-02-01 predicted 1 \n",
      " Profit = 2722.249594099605$.\n",
      "Balance: 42563.0497780837$\n",
      "On 2021-02-02 predicted 1 \n",
      " Profit = 1626.8289094859829$.\n",
      "Balance: 44189.87868756968$\n",
      "On 2021-02-03 predicted 1 \n",
      " Profit = 4115.3730627767145$.\n",
      "Balance: 48305.2517503464$\n",
      "On 2021-02-04 predicted 1 \n",
      " Profit = 4999.813003072675$.\n",
      "Balance: 53305.06475341907$\n",
      "On 2021-02-05 predicted 1 \n",
      " Profit = 3786.4820081008256$.\n",
      "Balance: 57091.5467615199$\n",
      "On 2021-02-06 predicted 1 \n",
      " Profit = 5026.846416679175$.\n",
      "Balance: 62118.393178199076$\n",
      "On 2021-02-07 predicted 1 \n",
      " Profit = 5493.660804384024$.\n",
      "Balance: 67612.05398258311$\n",
      "On 2021-02-08 predicted 1 \n",
      " Profit = 532.1860941994964$.\n",
      "Balance: 68144.2400767826$\n",
      "On 2021-02-09 predicted 1 \n",
      " Profit = 1311.3546259086288$.\n",
      "Balance: 69455.59470269123$\n",
      "On 2021-02-10 predicted 1 \n",
      " Profit = 1872.1451883801492$.\n",
      "Balance: 71327.73989107138$\n",
      "On 2021-02-11 predicted 1 \n",
      " Profit = 768.5453393119278$.\n",
      "Balance: 72096.2852303833$\n",
      "On 2021-02-12 predicted 1 \n",
      " Profit = 2819.3028933933383$.\n",
      "Balance: 74915.58812377664$\n",
      "On 2021-02-13 predicted 1 \n",
      " Profit = 2909.934987786808$.\n",
      "Balance: 77825.52311156345$\n",
      "On 2021-02-14 predicted 1 \n",
      " Profit = 4582.1487749316$.\n",
      "Balance: 82407.67188649505$\n",
      "On 2021-02-15 predicted 1 \n",
      " Profit = 5606.334925965726$.\n",
      "Balance: 88014.00681246078$\n",
      "On 2021-02-16 predicted 1 \n",
      " Profit = 5967.8477427312755$.\n",
      "Balance: 93981.85455519205$\n",
      "On 2021-02-17 predicted 1 \n",
      " Profit = 1483.7791483803521$.\n",
      "Balance: 95465.63370357241$\n",
      "On 2021-02-18 predicted 1 \n",
      " Profit = -2109.8365506884365$.\n",
      "Balance: 93355.79715288398$\n",
      "On 2021-02-19 predicted 1 \n",
      " Profit = -4131.111680344577$.\n",
      "Balance: 89224.68547253941$\n",
      "On 2021-02-20 predicted 1 \n",
      " Profit = -5729.303199974125$.\n",
      "Balance: 83495.38227256529$\n",
      "On 2021-02-21 predicted 1 \n",
      " Profit = -6500.969756692917$.\n",
      "Balance: 76994.41251587236$\n",
      "On 2021-02-22 predicted 1 \n",
      " Profit = -4555.901045230581$.\n",
      "Balance: 72438.51147064178$\n",
      "On 2021-02-23 predicted 1 \n",
      " Profit = -2187.8876138906817$.\n",
      "Balance: 70250.6238567511$\n",
      "On 2021-02-24 predicted 1 \n",
      " Profit = -41.88570907403846$.\n",
      "Balance: 70208.73814767707$\n",
      "On 2021-02-25 predicted 1 \n",
      " Profit = 766.3660908883285$.\n",
      "Balance: 70975.1042385654$\n",
      "On 2021-02-26 predicted -1 \n",
      " Profit = -2572.197852356898$.\n",
      "Balance: 68402.9063862085$\n",
      "On 2021-02-27 predicted 1 \n",
      " Profit = 1405.5512178861245$.\n",
      "Balance: 69808.45760409463$\n",
      "On 2021-02-28 predicted 1 \n",
      " Profit = 2344.303735832378$.\n",
      "Balance: 72152.761339927$\n",
      "On 2021-03-01 predicted 1 \n",
      " Profit = -418.0245074251652$.\n",
      "Balance: 71734.73683250183$\n",
      "On 2021-03-02 predicted 1 \n",
      " Profit = 1677.1292391162388$.\n",
      "Balance: 73411.86607161807$\n",
      "On 2021-03-03 predicted 1 \n",
      " Profit = 992.5799466561875$.\n",
      "Balance: 74404.44601827426$\n",
      "On 2021-03-04 predicted 1 \n",
      " Profit = 3838.385990862109$.\n",
      "Balance: 78242.83200913637$\n",
      "On 2021-03-05 predicted 1 \n",
      " Profit = 4529.632294303283$.\n",
      "Balance: 82772.46430343966$\n",
      "On 2021-03-06 predicted 1 \n",
      " Profit = 6019.529776237105$.\n",
      "Balance: 88791.99407967676$\n",
      "On 2021-03-07 predicted 1 \n",
      " Profit = 4248.556795284996$.\n",
      "Balance: 93040.55087496176$\n",
      "On 2021-03-08 predicted 1 \n",
      " Profit = 6408.427400719447$.\n",
      "Balance: 99448.9782756812$\n",
      "On 2021-03-09 predicted 1 \n",
      " Profit = 3249.316976453105$.\n",
      "Balance: 102698.29525213431$\n",
      "On 2021-03-10 predicted 1 \n",
      " Profit = -74.33602543466986$.\n",
      "Balance: 102623.95922669963$\n",
      "On 2021-03-11 predicted 1 \n",
      " Profit = -710.2928340958606$.\n",
      "Balance: 101913.66639260377$\n",
      "On 2021-03-12 predicted 1 \n",
      " Profit = 1094.1532251206154$.\n",
      "Balance: 103007.8196177244$\n",
      "On 2021-03-13 predicted 1 \n",
      " Profit = -2276.798146397734$.\n",
      "Balance: 100731.02147132666$\n",
      "On 2021-03-14 predicted 1 \n",
      " Profit = -649.3170788786156$.\n",
      "Balance: 100081.70439244804$\n",
      "On 2021-03-15 predicted 1 \n",
      " Profit = 1723.1494456286528$.\n",
      "Balance: 101804.8538380767$\n",
      "On 2021-03-16 predicted 1 \n",
      " Profit = 515.0877675330339$.\n",
      "Balance: 102319.94160560973$\n",
      "On 2021-03-17 predicted 1 \n",
      " Profit = -3018.453244206954$.\n",
      "Balance: 99301.48836140276$\n",
      "On 2021-03-18 predicted 1 \n",
      " Profit = -2141.887931673751$.\n",
      "Balance: 97159.600429729$\n",
      "On 2021-03-19 predicted 1 \n",
      " Profit = -3711.6841862043366$.\n",
      "Balance: 93447.91624352467$\n",
      "On 2021-03-20 predicted 1 \n",
      " Profit = -4236.693125634025$.\n",
      "Balance: 89211.22311789065$\n",
      "On 2021-03-21 predicted 1 \n",
      " Profit = -1480.2160851931403$.\n",
      "Balance: 87731.00703269751$\n",
      "On 2021-03-22 predicted 1 \n",
      " Profit = 929.5270558017874$.\n",
      "Balance: 88660.53408849929$\n",
      "On 2021-03-23 predicted 1 \n",
      " Profit = 785.100288929425$.\n",
      "Balance: 89445.63437742871$\n",
      "On 2021-03-24 predicted 1 \n",
      " Profit = 3373.428557758656$.\n",
      "Balance: 92819.06293518736$\n",
      "On 2021-03-25 predicted -1 \n",
      " Profit = -5179.878826450607$.\n",
      "Balance: 87639.18410873675$\n",
      "On 2021-03-26 predicted 1 \n",
      " Profit = 2404.2469345098507$.\n",
      "Balance: 90043.4310432466$\n",
      "On 2021-03-27 predicted 1 \n",
      " Profit = 2009.1097715791475$.\n",
      "Balance: 92052.54081482574$\n",
      "On 2021-03-28 predicted 1 \n",
      " Profit = 2259.6196390140612$.\n",
      "Balance: 94312.16045383981$\n",
      "On 2021-03-29 predicted 1 \n",
      " Profit = -95.57494020601735$.\n",
      "Balance: 94216.58551363379$\n",
      "On 2021-03-30 predicted 1 \n",
      " Profit = -101.79162042508688$.\n",
      "Balance: 94114.7938932087$\n",
      "On 2021-03-31 predicted 1 \n",
      " Profit = 88.84336318978603$.\n",
      "Balance: 94203.63725639848$\n",
      "On 2021-04-01 predicted 1 \n",
      " Profit = -576.0692985247806$.\n",
      "Balance: 93627.56795787369$\n",
      "On 2021-04-02 predicted 1 \n",
      " Profit = -2103.471683552729$.\n",
      "Balance: 91524.09627432097$\n",
      "On 2021-04-03 predicted 1 \n",
      " Profit = 457.6292945388559$.\n",
      "Balance: 91981.72556885982$\n",
      "On 2021-04-04 predicted 1 \n",
      " Profit = -321.5687475392697$.\n",
      "Balance: 91660.15682132056$\n",
      "On 2021-04-05 predicted 1 \n",
      " Profit = 456.52027371480654$.\n",
      "Balance: 92116.67709503537$\n",
      "On 2021-04-06 predicted 1 \n",
      " Profit = 1274.356496961169$.\n",
      "Balance: 93391.03359199653$\n",
      "On 2021-04-07 predicted 1 \n",
      " Profit = 2562.3557119478282$.\n",
      "Balance: 95953.38930394436$\n",
      "On 2021-04-08 predicted 1 \n",
      " Profit = 3408.4860717761476$.\n",
      "Balance: 99361.87537572051$\n",
      "On 2021-04-09 predicted 1 \n",
      " Profit = 3319.528398375667$.\n",
      "Balance: 102681.40377409618$\n",
      "On 2021-04-10 predicted 1 \n",
      " Profit = 2418.4566286590343$.\n",
      "Balance: 105099.8604027552$\n",
      "On 2021-04-11 predicted 1 \n",
      " Profit = 955.1247797912001$.\n",
      "Balance: 106054.9851825464$\n",
      "On 2021-04-12 predicted 1 \n",
      " Profit = 559.8099694614066$.\n",
      "Balance: 106614.7951520078$\n",
      "On 2021-04-13 predicted 1 \n",
      " Profit = -4893.788155962298$.\n",
      "Balance: 101721.0069960455$\n",
      "On 2021-04-14 predicted 1 \n",
      " Profit = -4761.571680775312$.\n",
      "Balance: 96959.43531527018$\n",
      "On 2021-04-15 predicted 1 \n",
      " Profit = -4190.526458635257$.\n",
      "Balance: 92768.90885663492$\n",
      "On 2021-04-16 predicted 1 \n",
      " Profit = -4620.426210356825$.\n",
      "Balance: 88148.4826462781$\n",
      "On 2021-04-17 predicted 1 \n",
      " Profit = -5183.7265078739365$.\n",
      "Balance: 82964.75613840416$\n",
      "On 2021-04-18 predicted -1 \n",
      " Profit = 3023.965903035525$.\n",
      "Balance: 85988.72204143969$\n",
      "On 2021-04-19 predicted -1 \n",
      " Profit = 3501.873201972994$.\n",
      "Balance: 89490.59524341268$\n",
      "On 2021-04-20 predicted -1 \n",
      " Profit = 4734.191280055107$.\n",
      "Balance: 94224.78652346779$\n",
      "On 2021-04-21 predicted -1 \n",
      " Profit = -80.8696871312859$.\n",
      "Balance: 94143.9168363365$\n",
      "On 2021-04-22 predicted -1 \n",
      " Profit = -2379.571232345399$.\n",
      "Balance: 91764.3456039911$\n",
      "On 2021-04-23 predicted 1 \n",
      " Profit = 2680.391145487818$.\n",
      "Balance: 94444.7367494789$\n",
      "On 2021-04-24 predicted -1 \n",
      " Profit = -2644.9670061819415$.\n",
      "Balance: 91799.76974329696$\n",
      "On 2021-04-25 predicted -1 \n",
      " Profit = -6553.501382618237$.\n",
      "Balance: 85246.26836067872$\n",
      "On 2021-04-26 predicted 1 \n",
      " Profit = 2402.5329161378904$.\n",
      "Balance: 87648.80127681661$\n",
      "On 2021-04-27 predicted 1 \n",
      " Profit = 1018.0005623651596$.\n",
      "Balance: 88666.80183918177$\n",
      "On 2021-04-28 predicted 1 \n",
      " Profit = 1536.795947395265$.\n",
      "Balance: 90203.59778657704$\n",
      "On 2021-04-29 predicted 1 \n",
      " Profit = -149.27755381954194$.\n",
      "Balance: 90054.3202327575$\n",
      "On 2021-04-30 predicted 1 \n",
      " Profit = -203.4475860390594$.\n",
      "Balance: 89850.87264671843$\n",
      "On 2021-05-01 predicted 1 \n",
      " Profit = -889.7044341208675$.\n",
      "Balance: 88961.16821259756$\n",
      "On 2021-05-02 predicted 1 \n",
      " Profit = 455.76169122335705$.\n",
      "Balance: 89416.92990382091$\n",
      "On 2021-05-03 predicted 1 \n",
      " Profit = 1002.6427664554285$.\n",
      "Balance: 90419.57267027633$\n",
      "On 2021-05-04 predicted 1 \n",
      " Profit = 3322.0773400217513$.\n",
      "Balance: 93741.6500102981$\n",
      "On 2021-05-05 predicted 1 \n",
      " Profit = -1021.3965891741755$.\n",
      "Balance: 92720.25342112393$\n",
      "On 2021-05-10 predicted -1 \n",
      " Profit = 6041.683890625391$.\n",
      "Balance: 98761.93731174932$\n",
      "On 2021-05-12 predicted -1 \n",
      " Profit = 4511.471275377975$.\n",
      "Balance: 103273.4085871273$\n",
      "On 2021-05-13 predicted -1 \n",
      " Profit = 5655.785675340187$.\n",
      "Balance: 108929.19426246748$\n",
      "On 2021-05-14 predicted -1 \n",
      " Profit = 11249.2808782969$.\n",
      "Balance: 120178.47514076438$\n",
      "On 2021-05-15 predicted -1 \n",
      " Profit = 6145.06289026983$.\n",
      "Balance: 126323.5380310342$\n",
      "On 2021-05-16 predicted -1 \n",
      " Profit = 9953.776674102817$.\n",
      "Balance: 136277.31470513702$\n",
      "On 2021-05-17 predicted -1 \n",
      " Profit = 7513.370708537703$.\n",
      "Balance: 143790.6854136747$\n",
      "On 2021-05-18 predicted -1 \n",
      " Profit = 10909.371721218093$.\n",
      "Balance: 154700.0571348928$\n",
      "On 2021-05-19 predicted -1 \n",
      " Profit = -2848.8670516198836$.\n",
      "Balance: 151851.1900832729$\n",
      "On 2021-05-20 predicted -1 \n",
      " Profit = 3545.4620842513104$.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Balance: 155396.6521675242$\n",
      "On 2021-05-21 predicted -1 \n",
      " Profit = -3315.002397276068$.\n",
      "Balance: 152081.64977024816$\n",
      "On 2021-05-22 predicted -1 \n",
      " Profit = -1459.1034345412336$.\n",
      "Balance: 150622.54633570692$\n",
      "On 2021-05-23 predicted -1 \n",
      " Profit = -1606.307661113693$.\n",
      "Balance: 149016.23867459322$\n",
      "On 2021-05-24 predicted 1 \n",
      " Profit = -6298.392163543904$.\n",
      "Balance: 142717.8465110493$\n"
     ]
    }
   ],
   "source": [
    "bc = Backtester(trading_data, investment_proportion = 0.4)\n",
    "bc.make_money()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "bc1bd2cf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "‚ïí‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï§‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï§‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï§‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïï\n",
      "‚îÇ Date       ‚îÇ   Prediction ‚îÇ   Next_5_day_return ‚îÇ      Loss ‚îÇ\n",
      "‚ïû‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï°\n",
      "‚îÇ 2020-01-02 ‚îÇ       -1.000 ‚îÇ               0.169 ‚îÇ  -674.670 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-03 ‚îÇ       -1.000 ‚îÇ               0.100 ‚îÇ  -373.262 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-04 ‚îÇ       -1.000 ‚îÇ               0.063 ‚îÇ  -226.338 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-05 ‚îÇ       -1.000 ‚îÇ               0.102 ‚îÇ  -355.672 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-07 ‚îÇ       -1.000 ‚îÇ               0.004 ‚îÇ   -11.812 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-08 ‚îÇ       -1.000 ‚îÇ               0.008 ‚îÇ   -26.619 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-09 ‚îÇ       -1.000 ‚îÇ               0.120 ‚îÇ  -401.274 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-10 ‚îÇ       -1.000 ‚îÇ               0.078 ‚îÇ  -248.773 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-11 ‚îÇ       -1.000 ‚îÇ               0.085 ‚îÇ  -262.343 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-12 ‚îÇ       -1.000 ‚îÇ               0.090 ‚îÇ  -266.810 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-18 ‚îÇ        1.000 ‚îÇ              -0.060 ‚îÇ  -180.465 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-22 ‚îÇ       -1.000 ‚îÇ               0.026 ‚îÇ   -79.980 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-23 ‚îÇ       -1.000 ‚îÇ               0.113 ‚îÇ  -339.835 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-24 ‚îÇ       -1.000 ‚îÇ               0.103 ‚îÇ  -295.511 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-25 ‚îÇ       -1.000 ‚îÇ               0.095 ‚îÇ  -260.451 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-26 ‚îÇ       -1.000 ‚îÇ               0.070 ‚îÇ  -186.269 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-27 ‚îÇ       -1.000 ‚îÇ               0.028 ‚îÇ   -70.757 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-01-29 ‚îÇ        1.000 ‚îÇ              -0.034 ‚îÇ   -87.605 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-02 ‚îÇ       -1.000 ‚îÇ               0.048 ‚îÇ  -124.149 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-03 ‚îÇ       -1.000 ‚îÇ               0.062 ‚îÇ  -154.950 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-04 ‚îÇ       -1.000 ‚îÇ               0.102 ‚îÇ  -250.448 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-05 ‚îÇ       -1.000 ‚îÇ               0.025 ‚îÇ   -59.628 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-06 ‚îÇ       -1.000 ‚îÇ               0.049 ‚îÇ  -114.733 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-10 ‚îÇ       -1.000 ‚îÇ               0.003 ‚îÇ    -7.951 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-12 ‚îÇ        1.000 ‚îÇ              -0.062 ‚îÇ  -148.461 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-14 ‚îÇ        1.000 ‚îÇ              -0.066 ‚îÇ  -155.202 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-19 ‚îÇ       -1.000 ‚îÇ               0.002 ‚îÇ    -4.127 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-20 ‚îÇ        1.000 ‚îÇ              -0.028 ‚îÇ   -65.698 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-21 ‚îÇ        1.000 ‚îÇ              -0.089 ‚îÇ  -209.187 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-22 ‚îÇ        1.000 ‚îÇ              -0.091 ‚îÇ  -205.174 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-26 ‚îÇ       -1.000 ‚îÇ               0.006 ‚îÇ   -13.724 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-27 ‚îÇ       -1.000 ‚îÇ               0.000 ‚îÇ    -0.921 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-28 ‚îÇ       -1.000 ‚îÇ               0.010 ‚îÇ   -23.457 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-02-29 ‚îÇ       -1.000 ‚îÇ               0.056 ‚îÇ  -136.415 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-03-01 ‚îÇ       -1.000 ‚îÇ               0.065 ‚îÇ  -156.545 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-03-02 ‚îÇ       -1.000 ‚îÇ               0.005 ‚îÇ   -10.585 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-03-23 ‚îÇ        1.000 ‚îÇ              -0.027 ‚îÇ  -145.670 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-04-12 ‚îÇ       -1.000 ‚îÇ               0.035 ‚îÇ  -192.303 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-04-13 ‚îÇ       -1.000 ‚îÇ               0.044 ‚îÇ  -234.756 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-04-14 ‚îÇ       -1.000 ‚îÇ               0.046 ‚îÇ  -242.216 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-04-15 ‚îÇ       -1.000 ‚îÇ               0.088 ‚îÇ  -458.660 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-04-16 ‚îÇ       -1.000 ‚îÇ               0.046 ‚îÇ  -228.673 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-05 ‚îÇ        1.000 ‚îÇ              -0.027 ‚îÇ  -139.081 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-08 ‚îÇ        1.000 ‚îÇ              -0.058 ‚îÇ  -292.151 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-10 ‚îÇ       -1.000 ‚îÇ               0.065 ‚îÇ  -322.106 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-11 ‚îÇ       -1.000 ‚îÇ               0.090 ‚îÇ  -432.960 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-12 ‚îÇ       -1.000 ‚îÇ               0.098 ‚îÇ  -455.631 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-13 ‚îÇ       -1.000 ‚îÇ               0.049 ‚îÇ  -219.117 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-15 ‚îÇ       -1.000 ‚îÇ               0.021 ‚îÇ   -91.081 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-16 ‚îÇ        1.000 ‚îÇ              -0.031 ‚îÇ  -136.194 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-17 ‚îÇ        1.000 ‚îÇ              -0.050 ‚îÇ  -215.591 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-18 ‚îÇ        1.000 ‚îÇ              -0.053 ‚îÇ  -222.556 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-19 ‚îÇ        1.000 ‚îÇ              -0.096 ‚îÇ  -395.158 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-05-20 ‚îÇ        1.000 ‚îÇ              -0.084 ‚îÇ  -332.260 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-01 ‚îÇ        1.000 ‚îÇ              -0.051 ‚îÇ  -221.541 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-02 ‚îÇ       -1.000 ‚îÇ               0.024 ‚îÇ  -103.282 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-04 ‚îÇ        1.000 ‚îÇ              -0.001 ‚îÇ    -2.154 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-07 ‚îÇ        1.000 ‚îÇ              -0.028 ‚îÇ  -124.511 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-08 ‚îÇ        1.000 ‚îÇ              -0.030 ‚îÇ  -130.982 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-09 ‚îÇ        1.000 ‚îÇ              -0.042 ‚îÇ  -178.183 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-10 ‚îÇ        1.000 ‚îÇ              -0.042 ‚îÇ  -178.344 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-11 ‚îÇ       -1.000 ‚îÇ               0.023 ‚îÇ   -95.710 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-14 ‚îÇ        1.000 ‚îÇ              -0.011 ‚îÇ   -43.127 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-16 ‚îÇ        1.000 ‚îÇ              -0.025 ‚îÇ  -100.801 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-20 ‚îÇ        1.000 ‚îÇ              -0.007 ‚îÇ   -29.904 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-21 ‚îÇ        1.000 ‚îÇ              -0.015 ‚îÇ   -62.325 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-22 ‚îÇ        1.000 ‚îÇ              -0.063 ‚îÇ  -256.113 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-06-23 ‚îÇ        1.000 ‚îÇ              -0.050 ‚îÇ  -201.577 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-01 ‚îÇ       -1.000 ‚îÇ               0.016 ‚îÇ   -63.959 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-02 ‚îÇ       -1.000 ‚îÇ               0.014 ‚îÇ   -56.295 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-03 ‚îÇ       -1.000 ‚îÇ               0.038 ‚îÇ  -148.724 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-04 ‚îÇ       -1.000 ‚îÇ               0.016 ‚îÇ   -62.183 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-05 ‚îÇ       -1.000 ‚îÇ               0.023 ‚îÇ   -87.569 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-07 ‚îÇ       -1.000 ‚îÇ               0.003 ‚îÇ   -10.121 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-08 ‚îÇ        1.000 ‚îÇ              -0.020 ‚îÇ   -75.659 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-13 ‚îÇ        1.000 ‚îÇ              -0.009 ‚îÇ   -35.594 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-15 ‚îÇ       -1.000 ‚îÇ               0.017 ‚îÇ   -65.536 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-16 ‚îÇ       -1.000 ‚îÇ               0.040 ‚îÇ  -154.738 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-17 ‚îÇ       -1.000 ‚îÇ               0.044 ‚îÇ  -167.072 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-18 ‚îÇ       -1.000 ‚îÇ               0.038 ‚îÇ  -142.897 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-20 ‚îÇ       -1.000 ‚îÇ               0.056 ‚îÇ  -206.050 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-21 ‚îÇ       -1.000 ‚îÇ               0.057 ‚îÇ  -203.590 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-23 ‚îÇ       -1.000 ‚îÇ               0.139 ‚îÇ  -519.069 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-24 ‚îÇ       -1.000 ‚îÇ               0.164 ‚îÇ  -578.208 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-25 ‚îÇ       -1.000 ‚îÇ               0.148 ‚îÇ  -488.369 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-07-26 ‚îÇ       -1.000 ‚îÇ               0.143 ‚îÇ  -443.897 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-06 ‚îÇ        1.000 ‚îÇ              -0.031 ‚îÇ   -99.518 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-07 ‚îÇ        1.000 ‚îÇ              -0.001 ‚îÇ    -4.469 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-10 ‚îÇ        1.000 ‚îÇ              -0.001 ‚îÇ    -3.288 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-14 ‚îÇ        1.000 ‚îÇ              -0.001 ‚îÇ    -2.965 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-16 ‚îÇ        1.000 ‚îÇ              -0.025 ‚îÇ   -83.216 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-17 ‚îÇ        1.000 ‚îÇ              -0.047 ‚îÇ  -152.422 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-18 ‚îÇ        1.000 ‚îÇ              -0.027 ‚îÇ   -87.132 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-20 ‚îÇ        1.000 ‚îÇ              -0.043 ‚îÇ  -136.620 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-21 ‚îÇ        1.000 ‚îÇ              -0.009 ‚îÇ   -27.966 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-22 ‚îÇ        1.000 ‚îÇ              -0.031 ‚îÇ   -95.185 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-23 ‚îÇ        1.000 ‚îÇ              -0.010 ‚îÇ   -32.139 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-24 ‚îÇ        1.000 ‚îÇ              -0.023 ‚îÇ   -69.381 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-28 ‚îÇ        1.000 ‚îÇ              -0.011 ‚îÇ   -35.073 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-29 ‚îÇ        1.000 ‚îÇ              -0.110 ‚îÇ  -343.954 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-30 ‚îÇ        1.000 ‚îÇ              -0.102 ‚îÇ  -307.276 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-08-31 ‚îÇ        1.000 ‚îÇ              -0.129 ‚îÇ  -372.190 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-01 ‚îÇ        1.000 ‚îÇ              -0.141 ‚îÇ  -385.151 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-02 ‚îÇ        1.000 ‚îÇ              -0.092 ‚îÇ  -235.523 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-05 ‚îÇ       -1.000 ‚îÇ               0.019 ‚îÇ   -47.893 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-06 ‚îÇ       -1.000 ‚îÇ               0.012 ‚îÇ   -29.284 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-07 ‚îÇ       -1.000 ‚îÇ               0.007 ‚îÇ   -17.402 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-08 ‚îÇ       -1.000 ‚îÇ               0.066 ‚îÇ  -164.340 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-09 ‚îÇ       -1.000 ‚îÇ               0.066 ‚îÇ  -159.808 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-11 ‚îÇ       -1.000 ‚îÇ               0.065 ‚îÇ  -156.453 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-14 ‚îÇ       -1.000 ‚îÇ               0.039 ‚îÇ   -93.286 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-15 ‚îÇ       -1.000 ‚îÇ               0.013 ‚îÇ   -31.050 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-16 ‚îÇ        1.000 ‚îÇ              -0.047 ‚îÇ  -110.229 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-17 ‚îÇ        1.000 ‚îÇ              -0.037 ‚îÇ   -86.828 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-18 ‚îÇ        1.000 ‚îÇ              -0.066 ‚îÇ  -149.791 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-19 ‚îÇ        1.000 ‚îÇ              -0.031 ‚îÇ   -69.829 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-21 ‚îÇ       -1.000 ‚îÇ               0.028 ‚îÇ   -61.776 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-22 ‚îÇ       -1.000 ‚îÇ               0.022 ‚îÇ   -48.977 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-23 ‚îÇ       -1.000 ‚îÇ               0.048 ‚îÇ  -105.033 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-24 ‚îÇ       -1.000 ‚îÇ               0.010 ‚îÇ   -20.432 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-25 ‚îÇ       -1.000 ‚îÇ               0.008 ‚îÇ   -16.883 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-26 ‚îÇ        1.000 ‚îÇ              -0.012 ‚îÇ   -25.733 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-27 ‚îÇ        1.000 ‚îÇ              -0.018 ‚îÇ   -36.898 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-28 ‚îÇ        1.000 ‚îÇ              -0.015 ‚îÇ   -30.317 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-09-29 ‚îÇ        1.000 ‚îÇ              -0.015 ‚îÇ   -31.424 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-10-02 ‚îÇ       -1.000 ‚îÇ               0.009 ‚îÇ   -18.310 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-10-04 ‚îÇ        1.000 ‚îÇ              -0.006 ‚îÇ   -13.092 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-10-05 ‚îÇ        1.000 ‚îÇ              -0.005 ‚îÇ   -10.278 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-11-05 ‚îÇ        1.000 ‚îÇ              -0.019 ‚îÇ   -50.902 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-11-21 ‚îÇ        1.000 ‚îÇ              -0.080 ‚îÇ  -327.078 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-11-22 ‚îÇ        1.000 ‚îÇ              -0.069 ‚îÇ  -271.756 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-11-23 ‚îÇ        1.000 ‚îÇ              -0.035 ‚îÇ  -135.521 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-11-24 ‚îÇ        1.000 ‚îÇ              -0.049 ‚îÇ  -184.663 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-11-26 ‚îÇ       -1.000 ‚îÇ               0.096 ‚îÇ  -365.266 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-11-30 ‚îÇ        1.000 ‚îÇ              -0.024 ‚îÇ   -96.559 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-12-02 ‚îÇ        1.000 ‚îÇ              -0.000 ‚îÇ    -1.984 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-12-03 ‚îÇ        1.000 ‚îÇ              -0.058 ‚îÇ  -232.696 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-12-04 ‚îÇ        1.000 ‚îÇ              -0.008 ‚îÇ   -30.665 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-12-05 ‚îÇ        1.000 ‚îÇ              -0.046 ‚îÇ  -181.960 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-12-06 ‚îÇ        1.000 ‚îÇ              -0.066 ‚îÇ  -255.755 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-12-07 ‚îÇ        1.000 ‚îÇ              -0.020 ‚îÇ   -75.695 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2020-12-19 ‚îÇ        1.000 ‚îÇ              -0.006 ‚îÇ   -34.602 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-06 ‚îÇ        1.000 ‚îÇ              -0.034 ‚îÇ  -617.868 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-07 ‚îÇ        1.000 ‚îÇ              -0.138 ‚îÇ -2469.130 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-08 ‚îÇ        1.000 ‚îÇ              -0.085 ‚îÇ -1438.296 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-09 ‚îÇ        1.000 ‚îÇ              -0.027 ‚îÇ  -431.622 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-10 ‚îÇ        1.000 ‚îÇ              -0.040 ‚îÇ  -642.974 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-13 ‚îÇ        1.000 ‚îÇ              -0.018 ‚îÇ  -299.979 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-14 ‚îÇ        1.000 ‚îÇ              -0.080 ‚îÇ -1288.079 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-15 ‚îÇ        1.000 ‚îÇ              -0.035 ‚îÇ  -543.860 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-16 ‚îÇ        1.000 ‚îÇ              -0.148 ‚îÇ -2287.022 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-17 ‚îÇ        1.000 ‚îÇ              -0.078 ‚îÇ -1131.880 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-18 ‚îÇ        1.000 ‚îÇ              -0.125 ‚îÇ -1755.075 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-19 ‚îÇ        1.000 ‚îÇ              -0.105 ‚îÇ -1403.263 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-20 ‚îÇ        1.000 ‚îÇ              -0.089 ‚îÇ -1148.002 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-22 ‚îÇ        1.000 ‚îÇ              -0.078 ‚îÇ  -986.089 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-01-23 ‚îÇ        1.000 ‚îÇ              -0.013 ‚îÇ  -159.742 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-18 ‚îÇ        1.000 ‚îÇ              -0.055 ‚îÇ -2109.837 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-19 ‚îÇ        1.000 ‚îÇ              -0.111 ‚îÇ -4131.112 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-20 ‚îÇ        1.000 ‚îÇ              -0.161 ‚îÇ -5729.303 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-21 ‚îÇ        1.000 ‚îÇ              -0.195 ‚îÇ -6500.970 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-22 ‚îÇ        1.000 ‚îÇ              -0.148 ‚îÇ -4555.901 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-23 ‚îÇ        1.000 ‚îÇ              -0.076 ‚îÇ -2187.888 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-24 ‚îÇ        1.000 ‚îÇ              -0.001 ‚îÇ   -41.886 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-02-26 ‚îÇ       -1.000 ‚îÇ               0.091 ‚îÇ -2572.198 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-01 ‚îÇ        1.000 ‚îÇ              -0.014 ‚îÇ  -418.025 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-10 ‚îÇ        1.000 ‚îÇ              -0.002 ‚îÇ   -74.336 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-11 ‚îÇ        1.000 ‚îÇ              -0.017 ‚îÇ  -710.293 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-13 ‚îÇ        1.000 ‚îÇ              -0.055 ‚îÇ -2276.798 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-14 ‚îÇ        1.000 ‚îÇ              -0.016 ‚îÇ  -649.317 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-17 ‚îÇ        1.000 ‚îÇ              -0.074 ‚îÇ -3018.453 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-18 ‚îÇ        1.000 ‚îÇ              -0.054 ‚îÇ -2141.888 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-19 ‚îÇ        1.000 ‚îÇ              -0.096 ‚îÇ -3711.684 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-20 ‚îÇ        1.000 ‚îÇ              -0.113 ‚îÇ -4236.693 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-21 ‚îÇ        1.000 ‚îÇ              -0.041 ‚îÇ -1480.216 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-25 ‚îÇ       -1.000 ‚îÇ               0.140 ‚îÇ -5179.879 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-29 ‚îÇ        1.000 ‚îÇ              -0.003 ‚îÇ   -95.575 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-03-30 ‚îÇ        1.000 ‚îÇ              -0.003 ‚îÇ  -101.792 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-01 ‚îÇ        1.000 ‚îÇ              -0.015 ‚îÇ  -576.069 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-02 ‚îÇ        1.000 ‚îÇ              -0.056 ‚îÇ -2103.472 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-04 ‚îÇ        1.000 ‚îÇ              -0.009 ‚îÇ  -321.569 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-13 ‚îÇ        1.000 ‚îÇ              -0.115 ‚îÇ -4893.788 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-14 ‚îÇ        1.000 ‚îÇ              -0.117 ‚îÇ -4761.572 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-15 ‚îÇ        1.000 ‚îÇ              -0.108 ‚îÇ -4190.526 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-16 ‚îÇ        1.000 ‚îÇ              -0.125 ‚îÇ -4620.426 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-17 ‚îÇ        1.000 ‚îÇ              -0.147 ‚îÇ -5183.727 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-21 ‚îÇ       -1.000 ‚îÇ               0.002 ‚îÇ   -80.870 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-22 ‚îÇ       -1.000 ‚îÇ               0.063 ‚îÇ -2379.571 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-24 ‚îÇ       -1.000 ‚îÇ               0.070 ‚îÇ -2644.967 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-25 ‚îÇ       -1.000 ‚îÇ               0.178 ‚îÇ -6553.501 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-29 ‚îÇ        1.000 ‚îÇ              -0.004 ‚îÇ  -149.278 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-04-30 ‚îÇ        1.000 ‚îÇ              -0.006 ‚îÇ  -203.448 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-05-01 ‚îÇ        1.000 ‚îÇ              -0.025 ‚îÇ  -889.704 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-05-05 ‚îÇ        1.000 ‚îÇ              -0.027 ‚îÇ -1021.397 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-05-19 ‚îÇ       -1.000 ‚îÇ               0.046 ‚îÇ -2848.867 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-05-21 ‚îÇ       -1.000 ‚îÇ               0.053 ‚îÇ -3315.002 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-05-22 ‚îÇ       -1.000 ‚îÇ               0.024 ‚îÇ -1459.103 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-05-23 ‚îÇ       -1.000 ‚îÇ               0.027 ‚îÇ -1606.308 ‚îÇ\n",
      "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n",
      "‚îÇ 2021-05-24 ‚îÇ        1.000 ‚îÇ              -0.106 ‚îÇ -6298.392 ‚îÇ\n",
      "‚ïò‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïß‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïß‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïß‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïõ\n"
     ]
    }
   ],
   "source": [
    "from tabulate import tabulate\n",
    "bc.show_drawdowns()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "75fde79f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "bc.show_balance_hist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "da32a637",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "bc.show_returns_hist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a7c15bef",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
